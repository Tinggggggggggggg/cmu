C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

69 86             # string pool total size
# string pool
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 14.4-14.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 2E 36 2D 31 37 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 17.6-17.40: @loop_invariant annotation failed"
69 73 5F 69 6E 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 2E 39 2D 31 39 2E 33 30 29 00  # "is_in (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 19.9-19.30)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 35 2E 34 2D 32 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 25.4-25.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 38 2E 36 2D 32 38 2E 32 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 28.6-28.29: @loop_invariant annotation failed"
69 73 5F 73 6F 72 74 65 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 30 2E 31 30 2D 33 30 2E 33 38 29 00  # "is_sorted (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 30.10-30.38)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 36 2E 34 2D 33 36 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 36.4-36.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 39 2E 36 2D 33 39 2E 33 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 39.6-39.39: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 32 2E 38 2D 34 32 2E 34 33 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 42.8-42.43: @loop_invariant annotation failed"
6E 6F 5F 64 75 70 65 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 34 2E 31 31 2D 34 34 2E 33 34 29 00  # "no_dupes (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 44.11-44.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 32 2E 34 2D 35 32 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 52.4-52.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 33 2E 34 2D 35 33 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 53.4-53.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 31 2E 34 2D 36 31 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 61.4-61.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 34 2E 36 2D 36 34 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 64.6-64.40: @loop_invariant annotation failed"
67 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 36 2E 31 31 2D 36 36 2E 33 34 29 00  # "gt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 66.11-66.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 32 2E 34 2D 37 32 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 72.4-72.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 35 2E 36 2D 37 35 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 75.6-75.40: @loop_invariant annotation failed"
67 65 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 37 2E 31 31 2D 37 37 2E 33 34 29 00  # "ge_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 77.11-77.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 33 2E 34 2D 38 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 83.4-83.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 36 2E 36 2D 38 36 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 86.6-86.40: @loop_invariant annotation failed"
6C 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 38 2E 31 31 2D 38 38 2E 33 34 29 00  # "lt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 88.11-88.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 34 2E 34 2D 39 34 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 94.4-94.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 37 2E 36 2D 39 37 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 97.6-97.40: @loop_invariant annotation failed"
6C 65 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 39 2E 31 31 2D 39 39 2E 33 34 29 00  # "le_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 99.11-99.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 36 2E 34 2D 31 30 36 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 106.4-106.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 107.4-107.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 30 2E 38 2D 31 31 30 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 110.8-110.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 32 2E 31 30 2D 31 31 32 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 112.10-112.48: @loop_invariant annotation failed"
67 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 33 2E 31 33 2D 31 31 33 2E 33 39 29 00  # "gt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 113.13-113.39)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 39 2E 34 2D 31 31 39 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 119.4-119.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 30 2E 34 2D 31 32 30 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 120.4-120.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 33 2E 38 2D 31 32 33 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 123.8-123.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 35 2E 31 30 2D 31 32 35 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 125.10-125.48: @loop_invariant annotation failed"
67 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 36 2E 31 33 2D 31 32 36 2E 33 39 29 00  # "ge_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 126.13-126.39)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 32 2E 34 2D 31 33 32 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 132.4-132.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 133.4-133.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 36 2E 38 2D 31 33 36 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 136.8-136.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 38 2E 31 30 2D 31 33 38 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 138.10-138.48: @loop_invariant annotation failed"
6C 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 39 2E 31 33 2D 31 33 39 2E 33 39 29 00  # "lt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 139.13-139.39)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 35 2E 34 2D 31 34 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 145.4-145.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 146.4-146.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 39 2E 38 2D 31 34 39 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 149.8-149.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 31 2E 31 30 2D 31 35 31 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 151.10-151.48: @loop_invariant annotation failed"
6C 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 32 2E 31 33 2D 31 35 32 2E 33 39 29 00  # "le_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 152.13-152.39)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 37 2E 34 2D 31 35 37 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 157.4-157.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 72 72 61 79 5B 00  # "array["
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 33 2D 31 35 39 2E 33 37 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 33 2D 31 35 39 2E 33 37 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
2C 00  # ","
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 33 2D 31 35 39 2E 33 37 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 33 2D 31 35 39 2E 33 37 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
29 20 3D 20 5B 00  # ") = ["
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 33 2D 31 35 39 2E 33 37 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 31 2E 36 2D 31 36 31 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 161.6-161.40: @loop_invariant annotation failed"
00  # ""
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 33 2E 35 2D 31 36 33 2E 32 33 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)"
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 33 2E 35 2D 31 36 33 2E 32 33 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)"
00  # ""
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 33 2E 35 2D 31 36 33 2E 32 33 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)"
2C 20 00  # ", "
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 34 2E 32 30 2D 31 36 34 2E 33 32 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 164.20-164.32)"
5D 00  # "]"
70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 36 2E 33 2D 31 36 36 2E 31 34 29 00  # "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 166.3-166.14)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 37 2E 34 2D 31 37 37 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 177.4-177.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 69 6E 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 36 2E 31 2D 31 37 37 2E 36 30 29 00  # "is_in__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 176.1-177.60)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 31 2E 34 2D 31 38 31 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 181.4-181.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 73 6F 72 74 65 64 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 30 2E 31 2D 31 38 31 2E 36 30 29 00  # "is_sorted__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 180.1-181.60)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 35 2E 34 2D 31 38 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 185.4-185.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6E 6F 5F 64 75 70 65 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 34 2E 31 2D 31 38 35 2E 35 39 29 00  # "no_dupes__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 184.1-185.59)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 39 2E 34 2D 31 38 39 2E 36 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 189.4-189.66: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 77 61 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 38 2E 31 2D 31 38 39 2E 37 32 29 00  # "swap__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 188.1-189.72)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 34 2E 34 2D 31 39 34 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 194.4-194.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 33 2E 31 2D 31 39 34 2E 35 39 29 00  # "gt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 193.1-194.59)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 38 2E 34 2D 31 39 38 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 198.4-198.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 65 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 37 2E 31 2D 31 39 38 2E 35 39 29 00  # "ge_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 197.1-198.59)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 32 2E 34 2D 32 30 32 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 202.4-202.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 31 2E 31 2D 32 30 32 2E 35 39 29 00  # "lt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 201.1-202.59)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 36 2E 34 2D 32 30 36 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 206.4-206.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 65 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 35 2E 31 2D 32 30 36 2E 35 39 29 00  # "le_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 205.1-206.59)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 32 2E 34 2D 32 31 32 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 212.4-212.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 33 2E 34 2D 32 31 33 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 213.4-213.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 74 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 30 2E 31 2D 32 31 33 2E 36 33 29 00  # "gt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 210.1-213.63)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 38 2E 34 2D 32 31 38 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 218.4-218.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 39 2E 34 2D 32 31 39 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 219.4-219.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 65 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 36 2E 31 2D 32 31 39 2E 36 33 29 00  # "ge_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 216.1-219.63)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 32 34 2E 34 2D 32 32 34 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 224.4-224.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 32 35 2E 34 2D 32 32 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 225.4-225.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 74 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 32 32 2E 31 2D 32 32 35 2E 36 33 29 00  # "lt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 222.1-225.63)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 33 30 2E 34 2D 32 33 30 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 230.4-230.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 33 31 2E 34 2D 32 33 31 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 231.4-231.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 65 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 32 38 2E 31 2D 32 33 31 2E 36 33 29 00  # "le_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 228.1-231.63)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 33 35 2E 34 2D 32 33 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 235.4-235.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 72 69 6E 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 33 34 2E 31 2D 32 33 35 2E 35 39 29 00  # "print_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 234.1-235.59)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 30 2E 36 2D 31 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 33 34 2D 31 35 2E 35 34 29 00  # "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 36 2D 31 35 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 31 36 2D 32 31 2E 33 30 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 36 2D 32 31 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 65 6F 66 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 31 36 2D 32 37 2E 33 30 29 00  # "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 31 36 2D 33 35 2E 33 30 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 36 2D 33 35 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 31 36 2D 33 36 2E 32 37 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 36 2D 33 36 2E 32 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 33 2E 32 37 2D 33 33 2E 35 30 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.27-33.50)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 33 2E 34 2D 33 33 2E 35 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.4-33.51: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 34 2E 32 33 2D 33 34 2E 34 39 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.23-34.49)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 34 2E 31 34 2D 33 34 2E 35 30 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.14-34.50)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 34 2E 34 2D 33 34 2E 35 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.4-34.51: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 39 2E 31 33 2D 33 39 2E 33 36 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 39.13-39.36)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 32 2E 38 2D 34 32 2E 34 32 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 42.8-42.42: @loop_invariant annotation failed"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 31 2E 33 31 2D 34 31 2E 35 37 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.31-41.57)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 31 2E 32 32 2D 34 31 2E 35 38 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.22-41.58)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 37 2E 32 35 2D 34 37 2E 35 31 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.25-47.51)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 37 2E 31 30 2D 34 37 2E 35 32 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.10-47.52)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 35 2E 31 32 2D 33 35 2E 33 34 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.12-35.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 35 2E 34 2D 33 35 2E 33 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.4-35.39: @ensures annotation failed"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 36 2E 32 31 2D 33 36 2E 34 34 29 00  # "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.21-36.44)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 36 2E 34 2D 33 36 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.4-36.45: @ensures annotation failed"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 31 2E 32 38 2D 35 31 2E 35 31 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.28-51.51)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 31 2E 34 2D 35 31 2E 35 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.4-51.52: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 36 2E 31 34 2D 35 36 2E 33 37 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.14-56.37)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 36 2E 35 30 2D 35 36 2E 37 36 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.50-56.76)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 36 2E 34 31 2D 35 36 2E 37 37 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.41-56.77)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 32 2E 32 33 2D 35 32 2E 34 36 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.23-52.46)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 33 2E 32 32 2D 35 33 2E 35 34 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.22-53.54)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 33 2E 31 33 2D 35 33 2E 35 35 29 00  # "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.13-53.55)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 32 2E 34 2D 35 33 2E 35 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.4-53.56: @ensures annotation failed"
72 65 61 64 65 72 5F 76 61 6C 69 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 37 35 2E 35 30 2D 37 35 2E 37 35 29 00  # "reader_valid (/tmp/tmp.n2ZIl2coE0/readfile.c0: 75.50-75.75)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 79.4-79.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 74 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 31 2E 32 37 2D 38 31 2E 35 32 29 00  # "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 81.27-81.52)"
61 74 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 32 2E 31 37 2D 38 32 2E 35 38 29 00  # "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.17-82.58)"
61 74 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 32 2E 38 2D 38 32 2E 35 39 29 00  # "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.8-82.59)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 38 2E 31 37 2D 38 38 2E 33 33 29 00  # "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 88.17-88.33)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 33 32 2D 38 36 2E 34 39 29 00  # "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 34 2D 38 36 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.4-86.50: @ensures annotation failed"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 39 35 2E 37 2D 39 35 2E 32 31 29 00  # "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 95.7-95.21)"
00  # ""
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 30 2E 31 38 2D 31 30 30 2E 33 37 29 00  # "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 100.18-100.37)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 31 2E 32 32 2D 31 30 31 2E 34 37 29 00  # "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 101.22-101.47)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 33 32 2D 38 36 2E 34 39 29 00  # "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 34 2D 38 36 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.4-86.50: @ensures annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 37 2E 32 37 2D 31 30 37 2E 33 38 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.27-107.38)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.4-107.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
00  # ""
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 32 36 2D 31 30 38 2E 33 37 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.4-108.38: @ensures annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 35 2E 32 34 2D 31 31 35 2E 33 35 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.24-115.35)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 35 2E 38 2D 31 31 35 2E 33 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.8-115.36: @loop_invariant annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 34 2E 32 38 2D 31 31 34 2E 35 33 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.28-114.53)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 34 2E 35 38 2D 31 31 34 2E 37 35 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.58-114.75)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 37 2E 32 30 2D 31 31 37 2E 34 32 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 117.20-117.42)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 38 2E 32 34 2D 31 31 38 2E 34 39 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 118.24-118.49)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 32 2E 33 31 2D 31 32 32 2E 35 36 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.31-122.56)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 33 2E 32 37 2D 31 32 33 2E 36 38 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.27-123.68)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 33 2E 31 38 2D 31 32 33 2E 36 39 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.18-123.69)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 34 2E 33 32 2D 31 32 34 2E 35 37 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 124.32-124.57)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 35 2E 31 37 2D 31 32 35 2E 33 34 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 125.17-125.34)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 32 2E 36 2D 31 32 35 2E 33 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.6-125.36: @assert annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 37 2E 32 34 2D 31 32 37 2E 34 39 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 127.24-127.49)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 39 2E 32 35 2D 31 32 39 2E 36 36 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.25-129.66)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 39 2E 31 36 2D 31 32 39 2E 36 37 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.16-129.67)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 39 2E 38 2D 31 32 39 2E 36 38 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.8-129.68: @assert annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 31 2E 31 36 2D 31 33 31 2E 35 34 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 131.16-131.54)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 32 2E 32 32 2D 31 33 32 2E 35 31 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 132.22-132.51)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 32 36 2D 31 30 38 2E 33 37 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.4-108.38: @ensures annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 35 2E 33 34 2D 31 33 35 2E 35 39 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.34-135.59)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 35 2E 38 2D 31 33 35 2E 36 31 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.8-135.61: @assert annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 36 2E 31 35 2D 31 33 36 2E 33 32 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 136.15-136.32)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 36 2E 38 2D 31 33 36 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 136.8-136.33: @assert annotation failed"
00  # ""
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 32 36 2D 31 30 38 2E 33 37 29 00  # "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.4-108.38: @ensures annotation failed"
72 65 76 5F 6C 69 73 74 5F 74 6F 5F 61 72 72 61 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 37 36 2E 31 33 2D 31 37 36 2E 32 37 29 00  # "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 176.13-176.27)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 38 31 2E 38 2D 31 38 31 2E 32 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 181.8-181.26: @assert annotation failed"
72 65 76 5F 6C 69 73 74 5F 74 6F 5F 61 72 72 61 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 37 34 2E 33 32 2D 31 37 34 2E 34 36 29 00  # "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.32-174.46)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 37 34 2E 34 2D 31 37 34 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.4-174.47: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 39 37 2E 36 2D 31 39 37 2E 33 38 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 197.6-197.38: @assert annotation failed"
69 73 5F 73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 30 33 2E 31 30 2D 32 30 33 2E 35 37 29 00  # "is_string_bundle (/tmp/tmp.n2ZIl2coE0/readfile.c0: 203.10-203.57)"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 61 72 72 61 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 30 37 2E 31 33 2D 32 30 37 2E 33 33 29 00  # "string_bundle_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.13-207.33)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 30 37 2E 34 2D 32 30 37 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.4-207.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 6C 65 6E 67 74 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 31 33 2E 31 33 2D 32 31 33 2E 33 33 29 00  # "string_bundle_length (/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.13-213.33)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 31 33 2E 34 2D 32 31 33 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.4-213.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 32 2E 31 37 2D 32 32 32 2E 33 37 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 222.17-222.37)"
43 61 6E 6E 6F 74 20 6F 70 65 6E 20 66 69 6C 65 20 27 00  # "Cannot open file \'"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 34 2E 32 33 2D 32 32 34 2E 36 36 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.23-224.66)"
27 00  # "\'"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 34 2E 31 31 2D 32 32 34 2E 37 32 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.11-224.72)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 38 2E 31 34 2D 32 32 38 2E 32 36 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 228.14-228.26)"
00  # ""
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 33 2E 31 31 2D 32 33 33 2E 33 30 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 233.11-233.30)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 34 2E 39 2D 32 33 34 2E 32 34 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 234.9-234.24)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 35 2E 39 2D 32 33 35 2E 32 31 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 235.9-235.21)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 37 2E 31 38 2D 32 33 37 2E 32 37 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 237.18-237.27)"
54 6F 6F 20 6D 61 6E 79 20 77 6F 72 64 73 20 69 6E 20 69 6E 70 75 74 20 66 69 6C 65 00  # "Too many words in input file"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 34 36 2E 31 36 2D 32 34 36 2E 33 36 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 246.16-246.36)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 30 2E 31 32 2D 32 32 30 2E 33 37 29 00  # "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 220.12-220.37)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 30 2E 34 2D 32 32 30 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 220.4-220.38: @ensures annotation failed"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 61 72 72 61 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 36 38 2E 31 2D 32 36 39 2E 36 33 29 00  # "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 268.1-269.63)"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 61 72 72 61 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 36 39 2E 33 32 2D 32 36 39 2E 35 36 29 00  # "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.32-269.56)"
2F 74 6D 70 2F 74 6D 70 2E 6E 32 5A 49 6C 32 63 6F 45 30 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 36 39 2E 34 2D 32 36 39 2E 35 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.4-269.57: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 38 2E 36 2D 38 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 37 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 14.4-14.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 77 6F 72 64 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 35 2E 31 33 2D 31 35 2E 33 32 29 00  # "check_word (speller.c0: 15.13-15.32)"
63 68 65 63 6B 5F 77 6F 72 64 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 35 2E 33 36 2D 31 35 2E 35 34 29 00  # "check_word (speller.c0: 15.36-15.54)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 35 2E 34 2D 31 35 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 15.4-15.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 32 30 2E 36 2D 32 30 2E 35 32 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 20.6-20.52: @loop_invariant annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 32 33 2E 38 2D 32 33 2E 33 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 23.8-23.37: @assert annotation failed"
63 68 65 63 6B 5F 77 6F 72 64 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 32 35 2E 39 2D 32 35 2E 33 32 29 00  # "check_word (speller.c0: 25.9-25.32)"
63 68 65 63 6B 5F 77 6F 72 64 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 32 36 2E 39 2D 32 36 2E 33 35 29 00  # "check_word (speller.c0: 26.9-26.35)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 33 32 2E 36 2D 33 32 2E 32 32 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 32.6-32.22: @assert annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 37.4-37.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 33 38 2E 34 2D 33 38 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 38.4-38.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 33 39 2E 34 2D 33 39 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 39.4-39.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 74 65 78 74 5F 6E 61 69 76 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 30 2E 31 33 2D 34 30 2E 33 32 29 00  # "check_text_naive (speller.c0: 40.13-40.32)"
63 68 65 63 6B 5F 74 65 78 74 5F 6E 61 69 76 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 30 2E 33 36 2D 34 30 2E 35 34 29 00  # "check_text_naive (speller.c0: 40.36-40.54)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 30 2E 34 2D 34 30 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 40.4-40.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 74 65 78 74 5F 6E 61 69 76 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 36 2E 31 30 2D 34 36 2E 33 38 29 00  # "check_text_naive (speller.c0: 46.10-46.38)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 31 2E 34 2D 34 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 41.4-41.41: @ensures annotation failed"
63 68 65 63 6B 5F 74 65 78 74 5F 6E 61 69 76 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 33 38 29 00  # "check_text_naive (speller.c0: 42.12-42.38)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 34 32 2E 34 2D 34 32 2E 33 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 42.4-42.39: @ensures annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 35 2E 34 2D 35 35 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 55.4-55.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 36 2E 34 2D 35 36 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 56.4-56.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 34 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 57.4-57.42: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 38 2E 31 33 2D 35 38 2E 33 34 29 00  # "check_sorted_text (speller.c0: 58.13-58.34)"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 38 2E 33 38 2D 35 38 2E 35 38 29 00  # "check_sorted_text (speller.c0: 58.38-58.58)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 38 2E 34 2D 35 38 2E 35 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 58.4-58.59: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 39 2E 31 33 2D 35 39 2E 33 34 29 00  # "check_sorted_text (speller.c0: 59.13-59.34)"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 39 2E 33 38 2D 35 39 2E 35 38 29 00  # "check_sorted_text (speller.c0: 59.38-59.58)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 35 39 2E 34 2D 35 39 2E 35 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 59.4-59.59: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 37 31 2E 36 2D 37 31 2E 34 34 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 71.6-71.44: @loop_invariant annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 37 32 2E 36 2D 37 32 2E 34 34 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 72.6-72.44: @loop_invariant annotation failed"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 37 36 2E 39 2D 37 36 2E 33 37 29 00  # "check_sorted_text (speller.c0: 76.9-76.37)"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 37 38 2E 31 36 2D 37 38 2E 34 34 29 00  # "check_sorted_text (speller.c0: 78.16-78.44)"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 38 32 2E 31 36 2D 38 32 2E 34 31 29 00  # "check_sorted_text (speller.c0: 82.16-82.41)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 36 30 2E 34 2D 36 30 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 60.4-60.41: @ensures annotation failed"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 36 31 2E 31 32 2D 36 31 2E 33 39 29 00  # "check_sorted_text (speller.c0: 61.12-61.39)"
63 68 65 63 6B 5F 73 6F 72 74 65 64 5F 74 65 78 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 36 31 2E 34 33 2D 36 31 2E 36 39 29 00  # "check_sorted_text (speller.c0: 61.43-61.69)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 36 31 2E 34 2D 36 31 2E 37 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 61.4-61.70: @ensures annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 34 2E 34 2D 31 30 34 2E 37 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 104.4-104.73: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 35 2E 31 33 2D 31 30 35 2E 33 35 29 00  # "merge (speller.c0: 105.13-105.35)"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 35 2E 33 39 2D 31 30 35 2E 36 30 29 00  # "merge (speller.c0: 105.39-105.60)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 35 2E 34 2D 31 30 35 2E 36 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 105.4-105.61: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 36 2E 31 33 2D 31 30 36 2E 33 35 29 00  # "merge (speller.c0: 106.13-106.35)"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 36 2E 33 39 2D 31 30 36 2E 36 30 29 00  # "merge (speller.c0: 106.39-106.60)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 36 2E 34 2D 31 30 36 2E 36 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 106.4-106.61: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 31 36 2E 36 2D 31 31 36 2E 35 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 116.6-116.50: @loop_invariant annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 31 37 2E 36 2D 31 31 37 2E 35 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 117.6-117.50: @loop_invariant annotation failed"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 32 31 2E 39 2D 31 32 31 2E 33 36 29 00  # "merge (speller.c0: 121.9-121.36)"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 32 35 2E 31 36 2D 31 32 35 2E 34 33 29 00  # "merge (speller.c0: 125.16-125.43)"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 32 39 2E 31 36 2D 31 32 39 2E 34 31 29 00  # "merge (speller.c0: 129.16-129.41)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 34 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 107.4-107.49: @ensures annotation failed"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 38 2E 31 32 2D 31 30 38 2E 34 34 29 00  # "merge (speller.c0: 108.12-108.44)"
6D 65 72 67 65 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 38 2E 34 38 2D 31 30 38 2E 37 39 29 00  # "merge (speller.c0: 108.48-108.79)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 38 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 108.4-108.80: @ensures annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 33 2E 34 2D 31 36 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 163.4-163.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 34 2E 34 2D 31 36 34 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 164.4-164.47: @ensures annotation failed"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 35 2E 31 32 2D 31 36 35 2E 34 32 29 00  # "mergesort (speller.c0: 165.12-165.42)"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 35 2E 34 36 2D 31 36 35 2E 37 35 29 00  # "mergesort (speller.c0: 165.46-165.75)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 35 2E 34 2D 31 36 35 2E 37 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 165.4-165.76: @ensures annotation failed"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 32 2E 31 34 2D 31 37 32 2E 33 33 29 00  # "mergesort (speller.c0: 172.14-172.33)"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 33 2E 31 33 2D 31 37 33 2E 33 32 29 00  # "mergesort (speller.c0: 173.13-173.32)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 33 2E 36 2D 31 37 33 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 173.6-173.33: @assert annotation failed"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 34 2E 31 35 2D 31 37 34 2E 33 34 29 00  # "mergesort (speller.c0: 174.15-174.34)"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 35 2E 31 33 2D 31 37 35 2E 33 32 29 00  # "mergesort (speller.c0: 175.13-175.32)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 35 2E 36 2D 31 37 35 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 175.6-175.33: @assert annotation failed"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 37 36 2E 31 36 2D 31 37 36 2E 34 39 29 00  # "mergesort (speller.c0: 176.16-176.49)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 34 2E 34 2D 31 36 34 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 164.4-164.47: @ensures annotation failed"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 35 2E 31 32 2D 31 36 35 2E 34 32 29 00  # "mergesort (speller.c0: 165.12-165.42)"
6D 65 72 67 65 73 6F 72 74 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 35 2E 34 36 2D 31 36 35 2E 37 35 29 00  # "mergesort (speller.c0: 165.46-165.75)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 36 35 2E 34 2D 31 36 35 2E 37 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 165.4-165.76: @ensures annotation failed"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 31 2E 34 2D 31 38 31 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 181.4-181.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 32 2E 34 2D 31 38 32 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 182.4-182.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 33 2E 34 2D 31 38 33 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 183.4-183.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 74 65 78 74 5F 62 65 74 74 65 72 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 34 2E 31 33 2D 31 38 34 2E 33 32 29 00  # "check_text_better (speller.c0: 184.13-184.32)"
63 68 65 63 6B 5F 74 65 78 74 5F 62 65 74 74 65 72 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 34 2E 33 36 2D 31 38 34 2E 35 34 29 00  # "check_text_better (speller.c0: 184.36-184.54)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 34 2E 34 2D 31 38 34 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "speller.c0: 184.4-184.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 5F 74 65 78 74 5F 62 65 74 74 65 72 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 39 2E 32 30 2D 31 38 39 2E 34 31 29 00  # "check_text_better (speller.c0: 189.20-189.41)"
63 68 65 63 6B 5F 74 65 78 74 5F 62 65 74 74 65 72 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 39 34 2E 31 37 2D 31 39 34 2E 36 37 29 00  # "check_text_better (speller.c0: 194.17-194.67)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 35 2E 34 2D 31 38 35 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 185.4-185.41: @ensures annotation failed"
63 68 65 63 6B 5F 74 65 78 74 5F 62 65 74 74 65 72 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 36 2E 31 32 2D 31 38 36 2E 33 39 29 00  # "check_text_better (speller.c0: 186.12-186.39)"
63 68 65 63 6B 5F 74 65 78 74 5F 62 65 74 74 65 72 20 28 73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 36 2E 34 33 2D 31 38 36 2E 36 39 29 00  # "check_text_better (speller.c0: 186.43-186.69)"
73 70 65 6C 6C 65 72 2E 63 30 3A 20 31 38 36 2E 34 2D 31 38 36 2E 37 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "speller.c0: 186.4-186.70: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 74 6F 6B 65 6E 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 33 34 2D 32 33 2E 34 37 29 00  # "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 31 35 2D 32 37 2E 33 34 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 33 34 2D 32 38 2E 34 37 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
61 70 70 6C 65 20 62 6C 75 65 20 63 68 69 6E 61 20 64 65 66 20 65 72 61 20 66 61 74 20 67 68 6F 73 74 20 68 69 64 65 00  # "apple blue china def era fat ghost hide"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 31 36 2E 31 39 2D 31 36 2E 37 34 29 00  # "main (speller-test.c0: 16.19-16.74)"
61 70 70 6C 6C 00  # "appll"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 31 38 2E 31 31 2D 31 38 2E 34 30 29 00  # "main (speller-test.c0: 18.11-18.40)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 31 38 2E 33 2D 31 38 2E 34 32 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 18.3-18.42: assert failed"
61 70 70 6C 65 00  # "apple"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 31 39 2E 31 30 2D 31 39 2E 33 39 29 00  # "main (speller-test.c0: 19.10-19.39)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 31 39 2E 33 2D 31 39 2E 34 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 19.3-19.41: assert failed"
68 69 64 65 00  # "hide"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 30 2E 31 30 2D 32 30 2E 33 38 29 00  # "main (speller-test.c0: 20.10-20.38)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 30 2E 33 2D 32 30 2E 34 30 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 20.3-20.40: assert failed"
68 69 64 79 00  # "hidy"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 31 2E 31 31 2D 32 31 2E 33 39 29 00  # "main (speller-test.c0: 21.11-21.39)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 31 2E 33 2D 32 31 2E 34 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 21.3-21.41: assert failed"
63 68 74 6E 61 61 00  # "chtnaa"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 33 2E 31 31 2D 32 33 2E 34 31 29 00  # "main (speller-test.c0: 23.11-23.41)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 33 2E 33 2D 32 33 2E 34 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 23.3-23.43: assert failed"
67 64 6F 73 74 74 00  # "gdostt"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 34 2E 31 31 2D 32 34 2E 34 31 29 00  # "main (speller-test.c0: 24.11-24.41)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 34 2E 33 2D 32 34 2E 34 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 24.3-24.43: assert failed"
65 72 61 00  # "era"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 35 2E 31 30 2D 32 35 2E 33 37 29 00  # "main (speller-test.c0: 25.10-25.37)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 35 2E 33 2D 32 35 2E 33 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 25.3-25.39: assert failed"
62 6C 75 65 00  # "blue"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 36 2E 31 30 2D 32 36 2E 33 38 29 00  # "main (speller-test.c0: 26.10-26.38)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 36 2E 33 2D 32 36 2E 34 30 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 26.3-26.40: assert failed"
6B 69 74 63 68 65 6E 00  # "kitchen"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 38 2E 31 31 2D 32 38 2E 34 32 29 00  # "main (speller-test.c0: 28.11-28.42)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 38 2E 33 2D 32 38 2E 34 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 28.3-28.44: assert failed"
61 62 6F 72 74 00  # "abort"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 39 2E 31 31 2D 32 39 2E 34 30 29 00  # "main (speller-test.c0: 29.11-29.40)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 32 39 2E 33 2D 32 39 2E 34 32 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 29.3-29.42: assert failed"
74 65 78 74 73 2F 73 6D 61 6C 6C 2D 64 69 63 74 2E 74 78 74 00  # "texts/small-dict.txt"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 32 2E 31 37 2D 33 32 2E 35 31 29 00  # "main (speller-test.c0: 32.17-32.51)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 33 2E 32 34 2D 33 33 2E 34 37 29 00  # "main (speller-test.c0: 33.24-33.47)"
61 61 69 6C 69 74 79 00  # "aaility"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 34 2E 31 31 2D 33 34 2E 34 37 29 00  # "main (speller-test.c0: 34.11-34.47)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 34.3-34.49: assert failed"
75 7A 75 61 6C 00  # "uzual"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 35 2E 31 31 2D 33 35 2E 34 35 29 00  # "main (speller-test.c0: 35.11-35.45)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 35 2E 33 2D 33 35 2E 34 37 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 35.3-35.47: assert failed"
77 61 6B 65 00  # "wake"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 36 2E 31 31 2D 33 36 2E 34 34 29 00  # "main (speller-test.c0: 36.11-36.44)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 36 2E 33 2D 33 36 2E 34 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 36.3-36.46: assert failed"
61 62 69 6C 69 74 79 00  # "ability"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 37 2E 31 30 2D 33 37 2E 34 36 29 00  # "main (speller-test.c0: 37.10-37.46)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 37 2E 33 2D 33 37 2E 34 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 37.3-37.48: assert failed"
68 6F 77 65 76 65 72 00  # "however"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 38 2E 31 30 2D 33 38 2E 34 36 29 00  # "main (speller-test.c0: 38.10-38.46)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 38 2E 33 2D 33 38 2E 34 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 38.3-38.48: assert failed"
73 74 72 6F 6E 67 00  # "strong"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 39 2E 31 30 2D 33 39 2E 34 35 29 00  # "main (speller-test.c0: 39.10-39.45)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 33 39 2E 33 2D 33 39 2E 34 37 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 39.3-39.47: assert failed"
75 73 75 61 6C 00  # "usual"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 34 30 2E 31 30 2D 34 30 2E 34 34 29 00  # "main (speller-test.c0: 40.10-40.44)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 34 30 2E 33 2D 34 30 2E 34 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 40.3-40.46: assert failed"
61 70 70 6C 65 20 62 6C 75 65 20 63 68 69 6E 61 20 64 65 66 20 65 72 61 20 66 61 74 20 67 68 6F 73 74 20 68 69 64 65 00  # "apple blue china def era fat ghost hide"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 34 36 2E 32 30 2D 34 36 2E 37 35 29 00  # "main (speller-test.c0: 46.20-46.75)"
62 6C 75 65 20 61 70 70 6C 20 63 63 69 6E 61 20 64 65 66 20 66 61 74 74 79 20 64 65 66 20 64 65 66 20 68 69 64 65 20 67 68 6F 73 74 00  # "blue appl ccina def fatty def def hide ghost"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 34 37 2E 31 37 2D 34 37 2E 37 37 29 00  # "main (speller-test.c0: 47.17-47.77)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 34 39 2E 31 30 2D 34 39 2E 35 31 29 00  # "main (speller-test.c0: 49.10-49.51)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 34 39 2E 33 2D 34 39 2E 35 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 49.3-49.58: assert failed"
20 00  # " "
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 31 2E 32 30 2D 35 31 2E 33 37 29 00  # "main (speller-test.c0: 51.20-51.37)"
62 6C 75 65 20 63 63 69 6E 61 20 61 70 70 6C 6C 20 64 65 66 20 66 61 74 74 79 20 64 65 66 20 64 65 66 20 68 69 64 65 20 67 68 6F 73 74 00  # "blue ccina appll def fatty def def hide ghost"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 32 2E 31 37 2D 35 32 2E 37 38 29 00  # "main (speller-test.c0: 52.17-52.78)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 34 2E 31 30 2D 35 34 2E 35 31 29 00  # "main (speller-test.c0: 54.10-54.51)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 34 2E 33 2D 35 34 2E 35 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 54.3-54.58: assert failed"
61 70 70 6C 65 20 62 6C 75 65 20 63 68 69 6E 61 20 64 65 66 20 65 72 61 20 66 61 74 20 67 68 6F 73 74 20 68 69 64 65 00  # "apple blue china def era fat ghost hide"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 36 2E 32 30 2D 35 36 2E 37 35 29 00  # "main (speller-test.c0: 56.20-56.75)"
20 00  # " "
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 37 2E 31 37 2D 35 37 2E 33 34 29 00  # "main (speller-test.c0: 57.17-57.34)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 39 2E 31 30 2D 35 39 2E 35 31 29 00  # "main (speller-test.c0: 59.10-59.51)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 35 39 2E 33 2D 35 39 2E 35 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 59.3-59.58: assert failed"
61 61 20 62 62 20 63 63 20 64 64 20 65 65 20 66 66 20 67 67 20 68 68 20 69 69 20 6A 6A 20 6B 6B 20 6C 6C 20 6D 6D 00  # "aa bb cc dd ee ff gg hh ii jj kk ll mm"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 31 2E 32 30 2D 36 31 2E 37 34 29 00  # "main (speller-test.c0: 61.20-61.74)"
65 67 20 63 6A 20 75 75 20 61 61 20 64 64 20 64 64 00  # "eg cj uu aa dd dd"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 32 2E 31 37 2D 36 32 2E 35 30 29 00  # "main (speller-test.c0: 62.17-62.50)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 34 2E 31 30 2D 36 34 2E 35 32 29 00  # "main (speller-test.c0: 64.10-64.52)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 34 2E 33 2D 36 34 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 64.3-64.59: assert failed"
74 65 78 74 73 2F 73 63 6F 74 74 2D 74 77 65 65 74 2E 74 78 74 00  # "texts/scott-tweet.txt"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 36 2E 31 37 2D 36 36 2E 35 32 29 00  # "main (speller-test.c0: 66.17-66.52)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 37 2E 32 35 2D 36 37 2E 34 38 29 00  # "main (speller-test.c0: 67.25-67.48)"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 39 2E 31 30 2D 36 39 2E 36 30 29 00  # "main (speller-test.c0: 69.10-69.60)"
73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 36 39 2E 33 2D 36 39 2E 36 37 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "speller-test.c0: 69.3-69.67: assert failed"
41 6C 6C 20 74 65 73 74 73 20 70 61 73 73 65 64 21 0A 00  # "All tests passed!\n"
6D 61 69 6E 20 28 73 70 65 6C 6C 65 72 2D 74 65 73 74 2E 63 30 3A 20 38 36 2E 33 2D 38 36 2E 33 32 29 00  # "main (speller-test.c0: 86.3-86.32)"

00 66             # function count
# function_pool

#<main>
00                # number of arguments = 0
14                # number of local variables = 20
02 AC             # code length = 684 bytes
14 5E FC # aldc 24316         # s[24316] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
14 5F 0C # aldc 24332         # s[24332] = "apple blue china def era fat ghost hide"
14 5F 34 # aldc 24372         # s[24372] = "main (speller-test.c0: 16.19-16.74)"
B8 00 64 # invokestatic 100   # parse_tokens__1("apple blue china def era fat ghost hide", "main (speller-test.c0: 16.19-16.74)")
36 02    # vstore 2           # sdict = parse_tokens__1("apple blue china def era fat ghost hide", "main (speller-test.c0: 16.19-16.74)");
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 5F 58 # aldc 24408         # s[24408] = "appll"
14 5F 5E # aldc 24414         # s[24414] = "main (speller-test.c0: 18.11-18.40)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "appll", "main (speller-test.c0: 18.11-18.40)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(sdict, 8, "appll", "main (speller-test.c0: 18.11-18.40)"))
14 5F 82 # aldc 24450         # s[24450] = "speller-test.c0: 18.3-18.42: assert failed"
CF       # assert             # assert !(check_word(sdict, 8, "appll", "main (speller-test.c0: 18.11-18.40)")) [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 5F AD # aldc 24493         # s[24493] = "apple"
14 5F B3 # aldc 24499         # s[24499] = "main (speller-test.c0: 19.10-19.39)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "apple", "main (speller-test.c0: 19.10-19.39)")
14 5F D7 # aldc 24535         # s[24535] = "speller-test.c0: 19.3-19.41: assert failed"
CF       # assert             # assert check_word(sdict, 8, "apple", "main (speller-test.c0: 19.10-19.39)") [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 60 02 # aldc 24578         # s[24578] = "hide"
14 60 07 # aldc 24583         # s[24583] = "main (speller-test.c0: 20.10-20.38)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "hide", "main (speller-test.c0: 20.10-20.38)")
14 60 2B # aldc 24619         # s[24619] = "speller-test.c0: 20.3-20.40: assert failed"
CF       # assert             # assert check_word(sdict, 8, "hide", "main (speller-test.c0: 20.10-20.38)") [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 60 56 # aldc 24662         # s[24662] = "hidy"
14 60 5B # aldc 24667         # s[24667] = "main (speller-test.c0: 21.11-21.39)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "hidy", "main (speller-test.c0: 21.11-21.39)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(sdict, 8, "hidy", "main (speller-test.c0: 21.11-21.39)"))
14 60 7F # aldc 24703         # s[24703] = "speller-test.c0: 21.3-21.41: assert failed"
CF       # assert             # assert !(check_word(sdict, 8, "hidy", "main (speller-test.c0: 21.11-21.39)")) [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 60 AA # aldc 24746         # s[24746] = "chtnaa"
14 60 B1 # aldc 24753         # s[24753] = "main (speller-test.c0: 23.11-23.41)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "chtnaa", "main (speller-test.c0: 23.11-23.41)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(sdict, 8, "chtnaa", "main (speller-test.c0: 23.11-23.41)"))
14 60 D5 # aldc 24789         # s[24789] = "speller-test.c0: 23.3-23.43: assert failed"
CF       # assert             # assert !(check_word(sdict, 8, "chtnaa", "main (speller-test.c0: 23.11-23.41)")) [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 61 00 # aldc 24832         # s[24832] = "gdostt"
14 61 07 # aldc 24839         # s[24839] = "main (speller-test.c0: 24.11-24.41)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "gdostt", "main (speller-test.c0: 24.11-24.41)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(sdict, 8, "gdostt", "main (speller-test.c0: 24.11-24.41)"))
14 61 2B # aldc 24875         # s[24875] = "speller-test.c0: 24.3-24.43: assert failed"
CF       # assert             # assert !(check_word(sdict, 8, "gdostt", "main (speller-test.c0: 24.11-24.41)")) [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 61 56 # aldc 24918         # s[24918] = "era"
14 61 5A # aldc 24922         # s[24922] = "main (speller-test.c0: 25.10-25.37)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "era", "main (speller-test.c0: 25.10-25.37)")
14 61 7E # aldc 24958         # s[24958] = "speller-test.c0: 25.3-25.39: assert failed"
CF       # assert             # assert check_word(sdict, 8, "era", "main (speller-test.c0: 25.10-25.37)") [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 61 A9 # aldc 25001         # s[25001] = "blue"
14 61 AE # aldc 25006         # s[25006] = "main (speller-test.c0: 26.10-26.38)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "blue", "main (speller-test.c0: 26.10-26.38)")
14 61 D2 # aldc 25042         # s[25042] = "speller-test.c0: 26.3-26.40: assert failed"
CF       # assert             # assert check_word(sdict, 8, "blue", "main (speller-test.c0: 26.10-26.38)") [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 61 FD # aldc 25085         # s[25085] = "kitchen"
14 62 05 # aldc 25093         # s[25093] = "main (speller-test.c0: 28.11-28.42)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "kitchen", "main (speller-test.c0: 28.11-28.42)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(sdict, 8, "kitchen", "main (speller-test.c0: 28.11-28.42)"))
14 62 29 # aldc 25129         # s[25129] = "speller-test.c0: 28.3-28.44: assert failed"
CF       # assert             # assert !(check_word(sdict, 8, "kitchen", "main (speller-test.c0: 28.11-28.42)")) [failure message on stack]
15 02    # vload 2            # sdict
10 08    # bipush 8           # 8
14 62 54 # aldc 25172         # s[25172] = "abort"
14 62 5A # aldc 25178         # s[25178] = "main (speller-test.c0: 29.11-29.40)"
B8 00 5A # invokestatic 90    # check_word(sdict, 8, "abort", "main (speller-test.c0: 29.11-29.40)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(sdict, 8, "abort", "main (speller-test.c0: 29.11-29.40)"))
14 62 7E # aldc 25214         # s[25214] = "speller-test.c0: 29.3-29.42: assert failed"
CF       # assert             # assert !(check_word(sdict, 8, "abort", "main (speller-test.c0: 29.11-29.40)")) [failure message on stack]
14 62 A9 # aldc 25257         # s[25257] = "texts/small-dict.txt"
14 62 BE # aldc 25278         # s[25278] = "main (speller-test.c0: 32.17-32.51)"
B8 00 54 # invokestatic 84    # read_words("texts/small-dict.txt", "main (speller-test.c0: 32.17-32.51)")
36 03    # vstore 3           # sD = read_words("texts/small-dict.txt", "main (speller-test.c0: 32.17-32.51)");
15 03    # vload 3            # sD
14 62 E2 # aldc 25314         # s[25314] = "main (speller-test.c0: 33.24-33.47)"
B8 00 55 # invokestatic 85    # string_bundle_array__1(sD, "main (speller-test.c0: 33.24-33.47)")
36 04    # vstore 4           # smallDict = string_bundle_array__1(sD, "main (speller-test.c0: 33.24-33.47)");
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 63 06 # aldc 25350         # s[25350] = "aaility"
14 63 0E # aldc 25358         # s[25358] = "main (speller-test.c0: 34.11-34.47)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "aaility", "main (speller-test.c0: 34.11-34.47)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(smallDict, 42, "aaility", "main (speller-test.c0: 34.11-34.47)"))
14 63 32 # aldc 25394         # s[25394] = "speller-test.c0: 34.3-34.49: assert failed"
CF       # assert             # assert !(check_word(smallDict, 42, "aaility", "main (speller-test.c0: 34.11-34.47)")) [failure message on stack]
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 63 5D # aldc 25437         # s[25437] = "uzual"
14 63 63 # aldc 25443         # s[25443] = "main (speller-test.c0: 35.11-35.45)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "uzual", "main (speller-test.c0: 35.11-35.45)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(smallDict, 42, "uzual", "main (speller-test.c0: 35.11-35.45)"))
14 63 87 # aldc 25479         # s[25479] = "speller-test.c0: 35.3-35.47: assert failed"
CF       # assert             # assert !(check_word(smallDict, 42, "uzual", "main (speller-test.c0: 35.11-35.45)")) [failure message on stack]
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 63 B2 # aldc 25522         # s[25522] = "wake"
14 63 B7 # aldc 25527         # s[25527] = "main (speller-test.c0: 36.11-36.44)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "wake", "main (speller-test.c0: 36.11-36.44)")
10 01    # bipush 1           # 
82       # ixor               # !(check_word(smallDict, 42, "wake", "main (speller-test.c0: 36.11-36.44)"))
14 63 DB # aldc 25563         # s[25563] = "speller-test.c0: 36.3-36.46: assert failed"
CF       # assert             # assert !(check_word(smallDict, 42, "wake", "main (speller-test.c0: 36.11-36.44)")) [failure message on stack]
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 64 06 # aldc 25606         # s[25606] = "ability"
14 64 0E # aldc 25614         # s[25614] = "main (speller-test.c0: 37.10-37.46)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "ability", "main (speller-test.c0: 37.10-37.46)")
14 64 32 # aldc 25650         # s[25650] = "speller-test.c0: 37.3-37.48: assert failed"
CF       # assert             # assert check_word(smallDict, 42, "ability", "main (speller-test.c0: 37.10-37.46)") [failure message on stack]
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 64 5D # aldc 25693         # s[25693] = "however"
14 64 65 # aldc 25701         # s[25701] = "main (speller-test.c0: 38.10-38.46)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "however", "main (speller-test.c0: 38.10-38.46)")
14 64 89 # aldc 25737         # s[25737] = "speller-test.c0: 38.3-38.48: assert failed"
CF       # assert             # assert check_word(smallDict, 42, "however", "main (speller-test.c0: 38.10-38.46)") [failure message on stack]
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 64 B4 # aldc 25780         # s[25780] = "strong"
14 64 BB # aldc 25787         # s[25787] = "main (speller-test.c0: 39.10-39.45)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "strong", "main (speller-test.c0: 39.10-39.45)")
14 64 DF # aldc 25823         # s[25823] = "speller-test.c0: 39.3-39.47: assert failed"
CF       # assert             # assert check_word(smallDict, 42, "strong", "main (speller-test.c0: 39.10-39.45)") [failure message on stack]
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
14 65 0A # aldc 25866         # s[25866] = "usual"
14 65 10 # aldc 25872         # s[25872] = "main (speller-test.c0: 40.10-40.44)"
B8 00 5A # invokestatic 90    # check_word(smallDict, 42, "usual", "main (speller-test.c0: 40.10-40.44)")
14 65 34 # aldc 25908         # s[25908] = "speller-test.c0: 40.3-40.46: assert failed"
CF       # assert             # assert check_word(smallDict, 42, "usual", "main (speller-test.c0: 40.10-40.44)") [failure message on stack]
14 65 5F # aldc 25951         # s[25951] = "apple blue china def era fat ghost hide"
14 65 87 # aldc 25991         # s[25991] = "main (speller-test.c0: 46.20-46.75)"
B8 00 64 # invokestatic 100   # parse_tokens__1("apple blue china def era fat ghost hide", "main (speller-test.c0: 46.20-46.75)")
36 05    # vstore 5           # sdict1 = parse_tokens__1("apple blue china def era fat ghost hide", "main (speller-test.c0: 46.20-46.75)");
14 65 AB # aldc 26027         # s[26027] = "blue appl ccina def fatty def def hide ghost"
14 65 D8 # aldc 26072         # s[26072] = "main (speller-test.c0: 47.17-47.77)"
B8 00 64 # invokestatic 100   # parse_tokens__1("blue appl ccina def fatty def def hide ghost", "main (speller-test.c0: 47.17-47.77)")
36 06    # vstore 6           # text1 = parse_tokens__1("blue appl ccina def fatty def def hide ghost", "main (speller-test.c0: 47.17-47.77)");
10 11    # bipush 17          # 17
BC 08    # newarray 8         # alloc_array(string, 17)
36 07    # vstore 7           # miss1 = alloc_array(string, 17);
15 05    # vload 5            # sdict1
10 08    # bipush 8           # 8
15 06    # vload 6            # text1
10 09    # bipush 9           # 9
15 07    # vload 7            # miss1
14 65 FC # aldc 26108         # s[26108] = "main (speller-test.c0: 49.10-49.51)"
B8 00 5F # invokestatic 95    # check_text_better(sdict1, 8, text1, 9, miss1, "main (speller-test.c0: 49.10-49.51)")
10 03    # bipush 3           # 3
9F 00 06 # if_cmpeq +6        # if (check_text_better(sdict1, 8, text1, 9, miss1, "main (speller-test.c0: 49.10-49.51)") == 3) goto <1138:cond_true>
A7 00 08 # goto +8            # goto <1139:cond_false>
# <1138:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1140:cond_end>
# <1139:cond_false>
10 00    # bipush 0           # false
# <1140:cond_end>
14 66 20 # aldc 26144         # s[26144] = "speller-test.c0: 49.3-49.58: assert failed"
CF       # assert             # assert (check_text_better(sdict1, 8, text1, 9, miss1, "main (speller-test.c0: 49.10-49.51)") == 3) [failure message on stack]
14 66 4B # aldc 26187         # s[26187] = " "
14 66 4D # aldc 26189         # s[26189] = "main (speller-test.c0: 51.20-51.37)"
B8 00 64 # invokestatic 100   # parse_tokens__1(" ", "main (speller-test.c0: 51.20-51.37)")
36 08    # vstore 8           # sdict2 = parse_tokens__1(" ", "main (speller-test.c0: 51.20-51.37)");
14 66 71 # aldc 26225         # s[26225] = "blue ccina appll def fatty def def hide ghost"
14 66 9F # aldc 26271         # s[26271] = "main (speller-test.c0: 52.17-52.78)"
B8 00 64 # invokestatic 100   # parse_tokens__1("blue ccina appll def fatty def def hide ghost", "main (speller-test.c0: 52.17-52.78)")
36 09    # vstore 9           # text2 = parse_tokens__1("blue ccina appll def fatty def def hide ghost", "main (speller-test.c0: 52.17-52.78)");
10 11    # bipush 17          # 17
BC 08    # newarray 8         # alloc_array(string, 17)
36 0A    # vstore 10          # miss2 = alloc_array(string, 17);
15 08    # vload 8            # sdict2
10 00    # bipush 0           # 0
15 09    # vload 9            # text2
10 09    # bipush 9           # 9
15 0A    # vload 10           # miss2
14 66 C3 # aldc 26307         # s[26307] = "main (speller-test.c0: 54.10-54.51)"
B8 00 5F # invokestatic 95    # check_text_better(sdict2, 0, text2, 9, miss2, "main (speller-test.c0: 54.10-54.51)")
10 07    # bipush 7           # 7
9F 00 06 # if_cmpeq +6        # if (check_text_better(sdict2, 0, text2, 9, miss2, "main (speller-test.c0: 54.10-54.51)") == 7) goto <1141:cond_true>
A7 00 08 # goto +8            # goto <1142:cond_false>
# <1141:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1143:cond_end>
# <1142:cond_false>
10 00    # bipush 0           # false
# <1143:cond_end>
14 66 E7 # aldc 26343         # s[26343] = "speller-test.c0: 54.3-54.58: assert failed"
CF       # assert             # assert (check_text_better(sdict2, 0, text2, 9, miss2, "main (speller-test.c0: 54.10-54.51)") == 7) [failure message on stack]
14 67 12 # aldc 26386         # s[26386] = "apple blue china def era fat ghost hide"
14 67 3A # aldc 26426         # s[26426] = "main (speller-test.c0: 56.20-56.75)"
B8 00 64 # invokestatic 100   # parse_tokens__1("apple blue china def era fat ghost hide", "main (speller-test.c0: 56.20-56.75)")
36 0B    # vstore 11          # sdict3 = parse_tokens__1("apple blue china def era fat ghost hide", "main (speller-test.c0: 56.20-56.75)");
14 67 5E # aldc 26462         # s[26462] = " "
14 67 60 # aldc 26464         # s[26464] = "main (speller-test.c0: 57.17-57.34)"
B8 00 64 # invokestatic 100   # parse_tokens__1(" ", "main (speller-test.c0: 57.17-57.34)")
36 0C    # vstore 12          # text3 = parse_tokens__1(" ", "main (speller-test.c0: 57.17-57.34)");
10 11    # bipush 17          # 17
BC 08    # newarray 8         # alloc_array(string, 17)
36 0D    # vstore 13          # miss3 = alloc_array(string, 17);
15 0B    # vload 11           # sdict3
10 08    # bipush 8           # 8
15 0C    # vload 12           # text3
10 00    # bipush 0           # 0
15 0D    # vload 13           # miss3
14 67 84 # aldc 26500         # s[26500] = "main (speller-test.c0: 59.10-59.51)"
B8 00 5F # invokestatic 95    # check_text_better(sdict3, 8, text3, 0, miss3, "main (speller-test.c0: 59.10-59.51)")
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (check_text_better(sdict3, 8, text3, 0, miss3, "main (speller-test.c0: 59.10-59.51)") == 0) goto <1144:cond_true>
A7 00 08 # goto +8            # goto <1145:cond_false>
# <1144:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1146:cond_end>
# <1145:cond_false>
10 00    # bipush 0           # false
# <1146:cond_end>
14 67 A8 # aldc 26536         # s[26536] = "speller-test.c0: 59.3-59.58: assert failed"
CF       # assert             # assert (check_text_better(sdict3, 8, text3, 0, miss3, "main (speller-test.c0: 59.10-59.51)") == 0) [failure message on stack]
14 67 D3 # aldc 26579         # s[26579] = "aa bb cc dd ee ff gg hh ii jj kk ll mm"
14 67 FA # aldc 26618         # s[26618] = "main (speller-test.c0: 61.20-61.74)"
B8 00 64 # invokestatic 100   # parse_tokens__1("aa bb cc dd ee ff gg hh ii jj kk ll mm", "main (speller-test.c0: 61.20-61.74)")
36 0E    # vstore 14          # sdict4 = parse_tokens__1("aa bb cc dd ee ff gg hh ii jj kk ll mm", "main (speller-test.c0: 61.20-61.74)");
14 68 1E # aldc 26654         # s[26654] = "eg cj uu aa dd dd"
14 68 30 # aldc 26672         # s[26672] = "main (speller-test.c0: 62.17-62.50)"
B8 00 64 # invokestatic 100   # parse_tokens__1("eg cj uu aa dd dd", "main (speller-test.c0: 62.17-62.50)")
36 0F    # vstore 15          # text4 = parse_tokens__1("eg cj uu aa dd dd", "main (speller-test.c0: 62.17-62.50)");
10 11    # bipush 17          # 17
BC 08    # newarray 8         # alloc_array(string, 17)
36 10    # vstore 16          # miss4 = alloc_array(string, 17);
15 0E    # vload 14           # sdict4
10 0D    # bipush 13          # 13
15 0F    # vload 15           # text4
10 06    # bipush 6           # 6
15 10    # vload 16           # miss4
14 68 54 # aldc 26708         # s[26708] = "main (speller-test.c0: 64.10-64.52)"
B8 00 5F # invokestatic 95    # check_text_better(sdict4, 13, text4, 6, miss4, "main (speller-test.c0: 64.10-64.52)")
10 03    # bipush 3           # 3
9F 00 06 # if_cmpeq +6        # if (check_text_better(sdict4, 13, text4, 6, miss4, "main (speller-test.c0: 64.10-64.52)") == 3) goto <1147:cond_true>
A7 00 08 # goto +8            # goto <1148:cond_false>
# <1147:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1149:cond_end>
# <1148:cond_false>
10 00    # bipush 0           # false
# <1149:cond_end>
14 68 78 # aldc 26744         # s[26744] = "speller-test.c0: 64.3-64.59: assert failed"
CF       # assert             # assert (check_text_better(sdict4, 13, text4, 6, miss4, "main (speller-test.c0: 64.10-64.52)") == 3) [failure message on stack]
14 68 A3 # aldc 26787         # s[26787] = "texts/scott-tweet.txt"
14 68 B9 # aldc 26809         # s[26809] = "main (speller-test.c0: 66.17-66.52)"
B8 00 54 # invokestatic 84    # read_words("texts/scott-tweet.txt", "main (speller-test.c0: 66.17-66.52)")
36 11    # vstore 17          # sT = read_words("texts/scott-tweet.txt", "main (speller-test.c0: 66.17-66.52)");
15 11    # vload 17           # sT
14 68 DD # aldc 26845         # s[26845] = "main (speller-test.c0: 67.25-67.48)"
B8 00 55 # invokestatic 85    # string_bundle_array__1(sT, "main (speller-test.c0: 67.25-67.48)")
36 12    # vstore 18          # scottTweet = string_bundle_array__1(sT, "main (speller-test.c0: 67.25-67.48)");
10 0A    # bipush 10          # 10
BC 08    # newarray 8         # alloc_array(string, 10)
36 13    # vstore 19          # miss5 = alloc_array(string, 10);
15 04    # vload 4            # smallDict
10 2A    # bipush 42          # 42
15 12    # vload 18           # scottTweet
10 06    # bipush 6           # 6
15 13    # vload 19           # miss5
14 69 01 # aldc 26881         # s[26881] = "main (speller-test.c0: 69.10-69.60)"
B8 00 5F # invokestatic 95    # check_text_better(smallDict, 42, scottTweet, 6, miss5, "main (speller-test.c0: 69.10-69.60)")
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (check_text_better(smallDict, 42, scottTweet, 6, miss5, "main (speller-test.c0: 69.10-69.60)") == 4) goto <1150:cond_true>
A7 00 08 # goto +8            # goto <1151:cond_false>
# <1150:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1152:cond_end>
# <1151:cond_false>
10 00    # bipush 0           # false
# <1152:cond_end>
14 69 25 # aldc 26917         # s[26917] = "speller-test.c0: 69.3-69.67: assert failed"
CF       # assert             # assert (check_text_better(smallDict, 42, scottTweet, 6, miss5, "main (speller-test.c0: 69.10-69.60)") == 4) [failure message on stack]
14 69 50 # aldc 26960         # s[26960] = "All tests passed!\n"
14 69 63 # aldc 26979         # s[26979] = "main (speller-test.c0: 86.3-86.32)"
B8 00 10 # invokestatic 16    # print__1("All tests passed!\n", "main (speller-test.c0: 86.3-86.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 00 # invokenative 0     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <00:cond_true>
A7 00 1D # goto +29           # goto <01:cond_false>
# <00:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 00 00 # aldc 0             # s[0] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 01 # invokestatic 1     # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <03:cond_true>
A7 00 08 # goto +8            # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0           # false
# <05:cond_end>
A7 00 05 # goto +5            # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0           # false
# <02:cond_end>
14 00 48 # aldc 72            # s[72] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 00 9A # aldc 154           # s[154] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 02 # invokenative 2     # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 01 # invokenative 1     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 00 AC # aldc 172           # s[172] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 00 F2 # aldc 242           # s[242] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 01 # invokestatic 1     # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 01 38 # aldc 312           # s[312] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 01 # invokestatic 1     # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <06:cond_true>
A7 00 08 # goto +8            # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
14 01 7E # aldc 382           # s[382] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <12:and>
A7 00 27 # goto +39           # goto <10:cond_false>
# <12:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <09:cond_true>
A7 00 1D # goto +29           # goto <10:cond_false>
# <09:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 01 CE # aldc 462           # s[462] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 01 # invokestatic 1     # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <13:cond_true>
A7 00 08 # goto +8            # goto <14:cond_false>
# <13:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <15:cond_end>
# <14:cond_false>
10 00    # bipush 0           # false
# <15:cond_end>
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
14 02 13 # aldc 531           # s[531] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 02 65 # aldc 613           # s[613] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 03 # invokenative 3     # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 02 77 # aldc 631           # s[631] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <16:cond_true>
A7 00 08 # goto +8            # goto <17:cond_false>
# <16:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <18:cond_end>
# <17:cond_false>
10 00    # bipush 0           # false
# <18:cond_end>
14 02 BC # aldc 700           # s[700] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 04 # invokenative 4     # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 05 # invokenative 5     # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <19:cond_true>
A7 00 17 # goto +23           # goto <20:cond_false>
# <19:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <22:cond_true>
A7 00 08 # goto +8            # goto <23:cond_false>
# <22:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <24:cond_end>
# <23:cond_false>
10 00    # bipush 0           # false
# <24:cond_end>
A7 00 05 # goto +5            # goto <21:cond_end>
# <20:cond_false>
10 00    # bipush 0           # false
# <21:cond_end>
14 03 0C # aldc 780           # s[780] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 06 # invokenative 6     # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 07 # invokenative 7     # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <25:cond_true>
A7 00 08 # goto +8            # goto <26:cond_false>
# <25:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <27:cond_end>
# <26:cond_false>
10 00    # bipush 0           # false
# <27:cond_end>
14 03 5C # aldc 860           # s[860] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 03 AE # aldc 942           # s[942] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 08 # invokenative 8     # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 03 C0 # aldc 960           # s[960] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <28:cond_true>
A7 00 08 # goto +8            # goto <29:cond_false>
# <28:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <30:cond_end>
# <29:cond_false>
10 00    # bipush 0           # false
# <30:cond_end>
14 04 0A # aldc 1034          # s[1034] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 04 5A # aldc 1114          # s[1114] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 02 # invokestatic 2     # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <31:cond_true>
A7 00 08 # goto +8            # goto <32:cond_false>
# <31:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <33:cond_end>
# <32:cond_false>
10 00    # bipush 0           # false
# <33:cond_end>
14 04 A4 # aldc 1188          # s[1188] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <34:cond_true>
A7 00 18 # goto +24           # goto <35:cond_false>
# <34:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <37:cond_true>
A7 00 08 # goto +8            # goto <38:cond_false>
# <37:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <39:cond_end>
# <38:cond_false>
10 00    # bipush 0           # false
# <39:cond_end>
A7 00 05 # goto +5            # goto <36:cond_end>
# <35:cond_false>
10 00    # bipush 0           # false
# <36:cond_end>
14 04 F4 # aldc 1268          # s[1268] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 05 46 # aldc 1350          # s[1350] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 0A # invokenative 10    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 0B # invokenative 11    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 05 58 # aldc 1368          # s[1368] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 01 # invokestatic 1     # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <40:cond_true>
A7 00 08 # goto +8            # goto <41:cond_false>
# <40:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <42:cond_end>
# <41:cond_false>
10 00    # bipush 0           # false
# <42:cond_end>
14 05 A6 # aldc 1446          # s[1446] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 05 F6 # aldc 1526          # s[1526] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 01 # invokestatic 1     # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 06 44 # aldc 1604          # s[1604] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 0B # invokestatic 11    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 06 92 # aldc 1682          # s[1682] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 06 E2 # aldc 1762          # s[1762] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 0B # invokestatic 11    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 07 32 # aldc 1842          # s[1842] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 07 84 # aldc 1924          # s[1924] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 0C # invokenative 12    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 07 96 # aldc 1942          # s[1942] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <43:cond_true>
A7 00 08 # goto +8            # goto <44:cond_false>
# <43:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <45:cond_end>
# <44:cond_false>
10 00    # bipush 0           # false
# <45:cond_end>
14 07 E6 # aldc 2022          # s[2022] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 0D # invokenative 13    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <46:cond_true>
A7 00 17 # goto +23           # goto <47:cond_false>
# <46:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <49:cond_true>
A7 00 08 # goto +8            # goto <50:cond_false>
# <49:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <51:cond_end>
# <50:cond_false>
10 00    # bipush 0           # false
# <51:cond_end>
A7 00 05 # goto +5            # goto <48:cond_end>
# <47:cond_false>
10 00    # bipush 0           # false
# <48:cond_end>
14 08 36 # aldc 2102          # s[2102] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <52:cond_true>
A7 00 17 # goto +23           # goto <53:cond_false>
# <52:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <55:cond_true>
A7 00 08 # goto +8            # goto <56:cond_false>
# <55:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <57:cond_end>
# <56:cond_false>
10 00    # bipush 0           # false
# <57:cond_end>
A7 00 05 # goto +5            # goto <54:cond_end>
# <53:cond_false>
10 00    # bipush 0           # false
# <54:cond_end>
14 08 86 # aldc 2182          # s[2182] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 08 D8 # aldc 2264          # s[2264] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 0E # invokenative 14    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 0F # invokenative 15    # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 10 # invokenative 16    # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 11 # invokenative 17    # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 12 # invokenative 18    # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 13 # invokenative 19    # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 14 # invokenative 20    # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 15 # invokenative 21    # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 08 EA # aldc 2282          # s[2282] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 16 # invokestatic 22    # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 09 2C # aldc 2348          # s[2348] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 09 7D # aldc 2429          # s[2429] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 16 # invokenative 22    # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<is_in>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <61:and>
A7 00 22 # goto +34           # goto <59:cond_false>
# <61:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <58:cond_true>
A7 00 18 # goto +24           # goto <59:cond_false>
# <58:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <62:cond_true>
A7 00 08 # goto +8            # goto <63:cond_false>
# <62:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <64:cond_end>
# <63:cond_false>
10 00    # bipush 0           # false
# <64:cond_end>
A7 00 05 # goto +5            # goto <60:cond_end>
# <59:cond_false>
10 00    # bipush 0           # false
# <60:cond_end>
14 09 8F # aldc 2447          # s[2447] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 14.4-14.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 09 DA # aldc 2522          # s[2522] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 14.4-14.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <65:loop>
A7 00 03 # goto +3            # goto <66:body>
# <66:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <68:cond_true>
A7 00 17 # goto +23           # goto <69:cond_false>
# <68:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <71:cond_true>
A7 00 08 # goto +8            # goto <72:cond_false>
# <71:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <73:cond_end>
# <72:cond_false>
10 00    # bipush 0           # false
# <73:cond_end>
A7 00 05 # goto +5            # goto <70:cond_end>
# <69:cond_false>
10 00    # bipush 0           # false
# <70:cond_end>
14 09 EC # aldc 2540          # s[2540] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 17.6-17.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <74:then>
A7 00 2D # goto +45           # goto <75:else>
# <74:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 0A 3C # aldc 2620          # s[2620] = "is_in (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 19.9-19.30)"
B8 00 05 # invokestatic 5     # string_equal__1(x, A[i], "is_in (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 19.9-19.30)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(x, A[i], "is_in (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 19.9-19.30)") == true) goto <77:then>
A7 00 0D # goto +13           # goto <78:else>
# <77:then>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <79:endif>
# <78:else>
# <79:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <76:endif>
# <75:else>
A7 00 06 # goto +6            # break
# <76:endif>
A7 FF A2 # goto -94           # goto <65:loop>
# <67:exit>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 


#<is_sorted>
04                # number of arguments = 4
06                # number of local variables = 6
00 A1             # code length = 161 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <83:and>
A7 00 22 # goto +34           # goto <81:cond_false>
# <83:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <80:cond_true>
A7 00 18 # goto +24           # goto <81:cond_false>
# <80:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <84:cond_true>
A7 00 08 # goto +8            # goto <85:cond_false>
# <84:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <86:cond_end>
# <85:cond_false>
10 00    # bipush 0           # false
# <86:cond_end>
A7 00 05 # goto +5            # goto <82:cond_end>
# <81:cond_false>
10 00    # bipush 0           # false
# <82:cond_end>
14 0A 71 # aldc 2673          # s[2673] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 25.4-25.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0A BC # aldc 2748          # s[2748] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 25.4-25.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 01    # vload 1            # lo
36 05    # vstore 5           # i = lo;
# <87:loop>
A7 00 03 # goto +3            # goto <88:body>
# <88:body>
15 01    # vload 1            # lo
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <90:cond_true>
A7 00 08 # goto +8            # goto <91:cond_false>
# <90:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <92:cond_end>
# <91:cond_false>
10 00    # bipush 0           # false
# <92:cond_end>
14 0A CE # aldc 2766          # s[2766] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 28.6-28.29: @loop_invariant annotation failed"
CF       # assert             # assert (lo <= i) [failure message on stack]
15 05    # vload 5            # i
15 02    # vload 2            # hi
10 01    # bipush 1           # 1
64       # isub               # (hi - 1)
A1 00 06 # if_icmplt +6       # if (i < (hi - 1)) goto <93:then>
A7 00 34 # goto +52           # goto <94:else>
# <93:then>
15 00    # vload 0            # A
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # (i + 1)
63       # aadds              # &A[(i + 1)]
2F       # amload             # A[(i + 1)]
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 0B 1E # aldc 2846          # s[2846] = "is_sorted (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 30.10-30.38)"
B8 00 06 # invokestatic 6     # string_compare__1(A[(i + 1)], A[i], "is_sorted (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 30.10-30.38)")
10 00    # bipush 0           # 0
A2 00 10 # if_icmpge +16      # if (string_compare__1(A[(i + 1)], A[i], "is_sorted (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 30.10-30.38)") >= 0) goto <97:else>
A7 00 03 # goto +3            # goto <96:then>
# <96:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <98:endif>
# <97:else>
# <98:endif>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <95:endif>
# <94:else>
A7 00 06 # goto +6            # break
# <95:endif>
A7 FF A7 # goto -89           # goto <87:loop>
# <89:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 


#<no_dupes>
04                # number of arguments = 4
07                # number of local variables = 7
00 F5             # code length = 245 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <102:and>
A7 00 22 # goto +34           # goto <100:cond_false>
# <102:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <99:cond_true>
A7 00 18 # goto +24           # goto <100:cond_false>
# <99:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <103:cond_true>
A7 00 08 # goto +8            # goto <104:cond_false>
# <103:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <105:cond_end>
# <104:cond_false>
10 00    # bipush 0           # false
# <105:cond_end>
A7 00 05 # goto +5            # goto <101:cond_end>
# <100:cond_false>
10 00    # bipush 0           # false
# <101:cond_end>
14 0B 58 # aldc 2904          # s[2904] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 36.4-36.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0B A3 # aldc 2979          # s[2979] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 36.4-36.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 01    # vload 1            # lo
36 05    # vstore 5           # i = lo;
# <106:loop>
A7 00 03 # goto +3            # goto <107:body>
# <107:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <109:cond_true>
A7 00 17 # goto +23           # goto <110:cond_false>
# <109:cond_true>
15 05    # vload 5            # i
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <112:cond_true>
A7 00 08 # goto +8            # goto <113:cond_false>
# <112:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <114:cond_end>
# <113:cond_false>
10 00    # bipush 0           # false
# <114:cond_end>
A7 00 05 # goto +5            # goto <111:cond_end>
# <110:cond_false>
10 00    # bipush 0           # false
# <111:cond_end>
14 0B B5 # aldc 2997          # s[2997] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 39.6-39.39: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= hi)) [failure message on stack]
15 05    # vload 5            # i
15 02    # vload 2            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <115:then>
A7 00 7C # goto +124          # goto <116:else>
# <115:then>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # (i + 1)
36 06    # vstore 6           # j = (i + 1);
# <118:loop>
A7 00 03 # goto +3            # goto <119:body>
# <119:body>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # (i + 1)
15 06    # vload 6            # j
A4 00 06 # if_icmple +6       # if ((i + 1) <= j) goto <121:cond_true>
A7 00 17 # goto +23           # goto <122:cond_false>
# <121:cond_true>
15 06    # vload 6            # j
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (j <= hi) goto <124:cond_true>
A7 00 08 # goto +8            # goto <125:cond_false>
# <124:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <126:cond_end>
# <125:cond_false>
10 00    # bipush 0           # false
# <126:cond_end>
A7 00 05 # goto +5            # goto <123:cond_end>
# <122:cond_false>
10 00    # bipush 0           # false
# <123:cond_end>
14 0C 05 # aldc 3077          # s[3077] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 42.8-42.43: @loop_invariant annotation failed"
CF       # assert             # assert (((i + 1) <= j) && (j <= hi)) [failure message on stack]
15 06    # vload 6            # j
15 02    # vload 2            # hi
A1 00 06 # if_icmplt +6       # if (j < hi) goto <127:then>
A7 00 31 # goto +49           # goto <128:else>
# <127:then>
15 00    # vload 0            # A
15 06    # vload 6            # j
63       # aadds              # &A[j]
2F       # amload             # A[j]
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 0C 55 # aldc 3157          # s[3157] = "no_dupes (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 44.11-44.34)"
B8 00 05 # invokestatic 5     # string_equal__1(A[j], A[i], "no_dupes (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 44.11-44.34)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(A[j], A[i], "no_dupes (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 44.11-44.34)") == true) goto <130:then>
A7 00 0D # goto +13           # goto <131:else>
# <130:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <132:endif>
# <131:else>
# <132:endif>
15 06    # vload 6            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # j += 1;
A7 00 06 # goto +6            # goto <129:endif>
# <128:else>
A7 00 06 # goto +6            # break
# <129:endif>
A7 FF 9B # goto -101          # goto <118:loop>
# <120:exit>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <117:endif>
# <116:else>
A7 00 06 # goto +6            # break
# <117:endif>
A7 FF 53 # goto -173          # goto <106:loop>
# <108:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 


#<swap>
04                # number of arguments = 4
05                # number of local variables = 5
00 7F             # code length = 127 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <133:cond_true>
A7 00 18 # goto +24           # goto <134:cond_false>
# <133:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (i < \length(A)) goto <136:cond_true>
A7 00 08 # goto +8            # goto <137:cond_false>
# <136:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <138:cond_end>
# <137:cond_false>
10 00    # bipush 0           # false
# <138:cond_end>
A7 00 05 # goto +5            # goto <135:cond_end>
# <134:cond_false>
10 00    # bipush 0           # false
# <135:cond_end>
14 0C 8E # aldc 3214          # s[3214] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 52.4-52.38: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0C D9 # aldc 3289          # s[3289] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 52.4-52.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i < \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <139:cond_true>
A7 00 18 # goto +24           # goto <140:cond_false>
# <139:cond_true>
15 02    # vload 2            # j
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (j < \length(A)) goto <142:cond_true>
A7 00 08 # goto +8            # goto <143:cond_false>
# <142:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0           # false
# <144:cond_end>
A7 00 05 # goto +5            # goto <141:cond_end>
# <140:cond_false>
10 00    # bipush 0           # false
# <141:cond_end>
14 0C EB # aldc 3307          # s[3307] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 53.4-53.38: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0D 36 # aldc 3382          # s[3382] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 53.4-53.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= j) && (j < \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
36 04    # vstore 4           # tmp = A[i];
15 00    # vload 0            # A
15 01    # vload 1            # i
63       # aadds              # &A[i]
15 00    # vload 0            # A
15 02    # vload 2            # j
63       # aadds              # &A[j]
2F       # amload             # A[j]
4F       # amstore            # A[i] = A[j];
15 00    # vload 0            # A
15 02    # vload 2            # j
63       # aadds              # &A[j]
15 04    # vload 4            # tmp
4F       # amstore            # A[j] = tmp;
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<gt_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <148:and>
A7 00 22 # goto +34           # goto <146:cond_false>
# <148:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <145:cond_true>
A7 00 18 # goto +24           # goto <146:cond_false>
# <145:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <149:cond_true>
A7 00 08 # goto +8            # goto <150:cond_false>
# <149:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <151:cond_end>
# <150:cond_false>
10 00    # bipush 0           # false
# <151:cond_end>
A7 00 05 # goto +5            # goto <147:cond_end>
# <146:cond_false>
10 00    # bipush 0           # false
# <147:cond_end>
14 0D 48 # aldc 3400          # s[3400] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 61.4-61.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 0D 93 # aldc 3475          # s[3475] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 61.4-61.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <152:loop>
A7 00 03 # goto +3            # goto <153:body>
# <153:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <155:cond_true>
A7 00 17 # goto +23           # goto <156:cond_false>
# <155:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <158:cond_true>
A7 00 08 # goto +8            # goto <159:cond_false>
# <158:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <160:cond_end>
# <159:cond_false>
10 00    # bipush 0           # false
# <160:cond_end>
A7 00 05 # goto +5            # goto <157:cond_end>
# <156:cond_false>
10 00    # bipush 0           # false
# <157:cond_end>
14 0D A5 # aldc 3493          # s[3493] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 64.6-64.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <161:then>
A7 00 2D # goto +45           # goto <162:else>
# <161:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 0D F5 # aldc 3573          # s[3573] = "gt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 66.11-66.34)"
B8 00 06 # invokestatic 6     # string_compare__1(x, A[i], "gt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 66.11-66.34)")
10 00    # bipush 0           # 0
A3 00 10 # if_icmpgt +16      # if (string_compare__1(x, A[i], "gt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 66.11-66.34)") > 0) goto <165:else>
A7 00 03 # goto +3            # goto <164:then>
# <164:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <166:endif>
# <165:else>
# <166:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <163:endif>
# <162:else>
A7 00 06 # goto +6            # break
# <163:endif>
A7 FF A2 # goto -94           # goto <152:loop>
# <154:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<ge_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <170:and>
A7 00 22 # goto +34           # goto <168:cond_false>
# <170:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <167:cond_true>
A7 00 18 # goto +24           # goto <168:cond_false>
# <167:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <171:cond_true>
A7 00 08 # goto +8            # goto <172:cond_false>
# <171:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <173:cond_end>
# <172:cond_false>
10 00    # bipush 0           # false
# <173:cond_end>
A7 00 05 # goto +5            # goto <169:cond_end>
# <168:cond_false>
10 00    # bipush 0           # false
# <169:cond_end>
14 0E 2C # aldc 3628          # s[3628] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 72.4-72.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 0E 77 # aldc 3703          # s[3703] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 72.4-72.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <174:loop>
A7 00 03 # goto +3            # goto <175:body>
# <175:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <177:cond_true>
A7 00 17 # goto +23           # goto <178:cond_false>
# <177:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <180:cond_true>
A7 00 08 # goto +8            # goto <181:cond_false>
# <180:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <182:cond_end>
# <181:cond_false>
10 00    # bipush 0           # false
# <182:cond_end>
A7 00 05 # goto +5            # goto <179:cond_end>
# <178:cond_false>
10 00    # bipush 0           # false
# <179:cond_end>
14 0E 89 # aldc 3721          # s[3721] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 75.6-75.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <183:then>
A7 00 2D # goto +45           # goto <184:else>
# <183:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 0E D9 # aldc 3801          # s[3801] = "ge_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 77.11-77.34)"
B8 00 06 # invokestatic 6     # string_compare__1(x, A[i], "ge_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 77.11-77.34)")
10 00    # bipush 0           # 0
A2 00 10 # if_icmpge +16      # if (string_compare__1(x, A[i], "ge_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 77.11-77.34)") >= 0) goto <187:else>
A7 00 03 # goto +3            # goto <186:then>
# <186:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <188:endif>
# <187:else>
# <188:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <185:endif>
# <184:else>
A7 00 06 # goto +6            # break
# <185:endif>
A7 FF A2 # goto -94           # goto <174:loop>
# <176:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<lt_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <192:and>
A7 00 22 # goto +34           # goto <190:cond_false>
# <192:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <189:cond_true>
A7 00 18 # goto +24           # goto <190:cond_false>
# <189:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <193:cond_true>
A7 00 08 # goto +8            # goto <194:cond_false>
# <193:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <195:cond_end>
# <194:cond_false>
10 00    # bipush 0           # false
# <195:cond_end>
A7 00 05 # goto +5            # goto <191:cond_end>
# <190:cond_false>
10 00    # bipush 0           # false
# <191:cond_end>
14 0F 10 # aldc 3856          # s[3856] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 83.4-83.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 0F 5B # aldc 3931          # s[3931] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 83.4-83.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <196:loop>
A7 00 03 # goto +3            # goto <197:body>
# <197:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <199:cond_true>
A7 00 17 # goto +23           # goto <200:cond_false>
# <199:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <202:cond_true>
A7 00 08 # goto +8            # goto <203:cond_false>
# <202:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <204:cond_end>
# <203:cond_false>
10 00    # bipush 0           # false
# <204:cond_end>
A7 00 05 # goto +5            # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0           # false
# <201:cond_end>
14 0F 6D # aldc 3949          # s[3949] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 86.6-86.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <205:then>
A7 00 2D # goto +45           # goto <206:else>
# <205:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 0F BD # aldc 4029          # s[4029] = "lt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 88.11-88.34)"
B8 00 06 # invokestatic 6     # string_compare__1(x, A[i], "lt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 88.11-88.34)")
10 00    # bipush 0           # 0
A1 00 10 # if_icmplt +16      # if (string_compare__1(x, A[i], "lt_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 88.11-88.34)") < 0) goto <209:else>
A7 00 03 # goto +3            # goto <208:then>
# <208:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <210:endif>
# <209:else>
# <210:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <207:endif>
# <206:else>
A7 00 06 # goto +6            # break
# <207:endif>
A7 FF A2 # goto -94           # goto <196:loop>
# <198:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<le_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <214:and>
A7 00 22 # goto +34           # goto <212:cond_false>
# <214:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <211:cond_true>
A7 00 18 # goto +24           # goto <212:cond_false>
# <211:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <215:cond_true>
A7 00 08 # goto +8            # goto <216:cond_false>
# <215:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <217:cond_end>
# <216:cond_false>
10 00    # bipush 0           # false
# <217:cond_end>
A7 00 05 # goto +5            # goto <213:cond_end>
# <212:cond_false>
10 00    # bipush 0           # false
# <213:cond_end>
14 0F F4 # aldc 4084          # s[4084] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 94.4-94.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 10 3F # aldc 4159          # s[4159] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 94.4-94.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <218:loop>
A7 00 03 # goto +3            # goto <219:body>
# <219:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <221:cond_true>
A7 00 17 # goto +23           # goto <222:cond_false>
# <221:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <224:cond_true>
A7 00 08 # goto +8            # goto <225:cond_false>
# <224:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <226:cond_end>
# <225:cond_false>
10 00    # bipush 0           # false
# <226:cond_end>
A7 00 05 # goto +5            # goto <223:cond_end>
# <222:cond_false>
10 00    # bipush 0           # false
# <223:cond_end>
14 10 51 # aldc 4177          # s[4177] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 97.6-97.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <227:then>
A7 00 2D # goto +45           # goto <228:else>
# <227:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 10 A1 # aldc 4257          # s[4257] = "le_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 99.11-99.34)"
B8 00 06 # invokestatic 6     # string_compare__1(x, A[i], "le_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 99.11-99.34)")
10 00    # bipush 0           # 0
A4 00 10 # if_icmple +16      # if (string_compare__1(x, A[i], "le_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 99.11-99.34)") <= 0) goto <231:else>
A7 00 03 # goto +3            # goto <230:then>
# <230:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <232:endif>
# <231:else>
# <232:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <229:endif>
# <228:else>
A7 00 06 # goto +6            # break
# <229:endif>
A7 FF A2 # goto -94           # goto <218:loop>
# <220:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<gt_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <236:and>
A7 00 22 # goto +34           # goto <234:cond_false>
# <236:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <233:cond_true>
A7 00 18 # goto +24           # goto <234:cond_false>
# <233:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <237:cond_true>
A7 00 08 # goto +8            # goto <238:cond_false>
# <237:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <239:cond_end>
# <238:cond_false>
10 00    # bipush 0           # false
# <239:cond_end>
A7 00 05 # goto +5            # goto <235:cond_end>
# <234:cond_false>
10 00    # bipush 0           # false
# <235:cond_end>
14 10 D8 # aldc 4312          # s[4312] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 106.4-106.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 11 25 # aldc 4389          # s[4389] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 106.4-106.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <243:and>
A7 00 22 # goto +34           # goto <241:cond_false>
# <243:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <240:cond_true>
A7 00 18 # goto +24           # goto <241:cond_false>
# <240:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <244:cond_true>
A7 00 08 # goto +8            # goto <245:cond_false>
# <244:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <246:cond_end>
# <245:cond_false>
10 00    # bipush 0           # false
# <246:cond_end>
A7 00 05 # goto +5            # goto <242:cond_end>
# <241:cond_false>
10 00    # bipush 0           # false
# <242:cond_end>
14 11 37 # aldc 4407          # s[4407] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 107.4-107.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 11 84 # aldc 4484          # s[4484] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 107.4-107.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <247:loop>
A7 00 03 # goto +3            # goto <248:body>
# <248:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <250:cond_true>
A7 00 17 # goto +23           # goto <251:cond_false>
# <250:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <253:cond_true>
A7 00 08 # goto +8            # goto <254:cond_false>
# <253:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <255:cond_end>
# <254:cond_false>
10 00    # bipush 0           # false
# <255:cond_end>
A7 00 05 # goto +5            # goto <252:cond_end>
# <251:cond_false>
10 00    # bipush 0           # false
# <252:cond_end>
14 11 96 # aldc 4502          # s[4502] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 110.8-110.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <256:then>
A7 00 76 # goto +118          # goto <257:else>
# <256:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <259:loop>
A7 00 03 # goto +3            # goto <260:body>
# <260:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <262:cond_true>
A7 00 17 # goto +23           # goto <263:cond_false>
# <262:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <265:cond_true>
A7 00 08 # goto +8            # goto <266:cond_false>
# <265:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <267:cond_end>
# <266:cond_false>
10 00    # bipush 0           # false
# <267:cond_end>
A7 00 05 # goto +5            # goto <264:cond_end>
# <263:cond_false>
10 00    # bipush 0           # false
# <264:cond_end>
14 11 E8 # aldc 4584          # s[4584] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 112.10-112.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <268:then>
A7 00 31 # goto +49           # goto <269:else>
# <268:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 12 3B # aldc 4667          # s[4667] = "gt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 113.13-113.39)"
B8 00 06 # invokestatic 6     # string_compare__1(A[i], B[j], "gt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 113.13-113.39)")
10 00    # bipush 0           # 0
A3 00 10 # if_icmpgt +16      # if (string_compare__1(A[i], B[j], "gt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 113.13-113.39)") > 0) goto <272:else>
A7 00 03 # goto +3            # goto <271:then>
# <271:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <273:endif>
# <272:else>
# <273:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <270:endif>
# <269:else>
A7 00 06 # goto +6            # break
# <270:endif>
A7 FF 9E # goto -98           # goto <259:loop>
# <261:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <258:endif>
# <257:else>
A7 00 06 # goto +6            # break
# <258:endif>
A7 FF 59 # goto -167          # goto <247:loop>
# <249:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<ge_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <277:and>
A7 00 22 # goto +34           # goto <275:cond_false>
# <277:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <274:cond_true>
A7 00 18 # goto +24           # goto <275:cond_false>
# <274:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <278:cond_true>
A7 00 08 # goto +8            # goto <279:cond_false>
# <278:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <280:cond_end>
# <279:cond_false>
10 00    # bipush 0           # false
# <280:cond_end>
A7 00 05 # goto +5            # goto <276:cond_end>
# <275:cond_false>
10 00    # bipush 0           # false
# <276:cond_end>
14 12 75 # aldc 4725          # s[4725] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 119.4-119.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 12 C2 # aldc 4802          # s[4802] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 119.4-119.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <284:and>
A7 00 22 # goto +34           # goto <282:cond_false>
# <284:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <281:cond_true>
A7 00 18 # goto +24           # goto <282:cond_false>
# <281:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <285:cond_true>
A7 00 08 # goto +8            # goto <286:cond_false>
# <285:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <287:cond_end>
# <286:cond_false>
10 00    # bipush 0           # false
# <287:cond_end>
A7 00 05 # goto +5            # goto <283:cond_end>
# <282:cond_false>
10 00    # bipush 0           # false
# <283:cond_end>
14 12 D4 # aldc 4820          # s[4820] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 120.4-120.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 13 21 # aldc 4897          # s[4897] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 120.4-120.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <288:loop>
A7 00 03 # goto +3            # goto <289:body>
# <289:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <291:cond_true>
A7 00 17 # goto +23           # goto <292:cond_false>
# <291:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <294:cond_true>
A7 00 08 # goto +8            # goto <295:cond_false>
# <294:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <296:cond_end>
# <295:cond_false>
10 00    # bipush 0           # false
# <296:cond_end>
A7 00 05 # goto +5            # goto <293:cond_end>
# <292:cond_false>
10 00    # bipush 0           # false
# <293:cond_end>
14 13 33 # aldc 4915          # s[4915] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 123.8-123.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <297:then>
A7 00 76 # goto +118          # goto <298:else>
# <297:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <300:loop>
A7 00 03 # goto +3            # goto <301:body>
# <301:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <303:cond_true>
A7 00 17 # goto +23           # goto <304:cond_false>
# <303:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <306:cond_true>
A7 00 08 # goto +8            # goto <307:cond_false>
# <306:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <308:cond_end>
# <307:cond_false>
10 00    # bipush 0           # false
# <308:cond_end>
A7 00 05 # goto +5            # goto <305:cond_end>
# <304:cond_false>
10 00    # bipush 0           # false
# <305:cond_end>
14 13 85 # aldc 4997          # s[4997] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 125.10-125.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <309:then>
A7 00 31 # goto +49           # goto <310:else>
# <309:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 13 D8 # aldc 5080          # s[5080] = "ge_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 126.13-126.39)"
B8 00 06 # invokestatic 6     # string_compare__1(A[i], B[j], "ge_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 126.13-126.39)")
10 00    # bipush 0           # 0
A2 00 10 # if_icmpge +16      # if (string_compare__1(A[i], B[j], "ge_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 126.13-126.39)") >= 0) goto <313:else>
A7 00 03 # goto +3            # goto <312:then>
# <312:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <314:endif>
# <313:else>
# <314:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <311:endif>
# <310:else>
A7 00 06 # goto +6            # break
# <311:endif>
A7 FF 9E # goto -98           # goto <300:loop>
# <302:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <299:endif>
# <298:else>
A7 00 06 # goto +6            # break
# <299:endif>
A7 FF 59 # goto -167          # goto <288:loop>
# <290:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<lt_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <318:and>
A7 00 22 # goto +34           # goto <316:cond_false>
# <318:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <315:cond_true>
A7 00 18 # goto +24           # goto <316:cond_false>
# <315:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <319:cond_true>
A7 00 08 # goto +8            # goto <320:cond_false>
# <319:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <321:cond_end>
# <320:cond_false>
10 00    # bipush 0           # false
# <321:cond_end>
A7 00 05 # goto +5            # goto <317:cond_end>
# <316:cond_false>
10 00    # bipush 0           # false
# <317:cond_end>
14 14 12 # aldc 5138          # s[5138] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 132.4-132.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 14 5F # aldc 5215          # s[5215] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 132.4-132.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <325:and>
A7 00 22 # goto +34           # goto <323:cond_false>
# <325:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <322:cond_true>
A7 00 18 # goto +24           # goto <323:cond_false>
# <322:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <326:cond_true>
A7 00 08 # goto +8            # goto <327:cond_false>
# <326:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <328:cond_end>
# <327:cond_false>
10 00    # bipush 0           # false
# <328:cond_end>
A7 00 05 # goto +5            # goto <324:cond_end>
# <323:cond_false>
10 00    # bipush 0           # false
# <324:cond_end>
14 14 71 # aldc 5233          # s[5233] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 133.4-133.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 14 BE # aldc 5310          # s[5310] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 133.4-133.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <329:loop>
A7 00 03 # goto +3            # goto <330:body>
# <330:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <332:cond_true>
A7 00 17 # goto +23           # goto <333:cond_false>
# <332:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <335:cond_true>
A7 00 08 # goto +8            # goto <336:cond_false>
# <335:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <337:cond_end>
# <336:cond_false>
10 00    # bipush 0           # false
# <337:cond_end>
A7 00 05 # goto +5            # goto <334:cond_end>
# <333:cond_false>
10 00    # bipush 0           # false
# <334:cond_end>
14 14 D0 # aldc 5328          # s[5328] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 136.8-136.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <338:then>
A7 00 76 # goto +118          # goto <339:else>
# <338:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <341:loop>
A7 00 03 # goto +3            # goto <342:body>
# <342:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <344:cond_true>
A7 00 17 # goto +23           # goto <345:cond_false>
# <344:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <347:cond_true>
A7 00 08 # goto +8            # goto <348:cond_false>
# <347:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <349:cond_end>
# <348:cond_false>
10 00    # bipush 0           # false
# <349:cond_end>
A7 00 05 # goto +5            # goto <346:cond_end>
# <345:cond_false>
10 00    # bipush 0           # false
# <346:cond_end>
14 15 22 # aldc 5410          # s[5410] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 138.10-138.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <350:then>
A7 00 31 # goto +49           # goto <351:else>
# <350:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 15 75 # aldc 5493          # s[5493] = "lt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 139.13-139.39)"
B8 00 06 # invokestatic 6     # string_compare__1(A[i], B[j], "lt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 139.13-139.39)")
10 00    # bipush 0           # 0
A1 00 10 # if_icmplt +16      # if (string_compare__1(A[i], B[j], "lt_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 139.13-139.39)") < 0) goto <354:else>
A7 00 03 # goto +3            # goto <353:then>
# <353:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <355:endif>
# <354:else>
# <355:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <352:endif>
# <351:else>
A7 00 06 # goto +6            # break
# <352:endif>
A7 FF 9E # goto -98           # goto <341:loop>
# <343:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <340:endif>
# <339:else>
A7 00 06 # goto +6            # break
# <340:endif>
A7 FF 59 # goto -167          # goto <329:loop>
# <331:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<le_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <359:and>
A7 00 22 # goto +34           # goto <357:cond_false>
# <359:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <356:cond_true>
A7 00 18 # goto +24           # goto <357:cond_false>
# <356:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <360:cond_true>
A7 00 08 # goto +8            # goto <361:cond_false>
# <360:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <362:cond_end>
# <361:cond_false>
10 00    # bipush 0           # false
# <362:cond_end>
A7 00 05 # goto +5            # goto <358:cond_end>
# <357:cond_false>
10 00    # bipush 0           # false
# <358:cond_end>
14 15 AF # aldc 5551          # s[5551] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 145.4-145.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 15 FC # aldc 5628          # s[5628] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 145.4-145.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <366:and>
A7 00 22 # goto +34           # goto <364:cond_false>
# <366:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <363:cond_true>
A7 00 18 # goto +24           # goto <364:cond_false>
# <363:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <367:cond_true>
A7 00 08 # goto +8            # goto <368:cond_false>
# <367:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <369:cond_end>
# <368:cond_false>
10 00    # bipush 0           # false
# <369:cond_end>
A7 00 05 # goto +5            # goto <365:cond_end>
# <364:cond_false>
10 00    # bipush 0           # false
# <365:cond_end>
14 16 0E # aldc 5646          # s[5646] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 146.4-146.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 16 5B # aldc 5723          # s[5723] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 146.4-146.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <370:loop>
A7 00 03 # goto +3            # goto <371:body>
# <371:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <373:cond_true>
A7 00 17 # goto +23           # goto <374:cond_false>
# <373:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <376:cond_true>
A7 00 08 # goto +8            # goto <377:cond_false>
# <376:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <378:cond_end>
# <377:cond_false>
10 00    # bipush 0           # false
# <378:cond_end>
A7 00 05 # goto +5            # goto <375:cond_end>
# <374:cond_false>
10 00    # bipush 0           # false
# <375:cond_end>
14 16 6D # aldc 5741          # s[5741] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 149.8-149.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <379:then>
A7 00 76 # goto +118          # goto <380:else>
# <379:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <382:loop>
A7 00 03 # goto +3            # goto <383:body>
# <383:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <385:cond_true>
A7 00 17 # goto +23           # goto <386:cond_false>
# <385:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <388:cond_true>
A7 00 08 # goto +8            # goto <389:cond_false>
# <388:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <390:cond_end>
# <389:cond_false>
10 00    # bipush 0           # false
# <390:cond_end>
A7 00 05 # goto +5            # goto <387:cond_end>
# <386:cond_false>
10 00    # bipush 0           # false
# <387:cond_end>
14 16 BF # aldc 5823          # s[5823] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 151.10-151.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <391:then>
A7 00 31 # goto +49           # goto <392:else>
# <391:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 17 12 # aldc 5906          # s[5906] = "le_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 152.13-152.39)"
B8 00 06 # invokestatic 6     # string_compare__1(A[i], B[j], "le_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 152.13-152.39)")
10 00    # bipush 0           # 0
A4 00 10 # if_icmple +16      # if (string_compare__1(A[i], B[j], "le_segs (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 152.13-152.39)") <= 0) goto <395:else>
A7 00 03 # goto +3            # goto <394:then>
# <394:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <396:endif>
# <395:else>
# <396:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <393:endif>
# <392:else>
A7 00 06 # goto +6            # break
# <393:endif>
A7 FF 9E # goto -98           # goto <382:loop>
# <384:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <381:endif>
# <380:else>
A7 00 06 # goto +6            # break
# <381:endif>
A7 FF 59 # goto -167          # goto <370:loop>
# <372:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<print_seg>
04                # number of arguments = 4
05                # number of local variables = 5
00 F7             # code length = 247 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <400:and>
A7 00 22 # goto +34           # goto <398:cond_false>
# <400:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <397:cond_true>
A7 00 18 # goto +24           # goto <398:cond_false>
# <397:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <401:cond_true>
A7 00 08 # goto +8            # goto <402:cond_false>
# <401:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <403:cond_end>
# <402:cond_false>
10 00    # bipush 0           # false
# <403:cond_end>
A7 00 05 # goto +5            # goto <399:cond_end>
# <398:cond_false>
10 00    # bipush 0           # false
# <399:cond_end>
14 17 4C # aldc 5964          # s[5964] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 157.4-157.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 17 99 # aldc 6041          # s[6041] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 157.4-157.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
14 17 AB # aldc 6059          # s[6059] = "array["
14 17 B2 # aldc 6066          # s[6066] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
B8 00 10 # invokestatic 16    # print__1("array[", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)")
57       # pop                # (ignore result)
15 01    # vload 1            # lo
14 17 ED # aldc 6125          # s[6125] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
B8 00 12 # invokestatic 18    # printint__1(lo, "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)")
57       # pop                # (ignore result)
14 18 28 # aldc 6184          # s[6184] = ","
14 18 2A # aldc 6186          # s[6186] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
B8 00 10 # invokestatic 16    # print__1(",", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)")
57       # pop                # (ignore result)
15 02    # vload 2            # hi
14 18 65 # aldc 6245          # s[6245] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
B8 00 12 # invokestatic 18    # printint__1(hi, "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)")
57       # pop                # (ignore result)
14 18 A0 # aldc 6304          # s[6304] = ") = ["
14 18 A6 # aldc 6310          # s[6310] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)"
B8 00 10 # invokestatic 16    # print__1(") = [", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 159.3-159.37)")
57       # pop                # (ignore result)
15 01    # vload 1            # lo
36 04    # vstore 4           # i = lo;
# <404:loop>
A7 00 03 # goto +3            # goto <405:body>
# <405:body>
15 01    # vload 1            # lo
15 04    # vload 4            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <407:cond_true>
A7 00 17 # goto +23           # goto <408:cond_false>
# <407:cond_true>
15 04    # vload 4            # i
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <410:cond_true>
A7 00 08 # goto +8            # goto <411:cond_false>
# <410:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <412:cond_end>
# <411:cond_false>
10 00    # bipush 0           # false
# <412:cond_end>
A7 00 05 # goto +5            # goto <409:cond_end>
# <408:cond_false>
10 00    # bipush 0           # false
# <409:cond_end>
14 18 E1 # aldc 6369          # s[6369] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 161.6-161.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 04    # vload 4            # i
15 02    # vload 2            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <413:then>
A7 00 48 # goto +72           # goto <414:else>
# <413:then>
14 19 33 # aldc 6451          # s[6451] = ""
14 19 34 # aldc 6452          # s[6452] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)"
B8 00 10 # invokestatic 16    # print__1("", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)")
57       # pop                # (ignore result)
15 00    # vload 0            # A
15 04    # vload 4            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 19 6F # aldc 6511          # s[6511] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)"
B8 00 10 # invokestatic 16    # print__1(A[i], "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)")
57       # pop                # (ignore result)
14 19 AA # aldc 6570          # s[6570] = ""
14 19 AB # aldc 6571          # s[6571] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)"
B8 00 10 # invokestatic 16    # print__1("", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 163.5-163.23)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
15 02    # vload 2            # hi
10 01    # bipush 1           # 1
64       # isub               # (hi - 1)
A0 00 06 # if_cmpne +6        # if (i != (hi - 1)) goto <416:then>
A7 00 10 # goto +16           # goto <417:else>
# <416:then>
14 19 E6 # aldc 6630          # s[6630] = ", "
14 19 E9 # aldc 6633          # s[6633] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 164.20-164.32)"
B8 00 10 # invokestatic 16    # print__1(", ", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 164.20-164.32)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <418:endif>
# <417:else>
# <418:endif>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <415:endif>
# <414:else>
A7 00 06 # goto +6            # break
# <415:endif>
A7 FF 87 # goto -121          # goto <404:loop>
# <406:exit>
14 1A 25 # aldc 6693          # s[6693] = "]"
14 1A 27 # aldc 6695          # s[6695] = "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 166.3-166.14)"
B8 00 10 # invokestatic 16    # print__1("]", "print_seg (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 166.3-166.14)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_in__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <422:and>
A7 00 22 # goto +34           # goto <420:cond_false>
# <422:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <419:cond_true>
A7 00 18 # goto +24           # goto <420:cond_false>
# <419:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <423:cond_true>
A7 00 08 # goto +8            # goto <424:cond_false>
# <423:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <425:cond_end>
# <424:cond_false>
10 00    # bipush 0           # false
# <425:cond_end>
A7 00 05 # goto +5            # goto <421:cond_end>
# <420:cond_false>
10 00    # bipush 0           # false
# <421:cond_end>
14 1A 62 # aldc 6754          # s[6754] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 177.4-177.54: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1A AF # aldc 6831          # s[6831] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 177.4-177.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 1A C1 # aldc 6849          # s[6849] = "is_in__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 176.1-177.60)"
B8 00 18 # invokestatic 24    # is_in(x, A, lo, hi, "is_in__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 176.1-177.60)")
36 05    # vstore 5           # _result = is_in(x, A, lo, hi, "is_in__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 176.1-177.60)");
15 05    # vload 5            # _result
B0       # return             # 


#<is_sorted__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 4B             # code length = 75 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <429:and>
A7 00 22 # goto +34           # goto <427:cond_false>
# <429:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <426:cond_true>
A7 00 18 # goto +24           # goto <427:cond_false>
# <426:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <430:cond_true>
A7 00 08 # goto +8            # goto <431:cond_false>
# <430:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <432:cond_end>
# <431:cond_false>
10 00    # bipush 0           # false
# <432:cond_end>
A7 00 05 # goto +5            # goto <428:cond_end>
# <427:cond_false>
10 00    # bipush 0           # false
# <428:cond_end>
14 1A FB # aldc 6907          # s[6907] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 181.4-181.54: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1B 48 # aldc 6984          # s[6984] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 181.4-181.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 1B 5A # aldc 7002          # s[7002] = "is_sorted__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 180.1-181.60)"
B8 00 19 # invokestatic 25    # is_sorted(A, lo, hi, "is_sorted__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 180.1-181.60)")
36 04    # vstore 4           # _result = is_sorted(A, lo, hi, "is_sorted__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 180.1-181.60)");
15 04    # vload 4            # _result
B0       # return             # 


#<no_dupes__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 4B             # code length = 75 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <436:and>
A7 00 22 # goto +34           # goto <434:cond_false>
# <436:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <433:cond_true>
A7 00 18 # goto +24           # goto <434:cond_false>
# <433:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <437:cond_true>
A7 00 08 # goto +8            # goto <438:cond_false>
# <437:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <439:cond_end>
# <438:cond_false>
10 00    # bipush 0           # false
# <439:cond_end>
A7 00 05 # goto +5            # goto <435:cond_end>
# <434:cond_false>
10 00    # bipush 0           # false
# <435:cond_end>
14 1B 98 # aldc 7064          # s[7064] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 185.4-185.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1B E5 # aldc 7141          # s[7141] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 185.4-185.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 1B F7 # aldc 7159          # s[7159] = "no_dupes__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 184.1-185.59)"
B8 00 1A # invokestatic 26    # no_dupes(A, lo, hi, "no_dupes__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 184.1-185.59)")
36 04    # vstore 4           # _result = no_dupes(A, lo, hi, "no_dupes__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 184.1-185.59)");
15 04    # vload 4            # _result
B0       # return             # 


#<swap__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 58             # code length = 88 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <444:and>
A7 00 2D # goto +45           # goto <441:cond_false>
# <444:and>
15 01    # vload 1            # i
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (i < \length(A)) goto <443:and>
A7 00 22 # goto +34           # goto <441:cond_false>
# <443:and>
10 00    # bipush 0           # 0
15 02    # vload 2            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <440:cond_true>
A7 00 18 # goto +24           # goto <441:cond_false>
# <440:cond_true>
15 02    # vload 2            # j
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (j < \length(A)) goto <445:cond_true>
A7 00 08 # goto +8            # goto <446:cond_false>
# <445:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <447:cond_end>
# <446:cond_false>
10 00    # bipush 0           # false
# <447:cond_end>
A7 00 05 # goto +5            # goto <442:cond_end>
# <441:cond_false>
10 00    # bipush 0           # false
# <442:cond_end>
14 1C 34 # aldc 7220          # s[7220] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 189.4-189.66: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1C 81 # aldc 7297          # s[7297] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 189.4-189.66: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((((0 <= i) && (i < \length(A))) && (0 <= j)) && (j < \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # i
15 02    # vload 2            # j
14 1C 93 # aldc 7315          # s[7315] = "swap__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 188.1-189.72)"
B8 00 1B # invokestatic 27    # swap(A, i, j, "swap__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 188.1-189.72)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<gt_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <451:and>
A7 00 22 # goto +34           # goto <449:cond_false>
# <451:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <448:cond_true>
A7 00 18 # goto +24           # goto <449:cond_false>
# <448:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <452:cond_true>
A7 00 08 # goto +8            # goto <453:cond_false>
# <452:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <454:cond_end>
# <453:cond_false>
10 00    # bipush 0           # false
# <454:cond_end>
A7 00 05 # goto +5            # goto <450:cond_end>
# <449:cond_false>
10 00    # bipush 0           # false
# <450:cond_end>
14 1C CC # aldc 7372          # s[7372] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 194.4-194.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1D 19 # aldc 7449          # s[7449] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 194.4-194.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 1D 2B # aldc 7467          # s[7467] = "gt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 193.1-194.59)"
B8 00 1C # invokestatic 28    # gt_seg(x, A, lo, hi, "gt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 193.1-194.59)")
36 05    # vstore 5           # _result = gt_seg(x, A, lo, hi, "gt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 193.1-194.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<ge_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <458:and>
A7 00 22 # goto +34           # goto <456:cond_false>
# <458:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <455:cond_true>
A7 00 18 # goto +24           # goto <456:cond_false>
# <455:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <459:cond_true>
A7 00 08 # goto +8            # goto <460:cond_false>
# <459:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <461:cond_end>
# <460:cond_false>
10 00    # bipush 0           # false
# <461:cond_end>
A7 00 05 # goto +5            # goto <457:cond_end>
# <456:cond_false>
10 00    # bipush 0           # false
# <457:cond_end>
14 1D 66 # aldc 7526          # s[7526] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 198.4-198.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1D B3 # aldc 7603          # s[7603] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 198.4-198.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 1D C5 # aldc 7621          # s[7621] = "ge_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 197.1-198.59)"
B8 00 1D # invokestatic 29    # ge_seg(x, A, lo, hi, "ge_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 197.1-198.59)")
36 05    # vstore 5           # _result = ge_seg(x, A, lo, hi, "ge_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 197.1-198.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<lt_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <465:and>
A7 00 22 # goto +34           # goto <463:cond_false>
# <465:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <462:cond_true>
A7 00 18 # goto +24           # goto <463:cond_false>
# <462:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <466:cond_true>
A7 00 08 # goto +8            # goto <467:cond_false>
# <466:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <468:cond_end>
# <467:cond_false>
10 00    # bipush 0           # false
# <468:cond_end>
A7 00 05 # goto +5            # goto <464:cond_end>
# <463:cond_false>
10 00    # bipush 0           # false
# <464:cond_end>
14 1E 00 # aldc 7680          # s[7680] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 202.4-202.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1E 4D # aldc 7757          # s[7757] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 202.4-202.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 1E 5F # aldc 7775          # s[7775] = "lt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 201.1-202.59)"
B8 00 1E # invokestatic 30    # lt_seg(x, A, lo, hi, "lt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 201.1-202.59)")
36 05    # vstore 5           # _result = lt_seg(x, A, lo, hi, "lt_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 201.1-202.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<le_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <472:and>
A7 00 22 # goto +34           # goto <470:cond_false>
# <472:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <469:cond_true>
A7 00 18 # goto +24           # goto <470:cond_false>
# <469:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <473:cond_true>
A7 00 08 # goto +8            # goto <474:cond_false>
# <473:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <475:cond_end>
# <474:cond_false>
10 00    # bipush 0           # false
# <475:cond_end>
A7 00 05 # goto +5            # goto <471:cond_end>
# <470:cond_false>
10 00    # bipush 0           # false
# <471:cond_end>
14 1E 9A # aldc 7834          # s[7834] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 206.4-206.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 1E E7 # aldc 7911          # s[7911] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 206.4-206.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 1E F9 # aldc 7929          # s[7929] = "le_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 205.1-206.59)"
B8 00 1F # invokestatic 31    # le_seg(x, A, lo, hi, "le_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 205.1-206.59)")
36 05    # vstore 5           # _result = le_seg(x, A, lo, hi, "le_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 205.1-206.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<gt_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <479:and>
A7 00 22 # goto +34           # goto <477:cond_false>
# <479:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <476:cond_true>
A7 00 18 # goto +24           # goto <477:cond_false>
# <476:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <480:cond_true>
A7 00 08 # goto +8            # goto <481:cond_false>
# <480:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <482:cond_end>
# <481:cond_false>
10 00    # bipush 0           # false
# <482:cond_end>
A7 00 05 # goto +5            # goto <478:cond_end>
# <477:cond_false>
10 00    # bipush 0           # false
# <478:cond_end>
14 1F 34 # aldc 7988          # s[7988] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 212.4-212.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 1F 81 # aldc 8065          # s[8065] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 212.4-212.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <486:and>
A7 00 22 # goto +34           # goto <484:cond_false>
# <486:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <483:cond_true>
A7 00 18 # goto +24           # goto <484:cond_false>
# <483:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <487:cond_true>
A7 00 08 # goto +8            # goto <488:cond_false>
# <487:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <489:cond_end>
# <488:cond_false>
10 00    # bipush 0           # false
# <489:cond_end>
A7 00 05 # goto +5            # goto <485:cond_end>
# <484:cond_false>
10 00    # bipush 0           # false
# <485:cond_end>
14 1F 93 # aldc 8083          # s[8083] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 213.4-213.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 1F E0 # aldc 8160          # s[8160] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 213.4-213.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 1F F2 # aldc 8178          # s[8178] = "gt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 210.1-213.63)"
B8 00 20 # invokestatic 32    # gt_segs(A, lo1, hi1, B, lo2, hi2, "gt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 210.1-213.63)")
36 07    # vstore 7           # _result = gt_segs(A, lo1, hi1, B, lo2, hi2, "gt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 210.1-213.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<ge_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <493:and>
A7 00 22 # goto +34           # goto <491:cond_false>
# <493:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <490:cond_true>
A7 00 18 # goto +24           # goto <491:cond_false>
# <490:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <494:cond_true>
A7 00 08 # goto +8            # goto <495:cond_false>
# <494:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <496:cond_end>
# <495:cond_false>
10 00    # bipush 0           # false
# <496:cond_end>
A7 00 05 # goto +5            # goto <492:cond_end>
# <491:cond_false>
10 00    # bipush 0           # false
# <492:cond_end>
14 20 2E # aldc 8238          # s[8238] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 218.4-218.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 20 7B # aldc 8315          # s[8315] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 218.4-218.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <500:and>
A7 00 22 # goto +34           # goto <498:cond_false>
# <500:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <497:cond_true>
A7 00 18 # goto +24           # goto <498:cond_false>
# <497:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <501:cond_true>
A7 00 08 # goto +8            # goto <502:cond_false>
# <501:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <503:cond_end>
# <502:cond_false>
10 00    # bipush 0           # false
# <503:cond_end>
A7 00 05 # goto +5            # goto <499:cond_end>
# <498:cond_false>
10 00    # bipush 0           # false
# <499:cond_end>
14 20 8D # aldc 8333          # s[8333] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 219.4-219.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 20 DA # aldc 8410          # s[8410] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 219.4-219.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 20 EC # aldc 8428          # s[8428] = "ge_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 216.1-219.63)"
B8 00 21 # invokestatic 33    # ge_segs(A, lo1, hi1, B, lo2, hi2, "ge_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 216.1-219.63)")
36 07    # vstore 7           # _result = ge_segs(A, lo1, hi1, B, lo2, hi2, "ge_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 216.1-219.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<lt_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <507:and>
A7 00 22 # goto +34           # goto <505:cond_false>
# <507:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <504:cond_true>
A7 00 18 # goto +24           # goto <505:cond_false>
# <504:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <508:cond_true>
A7 00 08 # goto +8            # goto <509:cond_false>
# <508:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <510:cond_end>
# <509:cond_false>
10 00    # bipush 0           # false
# <510:cond_end>
A7 00 05 # goto +5            # goto <506:cond_end>
# <505:cond_false>
10 00    # bipush 0           # false
# <506:cond_end>
14 21 28 # aldc 8488          # s[8488] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 224.4-224.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 21 75 # aldc 8565          # s[8565] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 224.4-224.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <514:and>
A7 00 22 # goto +34           # goto <512:cond_false>
# <514:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <511:cond_true>
A7 00 18 # goto +24           # goto <512:cond_false>
# <511:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <515:cond_true>
A7 00 08 # goto +8            # goto <516:cond_false>
# <515:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <517:cond_end>
# <516:cond_false>
10 00    # bipush 0           # false
# <517:cond_end>
A7 00 05 # goto +5            # goto <513:cond_end>
# <512:cond_false>
10 00    # bipush 0           # false
# <513:cond_end>
14 21 87 # aldc 8583          # s[8583] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 225.4-225.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 21 D4 # aldc 8660          # s[8660] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 225.4-225.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 21 E6 # aldc 8678          # s[8678] = "lt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 222.1-225.63)"
B8 00 22 # invokestatic 34    # lt_segs(A, lo1, hi1, B, lo2, hi2, "lt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 222.1-225.63)")
36 07    # vstore 7           # _result = lt_segs(A, lo1, hi1, B, lo2, hi2, "lt_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 222.1-225.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<le_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <521:and>
A7 00 22 # goto +34           # goto <519:cond_false>
# <521:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <518:cond_true>
A7 00 18 # goto +24           # goto <519:cond_false>
# <518:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <522:cond_true>
A7 00 08 # goto +8            # goto <523:cond_false>
# <522:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <524:cond_end>
# <523:cond_false>
10 00    # bipush 0           # false
# <524:cond_end>
A7 00 05 # goto +5            # goto <520:cond_end>
# <519:cond_false>
10 00    # bipush 0           # false
# <520:cond_end>
14 22 22 # aldc 8738          # s[8738] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 230.4-230.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 22 6F # aldc 8815          # s[8815] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 230.4-230.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <528:and>
A7 00 22 # goto +34           # goto <526:cond_false>
# <528:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <525:cond_true>
A7 00 18 # goto +24           # goto <526:cond_false>
# <525:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <529:cond_true>
A7 00 08 # goto +8            # goto <530:cond_false>
# <529:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <531:cond_end>
# <530:cond_false>
10 00    # bipush 0           # false
# <531:cond_end>
A7 00 05 # goto +5            # goto <527:cond_end>
# <526:cond_false>
10 00    # bipush 0           # false
# <527:cond_end>
14 22 81 # aldc 8833          # s[8833] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 231.4-231.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 22 CE # aldc 8910          # s[8910] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 231.4-231.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 22 E0 # aldc 8928          # s[8928] = "le_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 228.1-231.63)"
B8 00 23 # invokestatic 35    # le_segs(A, lo1, hi1, B, lo2, hi2, "le_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 228.1-231.63)")
36 07    # vstore 7           # _result = le_segs(A, lo1, hi1, B, lo2, hi2, "le_segs__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 228.1-231.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<print_seg__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <535:and>
A7 00 22 # goto +34           # goto <533:cond_false>
# <535:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <532:cond_true>
A7 00 18 # goto +24           # goto <533:cond_false>
# <532:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <536:cond_true>
A7 00 08 # goto +8            # goto <537:cond_false>
# <536:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <538:cond_end>
# <537:cond_false>
10 00    # bipush 0           # false
# <538:cond_end>
A7 00 05 # goto +5            # goto <534:cond_end>
# <533:cond_false>
10 00    # bipush 0           # false
# <534:cond_end>
14 23 1C # aldc 8988          # s[8988] = "/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 235.4-235.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 23 69 # aldc 9065          # s[9065] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 235.4-235.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 23 7B # aldc 9083          # s[9083] = "print_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 234.1-235.59)"
B8 00 24 # invokestatic 36    # print_seg(A, lo, hi, "print_seg__1 (/tmp/tmp.n2ZIl2coE0/arrayutil.c0: 234.1-235.59)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_closed__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <539:cond_true>
A7 00 08 # goto +8            # goto <540:cond_false>
# <539:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <541:cond_end>
# <540:cond_false>
10 00    # bipush 0           # false
# <541:cond_end>
14 23 B9 # aldc 9145          # s[9145] = "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 09 # aldc 9225          # s[9225] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
B7 00 17 # invokenative 23    # file_closed(f)
36 02    # vstore 2           # _result = file_closed(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_read__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 27             # code length = 39 bytes
15 00    # vload 0            # path
B7 00 18 # invokenative 24    # file_read(path)
36 02    # vstore 2           # _result = file_read(path);
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <542:cond_true>
A7 00 08 # goto +8            # goto <543:cond_false>
# <542:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <544:cond_end>
# <543:cond_false>
15 02    # vload 2            # _result
14 24 1B # aldc 9243          # s[9243] = "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
B8 00 32 # invokestatic 50    # file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))
# <544:cond_end>
14 24 5D # aldc 9309          # s[9309] = "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<file_close__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <545:cond_true>
A7 00 08 # goto +8            # goto <546:cond_false>
# <545:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <547:cond_end>
# <546:cond_false>
10 00    # bipush 0           # false
# <547:cond_end>
14 24 AB # aldc 9387          # s[9387] = "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 FB # aldc 9467          # s[9467] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 25 0D # aldc 9485          # s[9485] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
B8 00 32 # invokestatic 50    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"))
14 25 50 # aldc 9552          # s[9552] = "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 25 A0 # aldc 9632          # s[9632] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 19 # invokenative 25    # file_close(f)
57       # pop                # (ignore result)
15 00    # vload 0            # f
14 25 B2 # aldc 9650          # s[9650] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 32 # invokestatic 50    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 25 F5 # aldc 9717          # s[9717] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # f
14 26 43 # aldc 9795          # s[9795] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 32 # invokestatic 50    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 26 86 # aldc 9862          # s[9862] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_eof__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <548:cond_true>
A7 00 08 # goto +8            # goto <549:cond_false>
# <548:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <550:cond_end>
# <549:cond_false>
10 00    # bipush 0           # false
# <550:cond_end>
14 26 D4 # aldc 9940          # s[9940] = "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 27 24 # aldc 10020         # s[10020] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 27 36 # aldc 10038         # s[10038] = "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
B8 00 32 # invokestatic 50    # file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"))
14 27 77 # aldc 10103         # s[10103] = "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 27 C7 # aldc 10183         # s[10183] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1A # invokenative 26    # file_eof(f)
36 02    # vstore 2           # _result = file_eof(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_readline__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <551:cond_true>
A7 00 08 # goto +8            # goto <552:cond_false>
# <551:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <553:cond_end>
# <552:cond_false>
10 00    # bipush 0           # false
# <553:cond_end>
14 27 D9 # aldc 10201         # s[10201] = "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 29 # aldc 10281         # s[10281] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 28 3B # aldc 10299         # s[10299] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
B8 00 32 # invokestatic 50    # file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"))
14 28 81 # aldc 10369         # s[10369] = "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 D1 # aldc 10449         # s[10449] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")) [failure message on stack]
15 00    # vload 0            # f
14 28 E3 # aldc 10467         # s[10467] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
B8 00 35 # invokestatic 53    # file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")
10 01    # bipush 1           # 
82       # ixor               # !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"))
14 29 29 # aldc 10537         # s[10537] = "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 29 79 # aldc 10617         # s[10617] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1B # invokenative 27    # file_readline(f)
36 02    # vstore 2           # _result = file_readline(f);
15 02    # vload 2            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 29 8B # aldc 10635         # s[10635] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 37 # invokestatic 55    # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <554:cond_true>
A7 00 08 # goto +8            # goto <555:cond_false>
# <554:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <556:cond_end>
# <555:cond_false>
10 00    # bipush 0           # false
# <556:cond_end>
14 29 C9 # aldc 10697         # s[10697] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 2A 15 # aldc 10773         # s[10773] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 39 # invokestatic 57    # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <557:cond_true>
A7 00 08 # goto +8            # goto <558:cond_false>
# <557:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <559:cond_end>
# <558:cond_false>
10 00    # bipush 0           # false
# <559:cond_end>
14 2A 54 # aldc 10836         # s[10836] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 2A A2 # aldc 10914         # s[10914] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 3B # invokestatic 59    # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <560:cond_true>
A7 00 08 # goto +8            # goto <561:cond_false>
# <560:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <562:cond_end>
# <561:cond_false>
10 00    # bipush 0           # false
# <562:cond_end>
14 2A E1 # aldc 10977         # s[10977] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 2F 8A # aldc 12170         # s[12170] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 3C # invokestatic 60    # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <629:cond_true>
A7 00 08 # goto +8            # goto <630:cond_false>
# <629:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <631:cond_end>
# <630:cond_false>
10 00    # bipush 0           # false
# <631:cond_end>
14 2F C3 # aldc 12227         # s[12227] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 30 13 # aldc 12307         # s[12307] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <632:cond_true>
A7 00 0B # goto +11           # goto <633:cond_false>
# <632:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <634:cond_end>
# <633:cond_false>
15 00    # vload 0            # x
# <634:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <635:cond_true>
A7 00 08 # goto +8            # goto <636:cond_false>
# <635:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <637:cond_end>
# <636:cond_false>
10 00    # bipush 0           # false
# <637:cond_end>
14 30 25 # aldc 12325         # s[12325] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 2B 2F # aldc 11055         # s[11055] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 3C # invokestatic 60    # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <563:cond_true>
A7 00 08 # goto +8            # goto <564:cond_false>
# <563:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <565:cond_end>
# <564:cond_false>
10 00    # bipush 0           # false
# <565:cond_end>
14 2B 6B # aldc 11115         # s[11115] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2B BB # aldc 11195         # s[11195] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 2B CD # aldc 11213         # s[11213] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 3D # invokestatic 61    # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <566:cond_true>
A7 00 08 # goto +8            # goto <567:cond_false>
# <566:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <568:cond_end>
# <567:cond_false>
10 00    # bipush 0           # false
# <568:cond_end>
14 2C 08 # aldc 11272         # s[11272] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <572:cond_true>
A7 00 0B # goto +11           # goto <573:cond_false>
# <572:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <574:cond_end>
# <573:cond_false>
15 00    # vload 0            # x
# <574:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <569:cond_true>
A7 00 08 # goto +8            # goto <570:cond_false>
# <569:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <571:cond_end>
# <570:cond_false>
10 00    # bipush 0           # false
# <571:cond_end>
14 2C 56 # aldc 11350         # s[11350] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <599:cond_true>
A7 00 08 # goto +8            # goto <600:cond_false>
# <599:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <601:cond_end>
# <600:cond_false>
15 01    # vload 1            # y
# <601:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <602:cond_true>
A7 00 08 # goto +8            # goto <603:cond_false>
# <602:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <604:cond_end>
# <603:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <605:cond_true>
A7 00 08 # goto +8            # goto <606:cond_false>
# <605:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <607:cond_end>
# <606:cond_false>
10 00    # bipush 0           # false
# <607:cond_end>
# <604:cond_end>
14 2E 52 # aldc 11858         # s[11858] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <608:cond_true>
A7 00 17 # goto +23           # goto <609:cond_false>
# <608:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <611:cond_true>
A7 00 08 # goto +8            # goto <612:cond_false>
# <611:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <613:cond_end>
# <612:cond_false>
10 00    # bipush 0           # false
# <613:cond_end>
A7 00 05 # goto +5            # goto <610:cond_end>
# <609:cond_false>
10 00    # bipush 0           # false
# <610:cond_end>
14 2E A0 # aldc 11936         # s[11936] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 2C A4 # aldc 11428         # s[11428] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 3F # invokestatic 63    # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <575:cond_true>
A7 00 08 # goto +8            # goto <576:cond_false>
# <575:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <577:cond_end>
# <576:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <578:cond_true>
A7 00 08 # goto +8            # goto <579:cond_false>
# <578:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <580:cond_end>
# <579:cond_false>
10 00    # bipush 0           # false
# <580:cond_end>
# <577:cond_end>
14 2C DF # aldc 11487         # s[11487] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <581:cond_true>
A7 00 17 # goto +23           # goto <582:cond_false>
# <581:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <584:cond_true>
A7 00 08 # goto +8            # goto <585:cond_false>
# <584:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <586:cond_end>
# <585:cond_false>
10 00    # bipush 0           # false
# <586:cond_end>
A7 00 05 # goto +5            # goto <583:cond_end>
# <582:cond_false>
10 00    # bipush 0           # false
# <583:cond_end>
14 2D 2D # aldc 11565         # s[11565] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <614:cond_true>
A7 00 08 # goto +8            # goto <615:cond_false>
# <614:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <616:cond_end>
# <615:cond_false>
15 00    # vload 0            # x
# <616:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <617:cond_true>
A7 00 08 # goto +8            # goto <618:cond_false>
# <617:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <619:cond_end>
# <618:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <620:cond_true>
A7 00 08 # goto +8            # goto <621:cond_false>
# <620:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <622:cond_end>
# <621:cond_false>
10 00    # bipush 0           # false
# <622:cond_end>
# <619:cond_end>
14 2E EE # aldc 12014         # s[12014] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <623:cond_true>
A7 00 17 # goto +23           # goto <624:cond_false>
# <623:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <626:cond_true>
A7 00 08 # goto +8            # goto <627:cond_false>
# <626:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <628:cond_end>
# <627:cond_false>
10 00    # bipush 0           # false
# <628:cond_end>
A7 00 05 # goto +5            # goto <625:cond_end>
# <624:cond_false>
10 00    # bipush 0           # false
# <625:cond_end>
14 2F 3C # aldc 12092         # s[12092] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 2D 7B # aldc 11643         # s[11643] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 41 # invokestatic 65    # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <587:cond_true>
A7 00 08 # goto +8            # goto <588:cond_false>
# <587:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <589:cond_end>
# <588:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <590:cond_true>
A7 00 08 # goto +8            # goto <591:cond_false>
# <590:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <592:cond_end>
# <591:cond_false>
10 00    # bipush 0           # false
# <592:cond_end>
# <589:cond_end>
14 2D B6 # aldc 11702         # s[11702] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <593:cond_true>
A7 00 17 # goto +23           # goto <594:cond_false>
# <593:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <596:cond_true>
A7 00 08 # goto +8            # goto <597:cond_false>
# <596:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <598:cond_end>
# <597:cond_false>
10 00    # bipush 0           # false
# <598:cond_end>
A7 00 05 # goto +5            # goto <595:cond_end>
# <594:cond_false>
10 00    # bipush 0           # false
# <595:cond_end>
14 2E 04 # aldc 11780         # s[11780] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 31 D9 # aldc 12761         # s[12761] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 38 # invokestatic 56    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <652:loop>
A7 00 03 # goto +3            # goto <653:body>
# <653:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <655:cond_true>
A7 00 17 # goto +23           # goto <656:cond_false>
# <655:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <658:cond_true>
A7 00 08 # goto +8            # goto <659:cond_false>
# <658:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <660:cond_end>
# <659:cond_false>
10 00    # bipush 0           # false
# <660:cond_end>
A7 00 05 # goto +5            # goto <657:cond_end>
# <656:cond_false>
10 00    # bipush 0           # false
# <657:cond_end>
14 32 16 # aldc 12822         # s[12822] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <661:then>
A7 00 2B # goto +43           # goto <662:else>
# <661:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 32 6B # aldc 12907         # s[12907] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 44 # invokestatic 68    # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <663:endif>
# <662:else>
A7 00 06 # goto +6            # break
# <663:endif>
A7 FF A4 # goto -92           # goto <652:loop>
# <654:exit>
15 04    # vload 4            # s
14 32 A8 # aldc 12968         # s[12968] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 0D # invokestatic 13    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 32 E5 # aldc 13029         # s[13029] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 33 22 # aldc 13090         # s[13090] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 38 # invokestatic 56    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <664:cond_true>
A7 00 08 # goto +8            # goto <665:cond_false>
# <664:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <666:cond_end>
# <665:cond_false>
10 00    # bipush 0           # false
# <666:cond_end>
14 33 5F # aldc 13151         # s[13151] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <638:cond_true>
A7 00 17 # goto +23           # goto <639:cond_false>
# <638:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <641:cond_true>
A7 00 08 # goto +8            # goto <642:cond_false>
# <641:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <643:cond_end>
# <642:cond_false>
10 00    # bipush 0           # false
# <643:cond_end>
A7 00 05 # goto +5            # goto <640:cond_end>
# <639:cond_false>
10 00    # bipush 0           # false
# <640:cond_end>
14 30 73 # aldc 12403         # s[12403] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 30 C3 # aldc 12483         # s[12483] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <647:and>
A7 00 26 # goto +38           # goto <645:else>
# <647:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <644:then>
A7 00 1C # goto +28           # goto <645:else>
# <644:then>
10 30    # bipush 48          # '0'
14 30 D5 # aldc 12501         # s[12501] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 0E # invokestatic 14    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 31 16 # aldc 12566         # s[12566] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 0F # invokestatic 15    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <646:endif>
# <645:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <651:and>
A7 00 29 # goto +41           # goto <649:else>
# <651:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <648:then>
A7 00 1F # goto +31           # goto <649:else>
# <648:then>
10 41    # bipush 65          # 'A'
14 31 57 # aldc 12631         # s[12631] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 0E # invokestatic 14    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 31 98 # aldc 12696         # s[12696] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 0F # invokestatic 15    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <650:endif>
# <649:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <650:endif>
# <646:endif>


#<is_space>
02                # number of arguments = 2
03                # number of local variables = 3
01 79             # code length = 377 bytes
15 00    # vload 0            # c
10 20    # bipush 32          # ' '
9F 01 5A # if_cmpeq +346      # if (c == ' ') goto <667:cond_true>
A7 00 03 # goto +3            # goto <703:or>
# <703:or>
15 00    # vload 0            # c
10 09    # bipush 9           # '\t'
9F 01 50 # if_cmpeq +336      # if (c == '\t') goto <667:cond_true>
A7 00 03 # goto +3            # goto <702:or>
# <702:or>
15 00    # vload 0            # c
10 0A    # bipush 10          # '\n'
9F 01 46 # if_cmpeq +326      # if (c == '\n') goto <667:cond_true>
A7 00 03 # goto +3            # goto <701:or>
# <701:or>
15 00    # vload 0            # c
10 0D    # bipush 13          # '\r'
9F 01 3C # if_cmpeq +316      # if (c == '\r') goto <667:cond_true>
A7 00 03 # goto +3            # goto <700:or>
# <700:or>
15 00    # vload 0            # c
10 2C    # bipush 44          # ','
9F 01 32 # if_cmpeq +306      # if (c == ',') goto <667:cond_true>
A7 00 03 # goto +3            # goto <699:or>
# <699:or>
15 00    # vload 0            # c
10 2E    # bipush 46          # '.'
9F 01 28 # if_cmpeq +296      # if (c == '.') goto <667:cond_true>
A7 00 03 # goto +3            # goto <698:or>
# <698:or>
15 00    # vload 0            # c
10 3B    # bipush 59          # ';'
9F 01 1E # if_cmpeq +286      # if (c == ';') goto <667:cond_true>
A7 00 03 # goto +3            # goto <697:or>
# <697:or>
15 00    # vload 0            # c
10 3A    # bipush 58          # ':'
9F 01 14 # if_cmpeq +276      # if (c == ':') goto <667:cond_true>
A7 00 03 # goto +3            # goto <696:or>
# <696:or>
15 00    # vload 0            # c
10 22    # bipush 34          # '\"'
9F 01 0A # if_cmpeq +266      # if (c == '\"') goto <667:cond_true>
A7 00 03 # goto +3            # goto <695:or>
# <695:or>
15 00    # vload 0            # c
10 2D    # bipush 45          # '-'
9F 01 00 # if_cmpeq +256      # if (c == '-') goto <667:cond_true>
A7 00 03 # goto +3            # goto <694:or>
# <694:or>
15 00    # vload 0            # c
10 21    # bipush 33          # '!'
9F 00 F6 # if_cmpeq +246      # if (c == '!') goto <667:cond_true>
A7 00 03 # goto +3            # goto <693:or>
# <693:or>
15 00    # vload 0            # c
10 3F    # bipush 63          # '\?'
9F 00 EC # if_cmpeq +236      # if (c == '?') goto <667:cond_true>
A7 00 03 # goto +3            # goto <692:or>
# <692:or>
15 00    # vload 0            # c
10 7C    # bipush 124         # '|'
9F 00 E2 # if_cmpeq +226      # if (c == '|') goto <667:cond_true>
A7 00 03 # goto +3            # goto <691:or>
# <691:or>
15 00    # vload 0            # c
10 7E    # bipush 126         # '~'
9F 00 D8 # if_cmpeq +216      # if (c == '~') goto <667:cond_true>
A7 00 03 # goto +3            # goto <690:or>
# <690:or>
15 00    # vload 0            # c
10 28    # bipush 40          # '('
9F 00 CE # if_cmpeq +206      # if (c == '(') goto <667:cond_true>
A7 00 03 # goto +3            # goto <689:or>
# <689:or>
15 00    # vload 0            # c
10 29    # bipush 41          # ')'
9F 00 C4 # if_cmpeq +196      # if (c == ')') goto <667:cond_true>
A7 00 03 # goto +3            # goto <688:or>
# <688:or>
15 00    # vload 0            # c
10 5B    # bipush 91          # '['
9F 00 BA # if_cmpeq +186      # if (c == '[') goto <667:cond_true>
A7 00 03 # goto +3            # goto <687:or>
# <687:or>
15 00    # vload 0            # c
10 5D    # bipush 93          # ']'
9F 00 B0 # if_cmpeq +176      # if (c == ']') goto <667:cond_true>
A7 00 03 # goto +3            # goto <686:or>
# <686:or>
15 00    # vload 0            # c
10 7B    # bipush 123         # '{'
9F 00 A6 # if_cmpeq +166      # if (c == '{') goto <667:cond_true>
A7 00 03 # goto +3            # goto <685:or>
# <685:or>
15 00    # vload 0            # c
10 7D    # bipush 125         # '}'
9F 00 9C # if_cmpeq +156      # if (c == '}') goto <667:cond_true>
A7 00 03 # goto +3            # goto <684:or>
# <684:or>
15 00    # vload 0            # c
10 23    # bipush 35          # '#'
9F 00 92 # if_cmpeq +146      # if (c == '#') goto <667:cond_true>
A7 00 03 # goto +3            # goto <683:or>
# <683:or>
15 00    # vload 0            # c
10 24    # bipush 36          # '$'
9F 00 88 # if_cmpeq +136      # if (c == '$') goto <667:cond_true>
A7 00 03 # goto +3            # goto <682:or>
# <682:or>
15 00    # vload 0            # c
10 25    # bipush 37          # '%'
9F 00 7E # if_cmpeq +126      # if (c == '%') goto <667:cond_true>
A7 00 03 # goto +3            # goto <681:or>
# <681:or>
15 00    # vload 0            # c
10 27    # bipush 39          # '\''
9F 00 74 # if_cmpeq +116      # if (c == '\'') goto <667:cond_true>
A7 00 03 # goto +3            # goto <680:or>
# <680:or>
15 00    # vload 0            # c
10 2A    # bipush 42          # '*'
9F 00 6A # if_cmpeq +106      # if (c == '*') goto <667:cond_true>
A7 00 03 # goto +3            # goto <679:or>
# <679:or>
15 00    # vload 0            # c
10 2B    # bipush 43          # '+'
9F 00 60 # if_cmpeq +96       # if (c == '+') goto <667:cond_true>
A7 00 03 # goto +3            # goto <678:or>
# <678:or>
15 00    # vload 0            # c
10 2F    # bipush 47          # '/'
9F 00 56 # if_cmpeq +86       # if (c == '/') goto <667:cond_true>
A7 00 03 # goto +3            # goto <677:or>
# <677:or>
15 00    # vload 0            # c
10 3C    # bipush 60          # '<'
9F 00 4C # if_cmpeq +76       # if (c == '<') goto <667:cond_true>
A7 00 03 # goto +3            # goto <676:or>
# <676:or>
15 00    # vload 0            # c
10 3D    # bipush 61          # '='
9F 00 42 # if_cmpeq +66       # if (c == '=') goto <667:cond_true>
A7 00 03 # goto +3            # goto <675:or>
# <675:or>
15 00    # vload 0            # c
10 3E    # bipush 62          # '>'
9F 00 38 # if_cmpeq +56       # if (c == '>') goto <667:cond_true>
A7 00 03 # goto +3            # goto <674:or>
# <674:or>
15 00    # vload 0            # c
10 40    # bipush 64          # '@'
9F 00 2E # if_cmpeq +46       # if (c == '@') goto <667:cond_true>
A7 00 03 # goto +3            # goto <673:or>
# <673:or>
15 00    # vload 0            # c
10 5C    # bipush 92          # '\\'
9F 00 24 # if_cmpeq +36       # if (c == '\\') goto <667:cond_true>
A7 00 03 # goto +3            # goto <672:or>
# <672:or>
15 00    # vload 0            # c
10 26    # bipush 38          # '&'
9F 00 1A # if_cmpeq +26       # if (c == '&') goto <667:cond_true>
A7 00 03 # goto +3            # goto <671:or>
# <671:or>
15 00    # vload 0            # c
10 5E    # bipush 94          # '^'
9F 00 10 # if_cmpeq +16       # if (c == '^') goto <667:cond_true>
A7 00 03 # goto +3            # goto <670:or>
# <670:or>
15 00    # vload 0            # c
10 5F    # bipush 95          # '_'
9F 00 06 # if_cmpeq +6        # if (c == '_') goto <667:cond_true>
A7 00 08 # goto +8            # goto <668:cond_false>
# <667:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <669:cond_end>
# <668:cond_false>
15 00    # vload 0            # c
10 60    # bipush 96          # '`'
9F 00 06 # if_cmpeq +6        # if (c == '`') goto <704:cond_true>
A7 00 08 # goto +8            # goto <705:cond_false>
# <704:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <706:cond_end>
# <705:cond_false>
10 00    # bipush 0           # false
# <706:cond_end>
# <669:cond_end>
36 02    # vstore 2           # _result = ((((((((((((((((((((((((((((((((((((c == ' ') || (c == '\t')) || (c == '\n')) || (c == '\r')) || (c == ',')) || (c == '.')) || (c == ';')) || (c == ':')) || (c == '\"')) || (c == '-')) || (c == '!')) || (c == '?')) || (c == '|')) || (c == '~')) || (c == '(')) || (c == ')')) || (c == '[')) || (c == ']')) || (c == '{')) || (c == '}')) || (c == '#')) || (c == '$')) || (c == '%')) || (c == '\'')) || (c == '*')) || (c == '+')) || (c == '/')) || (c == '<')) || (c == '=')) || (c == '>')) || (c == '@')) || (c == '\\')) || (c == '&')) || (c == '^')) || (c == '_')) || (c == '`'));
15 02    # vload 2            # _result
B0       # return             # 


#<word>
04                # number of arguments = 4
07                # number of local variables = 7
01 14             # code length = 276 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <707:cond_true>
A7 00 1D # goto +29           # goto <708:cond_false>
# <707:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # sentence
14 33 AD # aldc 13229         # s[13229] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.27-33.50)"
B8 00 01 # invokestatic 1     # string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.27-33.50)")
A1 00 06 # if_icmplt +6       # if (i < string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.27-33.50)")) goto <710:cond_true>
A7 00 08 # goto +8            # goto <711:cond_false>
# <710:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <712:cond_end>
# <711:cond_false>
10 00    # bipush 0           # false
# <712:cond_end>
A7 00 05 # goto +5            # goto <709:cond_end>
# <708:cond_false>
10 00    # bipush 0           # false
# <709:cond_end>
14 33 E1 # aldc 13281         # s[13281] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.4-33.51: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 34 2B # aldc 13355         # s[13355] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.4-33.51: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i < string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 33.27-33.50)"))) [failure message on stack]
15 00    # vload 0            # sentence
15 01    # vload 1            # i
14 34 3D # aldc 13373         # s[13373] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.23-34.49)"
B8 00 02 # invokestatic 2     # string_charat__1(sentence, i, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.23-34.49)")
14 34 71 # aldc 13425         # s[13425] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.14-34.50)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(sentence, i, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.23-34.49)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.14-34.50)")
10 01    # bipush 1           # 
82       # ixor               # !(is_space(string_charat__1(sentence, i, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.23-34.49)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.14-34.50)"))
14 34 A5 # aldc 13477         # s[13477] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.4-34.51: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 34 EF # aldc 13551         # s[13551] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.4-34.51: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(is_space(string_charat__1(sentence, i, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.23-34.49)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 34.14-34.50)")) [failure message on stack]
15 01    # vload 1            # i
10 01    # bipush 1           # 1
60       # iadd               # (i + 1)
36 05    # vstore 5           # j = (i + 1);
15 00    # vload 0            # sentence
14 35 01 # aldc 13569         # s[13569] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 39.13-39.36)"
B8 00 01 # invokestatic 1     # string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 39.13-39.36)")
36 06    # vstore 6           # len = string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 39.13-39.36)");
# <713:loop>
A7 00 03 # goto +3            # goto <714:body>
# <714:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <716:cond_true>
A7 00 17 # goto +23           # goto <717:cond_false>
# <716:cond_true>
15 05    # vload 5            # j
15 06    # vload 6            # len
A4 00 06 # if_icmple +6       # if (j <= len) goto <719:cond_true>
A7 00 08 # goto +8            # goto <720:cond_false>
# <719:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <721:cond_end>
# <720:cond_false>
10 00    # bipush 0           # false
# <721:cond_end>
A7 00 05 # goto +5            # goto <718:cond_end>
# <717:cond_false>
10 00    # bipush 0           # false
# <718:cond_end>
14 35 35 # aldc 13621         # s[13621] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 42.8-42.42: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= j) && (j <= len)) [failure message on stack]
15 05    # vload 5            # j
15 06    # vload 6            # len
A1 00 06 # if_icmplt +6       # if (j < len) goto <725:and>
A7 00 25 # goto +37           # goto <723:else>
# <725:and>
15 00    # vload 0            # sentence
15 05    # vload 5            # j
14 35 84 # aldc 13700         # s[13700] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.31-41.57)"
B8 00 02 # invokestatic 2     # string_charat__1(sentence, j, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.31-41.57)")
14 35 B8 # aldc 13752         # s[13752] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.22-41.58)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(sentence, j, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.31-41.57)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.22-41.58)")
10 01    # bipush 1           # true
9F 00 10 # if_cmpeq +16       # if (is_space(string_charat__1(sentence, j, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.31-41.57)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 41.22-41.58)") == true) goto <723:else>
A7 00 03 # goto +3            # goto <722:then>
# <722:then>
15 05    # vload 5            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # j += 1;
A7 00 06 # goto +6            # goto <724:endif>
# <723:else>
A7 00 06 # goto +6            # break
# <724:endif>
A7 FF AA # goto -86           # goto <713:loop>
# <715:exit>
15 02    # vload 2            # newi
15 05    # vload 5            # j
4E       # imstore            # *(newi) = j;
15 00    # vload 0            # sentence
15 01    # vload 1            # i
15 05    # vload 5            # j
14 35 EC # aldc 13804         # s[13804] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.25-47.51)"
B8 00 04 # invokestatic 4     # string_sub__1(sentence, i, j, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.25-47.51)")
14 36 20 # aldc 13856         # s[13856] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.10-47.52)"
B8 00 0A # invokestatic 10    # string_tolower__1(string_sub__1(sentence, i, j, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.25-47.51)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.10-47.52)")
36 04    # vstore 4           # _result = string_tolower__1(string_sub__1(sentence, i, j, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.25-47.51)"), "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 47.10-47.52)");
15 04    # vload 4            # _result
14 36 54 # aldc 13908         # s[13908] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.12-35.34)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.12-35.34)")
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (string_length__1(_result, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.12-35.34)") > 0) goto <726:cond_true>
A7 00 08 # goto +8            # goto <727:cond_false>
# <726:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <728:cond_end>
# <727:cond_false>
10 00    # bipush 0           # false
# <728:cond_end>
14 36 88 # aldc 13960         # s[13960] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.4-35.39: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 35.12-35.34)") > 0) [failure message on stack]
15 02    # vload 2            # newi
2E       # imload             # *(newi)
15 00    # vload 0            # sentence
14 36 D0 # aldc 14032         # s[14032] = "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.21-36.44)"
B8 00 01 # invokestatic 1     # string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.21-36.44)")
A4 00 06 # if_icmple +6       # if (*(newi) <= string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.21-36.44)")) goto <729:cond_true>
A7 00 08 # goto +8            # goto <730:cond_false>
# <729:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <731:cond_end>
# <730:cond_false>
10 00    # bipush 0           # false
# <731:cond_end>
14 37 04 # aldc 14084         # s[14084] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.4-36.45: @ensures annotation failed"
CF       # assert             # assert (*(newi) <= string_length__1(sentence, "word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 36.21-36.44)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<skip_space>
03                # number of arguments = 3
05                # number of local variables = 5
00 A7             # code length = 167 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <732:cond_true>
A7 00 1D # goto +29           # goto <733:cond_false>
# <732:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # sentence
14 37 4C # aldc 14156         # s[14156] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.28-51.51)"
B8 00 01 # invokestatic 1     # string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.28-51.51)")
A4 00 06 # if_icmple +6       # if (i <= string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.28-51.51)")) goto <735:cond_true>
A7 00 08 # goto +8            # goto <736:cond_false>
# <735:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <737:cond_end>
# <736:cond_false>
10 00    # bipush 0           # false
# <737:cond_end>
A7 00 05 # goto +5            # goto <734:cond_end>
# <733:cond_false>
10 00    # bipush 0           # false
# <734:cond_end>
14 37 86 # aldc 14214         # s[14214] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.4-51.52: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 37 D0 # aldc 14288         # s[14288] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.4-51.52: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i <= string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 51.28-51.51)"))) [failure message on stack]
15 01    # vload 1            # i
36 04    # vstore 4           # j = i;
# <738:loop>
A7 00 03 # goto +3            # goto <739:body>
# <739:body>
15 04    # vload 4            # j
15 00    # vload 0            # sentence
14 37 E2 # aldc 14306         # s[14306] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.14-56.37)"
B8 00 01 # invokestatic 1     # string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.14-56.37)")
A1 00 06 # if_icmplt +6       # if (j < string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.14-56.37)")) goto <744:and>
A7 00 25 # goto +37           # goto <742:else>
# <744:and>
15 00    # vload 0            # sentence
15 04    # vload 4            # j
14 38 1C # aldc 14364         # s[14364] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.50-56.76)"
B8 00 02 # invokestatic 2     # string_charat__1(sentence, j, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.50-56.76)")
14 38 56 # aldc 14422         # s[14422] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.41-56.77)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(sentence, j, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.50-56.76)"), "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.41-56.77)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_space(string_charat__1(sentence, j, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.50-56.76)"), "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 56.41-56.77)") == true) goto <741:then>
A7 00 0D # goto +13           # goto <742:else>
# <741:then>
15 04    # vload 4            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # j += 1;
A7 00 06 # goto +6            # goto <743:endif>
# <742:else>
A7 00 06 # goto +6            # break
# <743:endif>
A7 FF C8 # goto -56           # goto <738:loop>
# <740:exit>
15 04    # vload 4            # j
36 03    # vstore 3           # _result = j;
15 03    # vload 3            # _result
15 00    # vload 0            # sentence
14 38 90 # aldc 14480         # s[14480] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.23-52.46)"
B8 00 01 # invokestatic 1     # string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.23-52.46)")
9F 00 06 # if_cmpeq +6        # if (_result == string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.23-52.46)")) goto <745:cond_true>
A7 00 08 # goto +8            # goto <746:cond_false>
# <745:cond_true>
10 01    # bipush 1           # true
A7 00 16 # goto +22           # goto <747:cond_end>
# <746:cond_false>
15 00    # vload 0            # sentence
15 03    # vload 3            # _result
14 38 CA # aldc 14538         # s[14538] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.22-53.54)"
B8 00 02 # invokestatic 2     # string_charat__1(sentence, _result, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.22-53.54)")
14 39 04 # aldc 14596         # s[14596] = "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.13-53.55)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(sentence, _result, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.22-53.54)"), "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.13-53.55)")
10 01    # bipush 1           # 
82       # ixor               # !(is_space(string_charat__1(sentence, _result, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.22-53.54)"), "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.13-53.55)"))
# <747:cond_end>
14 39 3E # aldc 14654         # s[14654] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.4-53.56: @ensures annotation failed"
CF       # assert             # assert ((_result == string_length__1(sentence, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 52.23-52.46)")) || !(is_space(string_charat__1(sentence, _result, "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.22-53.54)"), "skip_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 53.13-53.55)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<reader_valid>
02                # number of arguments = 2
03                # number of local variables = 3
00 42             # code length = 66 bytes
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <748:cond_true>
A7 00 08 # goto +8            # goto <749:cond_false>
# <748:cond_true>
10 01    # bipush 1           # true
A7 00 32 # goto +50           # goto <750:cond_end>
# <749:cond_false>
10 00    # bipush 0           # 0
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
A4 00 06 # if_icmple +6       # if (0 <= r->current_idx) goto <751:cond_true>
A7 00 23 # goto +35           # goto <752:cond_false>
# <751:cond_true>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 39 86 # aldc 14726         # s[14726] = "reader_valid (/tmp/tmp.n2ZIl2coE0/readfile.c0: 75.50-75.75)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "reader_valid (/tmp/tmp.n2ZIl2coE0/readfile.c0: 75.50-75.75)")
A4 00 06 # if_icmple +6       # if (r->current_idx <= string_length__1(r->current, "reader_valid (/tmp/tmp.n2ZIl2coE0/readfile.c0: 75.50-75.75)")) goto <754:cond_true>
A7 00 08 # goto +8            # goto <755:cond_false>
# <754:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <756:cond_end>
# <755:cond_false>
10 00    # bipush 0           # false
# <756:cond_end>
A7 00 05 # goto +5            # goto <753:cond_end>
# <752:cond_false>
10 00    # bipush 0           # false
# <753:cond_end>
# <750:cond_end>
36 02    # vstore 2           # _result = ((r == NULL) || ((0 <= r->current_idx) && (r->current_idx <= string_length__1(r->current, "reader_valid (/tmp/tmp.n2ZIl2coE0/readfile.c0: 75.50-75.75)"))));
15 02    # vload 2            # _result
B0       # return             # 


#<at_space>
02                # number of arguments = 2
03                # number of local variables = 3
00 55             # code length = 85 bytes
15 00    # vload 0            # r
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (r != NULL) goto <757:cond_true>
A7 00 08 # goto +8            # goto <758:cond_false>
# <757:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <759:cond_end>
# <758:cond_false>
10 00    # bipush 0           # false
# <759:cond_end>
14 39 C2 # aldc 14786         # s[14786] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 79.4-79.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3A 0C # aldc 14860         # s[14860] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 79.4-79.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (r != NULL) [failure message on stack]
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3A 1E # aldc 14878         # s[14878] = "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 81.27-81.52)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 81.27-81.52)")
A1 00 06 # if_icmplt +6       # if (r->current_idx < string_length__1(r->current, "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 81.27-81.52)")) goto <760:cond_true>
A7 00 1C # goto +28           # goto <761:cond_false>
# <760:cond_true>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
14 3A 56 # aldc 14934         # s[14934] = "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.17-82.58)"
B8 00 02 # invokestatic 2     # string_charat__1(r->current, r->current_idx, "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.17-82.58)")
14 3A 8E # aldc 14990         # s[14990] = "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.8-82.59)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(r->current, r->current_idx, "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.17-82.58)"), "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.8-82.59)")
A7 00 05 # goto +5            # goto <762:cond_end>
# <761:cond_false>
10 00    # bipush 0           # false
# <762:cond_end>
36 02    # vstore 2           # _result = ((r->current_idx < string_length__1(r->current, "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 81.27-81.52)")) && is_space(string_charat__1(r->current, r->current_idx, "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.17-82.58)"), "at_space (/tmp/tmp.n2ZIl2coE0/readfile.c0: 82.8-82.59)"));
15 02    # vload 2            # _result
B0       # return             # 


#<get_reader>
02                # number of arguments = 2
05                # number of local variables = 5
00 A9             # code length = 169 bytes
15 00    # vload 0            # fname
14 3A C5 # aldc 15045         # s[15045] = "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 88.17-88.33)"
B8 00 33 # invokestatic 51    # file_read__1(fname, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 88.17-88.33)")
36 03    # vstore 3           # file = file_read__1(fname, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 88.17-88.33)");
15 03    # vload 3            # file
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (file == NULL) goto <763:then>
A7 00 29 # goto +41           # goto <764:else>
# <763:then>
01       # aconst_null        # NULL
36 02    # vstore 2           # _result = NULL;
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <766:cond_true>
A7 00 08 # goto +8            # goto <767:cond_false>
# <766:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <768:cond_end>
# <767:cond_false>
15 02    # vload 2            # _result
14 3A FF # aldc 15103         # s[15103] = "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"
B8 00 49 # invokestatic 73    # at_space(_result, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(_result, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"))
# <768:cond_end>
14 3B 39 # aldc 15161         # s[15161] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.4-86.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(at_space(_result, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <765:endif>
# <764:else>
# <765:endif>
BB 18    # new 24             # alloc(reader_t)
36 04    # vstore 4           # r = alloc(reader_t);
15 04    # vload 4            # r
62 00    # aaddf 0            # &r->file
15 03    # vload 3            # file
4F       # amstore            # r->file = file;
15 03    # vload 3            # file
14 3B 81 # aldc 15233         # s[15233] = "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 95.7-95.21)"
B8 00 35 # invokestatic 53    # file_eof__1(file, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 95.7-95.21)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (file_eof__1(file, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 95.7-95.21)") == true) goto <769:then>
A7 00 15 # goto +21           # goto <770:else>
# <769:then>
15 04    # vload 4            # r
62 08    # aaddf 8            # &r->current
14 3B BA # aldc 15290         # s[15290] = ""
4F       # amstore            # r->current = "";
15 04    # vload 4            # r
62 10    # aaddf 16           # &r->current_idx
10 00    # bipush 0           # 0
4E       # imstore            # r->current_idx = 0;
A7 00 22 # goto +34           # goto <771:endif>
# <770:else>
15 04    # vload 4            # r
62 08    # aaddf 8            # &r->current
15 03    # vload 3            # file
14 3B BB # aldc 15291         # s[15291] = "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 100.18-100.37)"
B8 00 36 # invokestatic 54    # file_readline__1(file, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 100.18-100.37)")
4F       # amstore            # r->current = file_readline__1(file, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 100.18-100.37)");
15 04    # vload 4            # r
62 10    # aaddf 16           # &r->current_idx
15 04    # vload 4            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
10 00    # bipush 0           # 0
14 3B F7 # aldc 15351         # s[15351] = "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 101.22-101.47)"
B8 00 47 # invokestatic 71    # skip_space(r->current, 0, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 101.22-101.47)")
4E       # imstore            # r->current_idx = skip_space(r->current, 0, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 101.22-101.47)");
# <771:endif>
15 04    # vload 4            # r
36 02    # vstore 2           # _result = r;
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <772:cond_true>
A7 00 08 # goto +8            # goto <773:cond_false>
# <772:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <774:cond_end>
# <773:cond_false>
15 02    # vload 2            # _result
14 3C 33 # aldc 15411         # s[15411] = "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"
B8 00 49 # invokestatic 73    # at_space(_result, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(_result, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"))
# <774:cond_end>
14 3C 6D # aldc 15469         # s[15469] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.4-86.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(at_space(_result, "get_reader (/tmp/tmp.n2ZIl2coE0/readfile.c0: 86.32-86.49)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<read_word>
02                # number of arguments = 2
05                # number of local variables = 5
01 FC             # code length = 508 bytes
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <775:cond_true>
A7 00 08 # goto +8            # goto <776:cond_false>
# <775:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <777:cond_end>
# <776:cond_false>
15 00    # vload 0            # r
14 3C B5 # aldc 15541         # s[15541] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.27-107.38)"
B8 00 49 # invokestatic 73    # at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.27-107.38)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.27-107.38)"))
# <777:cond_end>
14 3C F0 # aldc 15600         # s[15600] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.4-107.39: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3D 3C # aldc 15676         # s[15676] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.4-107.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 107.27-107.38)"))) [failure message on stack]
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <778:then>
A7 00 2B # goto +43           # goto <779:else>
# <778:then>
14 3D 4E # aldc 15694         # s[15694] = ""
36 02    # vstore 2           # _result = "";
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <781:cond_true>
A7 00 08 # goto +8            # goto <782:cond_false>
# <781:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <783:cond_end>
# <782:cond_false>
15 00    # vload 0            # r
14 3D 4F # aldc 15695         # s[15695] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"
B8 00 49 # invokestatic 73    # at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"))
# <783:cond_end>
14 3D 8A # aldc 15754         # s[15754] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.4-108.38: @ensures annotation failed"
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <780:endif>
# <779:else>
# <780:endif>
# <784:loop>
A7 00 03 # goto +3            # goto <785:body>
# <785:body>
15 00    # vload 0            # r
14 3D D4 # aldc 15828         # s[15828] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.24-115.35)"
B8 00 49 # invokestatic 73    # at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.24-115.35)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.24-115.35)"))
14 3E 0F # aldc 15887         # s[15887] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.8-115.36: @loop_invariant annotation failed"
CF       # assert             # assert !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 115.24-115.35)")) [failure message on stack]
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3E 60 # aldc 15968         # s[15968] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.28-114.53)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.28-114.53)")
9F 00 06 # if_cmpeq +6        # if (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.28-114.53)")) goto <790:and>
A7 00 3B # goto +59           # goto <788:else>
# <790:and>
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 3E 9B # aldc 16027         # s[16027] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.58-114.75)"
B8 00 35 # invokestatic 53    # file_eof__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.58-114.75)")
10 01    # bipush 1           # true
9F 00 2B # if_cmpeq +43       # if (file_eof__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 114.58-114.75)") == true) goto <788:else>
A7 00 03 # goto +3            # goto <787:then>
# <787:then>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 3E D6 # aldc 16086         # s[16086] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 117.20-117.42)"
B8 00 36 # invokestatic 54    # file_readline__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 117.20-117.42)")
4F       # amstore            # r->current = file_readline__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 117.20-117.42)");
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
10 00    # bipush 0           # 0
14 3F 11 # aldc 16145         # s[16145] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 118.24-118.49)"
B8 00 47 # invokestatic 71    # skip_space(r->current, 0, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 118.24-118.49)")
4E       # imstore            # r->current_idx = skip_space(r->current, 0, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 118.24-118.49)");
A7 00 06 # goto +6            # goto <789:endif>
# <788:else>
A7 00 06 # goto +6            # break
# <789:endif>
A7 FF 9D # goto -99           # goto <784:loop>
# <786:exit>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3F 4C # aldc 16204         # s[16204] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.31-122.56)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.31-122.56)")
A1 00 06 # if_icmplt +6       # if (r->current_idx < string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.31-122.56)")) goto <794:and>
A7 00 26 # goto +38           # goto <792:cond_false>
# <794:and>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
14 3F 87 # aldc 16263         # s[16263] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.27-123.68)"
B8 00 02 # invokestatic 2     # string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.27-123.68)")
14 3F C2 # aldc 16322         # s[16322] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.18-123.69)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.27-123.68)"), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.18-123.69)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.27-123.68)"), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.18-123.69)") == true) goto <792:cond_false>
A7 00 03 # goto +3            # goto <791:cond_true>
# <791:cond_true>
10 01    # bipush 1           # true
A7 00 29 # goto +41           # goto <793:cond_end>
# <792:cond_false>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3F FD # aldc 16381         # s[16381] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 124.32-124.57)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 124.32-124.57)")
9F 00 06 # if_cmpeq +6        # if (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 124.32-124.57)")) goto <795:cond_true>
A7 00 11 # goto +17           # goto <796:cond_false>
# <795:cond_true>
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 40 38 # aldc 16440         # s[16440] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 125.17-125.34)"
B8 00 35 # invokestatic 53    # file_eof__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 125.17-125.34)")
A7 00 05 # goto +5            # goto <797:cond_end>
# <796:cond_false>
10 00    # bipush 0           # false
# <797:cond_end>
# <793:cond_end>
14 40 73 # aldc 16499         # s[16499] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.6-125.36: @assert annotation failed"
CF       # assert             # assert (((r->current_idx < string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 122.31-122.56)")) && !(is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.27-123.68)"), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 123.18-123.69)"))) || ((r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 124.32-124.57)")) && file_eof__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 125.17-125.34)"))) [failure message on stack]
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 40 BC # aldc 16572         # s[16572] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 127.24-127.49)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 127.24-127.49)")
A1 00 06 # if_icmplt +6       # if (r->current_idx < string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 127.24-127.49)")) goto <798:then>
A7 00 72 # goto +114          # goto <799:else>
# <798:then>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
14 40 F7 # aldc 16631         # s[16631] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.25-129.66)"
B8 00 02 # invokestatic 2     # string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.25-129.66)")
14 41 32 # aldc 16690         # s[16690] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.16-129.67)"
B8 00 45 # invokestatic 69    # is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.25-129.66)"), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.16-129.67)")
10 01    # bipush 1           # 
82       # ixor               # !(is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.25-129.66)"), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.16-129.67)"))
14 41 6D # aldc 16749         # s[16749] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.8-129.68: @assert annotation failed"
CF       # assert             # assert !(is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.25-129.66)"), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 129.16-129.67)")) [failure message on stack]
BB 04    # new 4              # alloc(int)
36 03    # vstore 3           # newi = alloc(int);
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 03    # vload 3            # newi
14 41 B6 # aldc 16822         # s[16822] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 131.16-131.54)"
B8 00 46 # invokestatic 70    # word(r->current, r->current_idx, newi, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 131.16-131.54)")
36 04    # vstore 4           # w = word(r->current, r->current_idx, newi, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 131.16-131.54)");
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 03    # vload 3            # newi
2E       # imload             # *(newi)
14 41 F1 # aldc 16881         # s[16881] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 132.22-132.51)"
B8 00 47 # invokestatic 71    # skip_space(r->current, *(newi), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 132.22-132.51)")
4E       # imstore            # r->current_idx = skip_space(r->current, *(newi), "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 132.22-132.51)");
15 04    # vload 4            # w
36 02    # vstore 2           # _result = w;
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <801:cond_true>
A7 00 08 # goto +8            # goto <802:cond_false>
# <801:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <803:cond_end>
# <802:cond_false>
15 00    # vload 0            # r
14 42 2C # aldc 16940         # s[16940] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"
B8 00 49 # invokestatic 73    # at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"))
# <803:cond_end>
14 42 67 # aldc 16999         # s[16999] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.4-108.38: @ensures annotation failed"
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
A7 00 58 # goto +88           # goto <800:endif>
# <799:else>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 42 B1 # aldc 17073         # s[17073] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.34-135.59)"
B8 00 01 # invokestatic 1     # string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.34-135.59)")
9F 00 06 # if_cmpeq +6        # if (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.34-135.59)")) goto <804:cond_true>
A7 00 08 # goto +8            # goto <805:cond_false>
# <804:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <806:cond_end>
# <805:cond_false>
10 00    # bipush 0           # false
# <806:cond_end>
14 42 EC # aldc 17132         # s[17132] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.8-135.61: @assert annotation failed"
CF       # assert             # assert (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 135.34-135.59)")) [failure message on stack]
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 43 35 # aldc 17205         # s[17205] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 136.15-136.32)"
B8 00 35 # invokestatic 53    # file_eof__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 136.15-136.32)")
14 43 70 # aldc 17264         # s[17264] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 136.8-136.33: @assert annotation failed"
CF       # assert             # assert file_eof__1(r->file, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 136.15-136.32)") [failure message on stack]
14 43 B9 # aldc 17337         # s[17337] = ""
36 02    # vstore 2           # _result = "";
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <807:cond_true>
A7 00 08 # goto +8            # goto <808:cond_false>
# <807:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <809:cond_end>
# <808:cond_false>
15 00    # vload 0            # r
14 43 BA # aldc 17338         # s[17338] = "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"
B8 00 49 # invokestatic 73    # at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"))
# <809:cond_end>
14 43 F5 # aldc 17397         # s[17397] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.4-108.38: @ensures annotation failed"
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.n2ZIl2coE0/readfile.c0: 108.26-108.37)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
# <800:endif>


#<list_length>
02                # number of arguments = 2
04                # number of local variables = 4
00 2E             # code length = 46 bytes
10 00    # bipush 0           # 0
36 03    # vstore 3           # count = 0;
# <810:loop>
A7 00 03 # goto +3            # goto <811:body>
# <811:body>
15 00    # vload 0            # l
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (l != NULL) goto <813:then>
A7 00 14 # goto +20           # goto <814:else>
# <813:then>
15 03    # vload 3            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 03    # vstore 3           # count += 1;
15 00    # vload 0            # l
62 08    # aaddf 8            # &l->tail
2F       # amload             # l->tail
36 00    # vstore 0           # l = l->tail;
A7 00 06 # goto +6            # goto <815:endif>
# <814:else>
A7 00 06 # goto +6            # break
# <815:endif>
A7 FF E0 # goto -32           # goto <810:loop>
# <812:exit>
15 03    # vload 3            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 


#<list_empty>
01                # number of arguments = 1
02                # number of local variables = 2
00 06             # code length = 6 bytes
01       # aconst_null        # NULL
36 01    # vstore 1           # _result = NULL;
15 01    # vload 1            # _result
B0       # return             # 


#<list_cons>
03                # number of arguments = 3
05                # number of local variables = 5
00 19             # code length = 25 bytes
BB 10    # new 16             # alloc(struct list_cell)
36 04    # vstore 4           # res = alloc(struct list_cell);
15 04    # vload 4            # res
62 00    # aaddf 0            # &res->head
15 00    # vload 0            # s
4F       # amstore            # res->head = s;
15 04    # vload 4            # res
62 08    # aaddf 8            # &res->tail
15 01    # vload 1            # l
4F       # amstore            # res->tail = l;
15 04    # vload 4            # res
36 03    # vstore 3           # _result = res;
15 03    # vload 3            # _result
B0       # return             # 


#<rev_list_to_array>
02                # number of arguments = 2
07                # number of local variables = 7
00 81             # code length = 129 bytes
15 00    # vload 0            # l
14 44 3F # aldc 17471         # s[17471] = "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 176.13-176.27)"
B8 00 4C # invokestatic 76    # list_length(l, "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 176.13-176.27)")
36 03    # vstore 3           # len = list_length(l, "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 176.13-176.27)");
15 03    # vload 3            # len
BC 08    # newarray 8         # alloc_array(string, len)
36 04    # vstore 4           # res = alloc_array(string, len);
15 00    # vload 0            # l
36 06    # vstore 6           # ll = l;
15 03    # vload 3            # len
10 01    # bipush 1           # 1
64       # isub               # (len - 1)
36 05    # vstore 5           # i = (len - 1);
# <816:loop>
A7 00 03 # goto +3            # goto <817:body>
# <817:body>
15 05    # vload 5            # i
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (i >= 0) goto <819:then>
A7 00 33 # goto +51           # goto <820:else>
# <819:then>
15 06    # vload 6            # ll
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ll != NULL) goto <822:cond_true>
A7 00 08 # goto +8            # goto <823:cond_false>
# <822:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <824:cond_end>
# <823:cond_false>
10 00    # bipush 0           # false
# <824:cond_end>
14 44 82 # aldc 17538         # s[17538] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 181.8-181.26: @assert annotation failed"
CF       # assert             # assert (ll != NULL) [failure message on stack]
15 04    # vload 4            # res
15 05    # vload 5            # i
63       # aadds              # &res[i]
15 06    # vload 6            # ll
62 00    # aaddf 0            # &ll->head
2F       # amload             # ll->head
4F       # amstore            # res[i] = ll->head;
15 06    # vload 6            # ll
62 08    # aaddf 8            # &ll->tail
2F       # amload             # ll->tail
36 06    # vstore 6           # ll = ll->tail;
15 05    # vload 5            # i
10 01    # bipush 1           # 1
64       # isub               # 
36 05    # vstore 5           # i -= 1;
A7 00 06 # goto +6            # goto <821:endif>
# <820:else>
A7 00 06 # goto +6            # break
# <821:endif>
A7 FF C0 # goto -64           # goto <816:loop>
# <818:exit>
15 04    # vload 4            # res
36 02    # vstore 2           # _result = res;
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # l
14 44 CB # aldc 17611         # s[17611] = "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.32-174.46)"
B8 00 4C # invokestatic 76    # list_length(l, "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.32-174.46)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == list_length(l, "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.32-174.46)")) goto <825:cond_true>
A7 00 08 # goto +8            # goto <826:cond_false>
# <825:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <827:cond_end>
# <826:cond_false>
10 00    # bipush 0           # false
# <827:cond_end>
14 45 0E # aldc 17678         # s[17678] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.4-174.47: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == list_length(l, "rev_list_to_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 174.32-174.46)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<is_array_expected_length>
03                # number of arguments = 3
04                # number of local variables = 4
00 1D             # code length = 29 bytes
15 00    # vload 0            # array
BE       # arraylength        # \length(array)
15 01    # vload 1            # length
9F 00 06 # if_cmpeq +6        # if (\length(array) == length) goto <828:cond_true>
A7 00 08 # goto +8            # goto <829:cond_false>
# <828:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <830:cond_end>
# <829:cond_false>
10 00    # bipush 0           # false
# <830:cond_end>
14 45 58 # aldc 17752         # s[17752] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 197.6-197.38: @assert annotation failed"
CF       # assert             # assert (\length(array) == length) [failure message on stack]
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 


#<is_string_bundle>
02                # number of arguments = 2
03                # number of local variables = 3
00 28             # code length = 40 bytes
15 00    # vload 0            # wl
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (wl == NULL) goto <831:then>
A7 00 0D # goto +13           # goto <832:else>
# <831:then>
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <833:endif>
# <832:else>
# <833:endif>
15 00    # vload 0            # wl
62 00    # aaddf 0            # &wl->array
2F       # amload             # wl->array
15 00    # vload 0            # wl
62 08    # aaddf 8            # &wl->length
2E       # imload             # wl->length
14 45 A1 # aldc 17825         # s[17825] = "is_string_bundle (/tmp/tmp.n2ZIl2coE0/readfile.c0: 203.10-203.57)"
B8 00 50 # invokestatic 80    # is_array_expected_length(wl->array, wl->length, "is_string_bundle (/tmp/tmp.n2ZIl2coE0/readfile.c0: 203.10-203.57)")
36 02    # vstore 2           # _result = is_array_expected_length(wl->array, wl->length, "is_string_bundle (/tmp/tmp.n2ZIl2coE0/readfile.c0: 203.10-203.57)");
15 02    # vload 2            # _result
B0       # return             # 


#<string_bundle_array>
02                # number of arguments = 2
03                # number of local variables = 3
00 31             # code length = 49 bytes
15 00    # vload 0            # wl
14 45 E3 # aldc 17891         # s[17891] = "string_bundle_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.13-207.33)"
B8 00 51 # invokestatic 81    # is_string_bundle(wl, "string_bundle_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.13-207.33)")
14 46 28 # aldc 17960         # s[17960] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.4-207.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 46 74 # aldc 18036         # s[18036] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.4-207.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_string_bundle(wl, "string_bundle_array (/tmp/tmp.n2ZIl2coE0/readfile.c0: 207.13-207.33)") [failure message on stack]
15 00    # vload 0            # wl
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (wl == NULL) goto <834:cond_true>
A7 00 0A # goto +10           # goto <835:cond_false>
# <834:cond_true>
10 00    # bipush 0           # 0
BC 08    # newarray 8         # alloc_array(string, 0)
A7 00 08 # goto +8            # goto <836:cond_end>
# <835:cond_false>
15 00    # vload 0            # wl
62 00    # aaddf 0            # &wl->array
2F       # amload             # wl->array
# <836:cond_end>
36 02    # vstore 2           # _result = ((wl == NULL) ? alloc_array(string, 0) : wl->array);
15 02    # vload 2            # _result
B0       # return             # 


#<string_bundle_length>
02                # number of arguments = 2
03                # number of local variables = 3
00 2F             # code length = 47 bytes
15 00    # vload 0            # wl
14 46 86 # aldc 18054         # s[18054] = "string_bundle_length (/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.13-213.33)"
B8 00 51 # invokestatic 81    # is_string_bundle(wl, "string_bundle_length (/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.13-213.33)")
14 46 CC # aldc 18124         # s[18124] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.4-213.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 47 18 # aldc 18200         # s[18200] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.4-213.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_string_bundle(wl, "string_bundle_length (/tmp/tmp.n2ZIl2coE0/readfile.c0: 213.13-213.33)") [failure message on stack]
15 00    # vload 0            # wl
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (wl == NULL) goto <837:cond_true>
A7 00 08 # goto +8            # goto <838:cond_false>
# <837:cond_true>
10 00    # bipush 0           # 0
A7 00 08 # goto +8            # goto <839:cond_end>
# <838:cond_false>
15 00    # vload 0            # wl
62 08    # aaddf 8            # &wl->length
2E       # imload             # wl->length
# <839:cond_end>
36 02    # vstore 2           # _result = ((wl == NULL) ? 0 : wl->length);
15 02    # vload 2            # _result
B0       # return             # 


#<read_words>
02                # number of arguments = 2
08                # number of local variables = 8
00 B8             # code length = 184 bytes
15 00    # vload 0            # filename
14 47 2A # aldc 18218         # s[18218] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 222.17-222.37)"
B8 00 4A # invokestatic 74    # get_reader(filename, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 222.17-222.37)")
36 03    # vstore 3           # r = get_reader(filename, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 222.17-222.37)");
15 03    # vload 3            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <840:then>
A7 00 1B # goto +27           # goto <841:else>
# <840:then>
14 47 66 # aldc 18278         # s[18278] = "Cannot open file \'"
15 00    # vload 0            # filename
14 47 79 # aldc 18297         # s[18297] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.23-224.66)"
B8 00 03 # invokestatic 3     # string_join__1("Cannot open file \'", filename, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.23-224.66)")
14 47 B5 # aldc 18357         # s[18357] = "\'"
14 47 B7 # aldc 18359         # s[18359] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.11-224.72)"
B8 00 03 # invokestatic 3     # string_join__1(string_join__1("Cannot open file \'", filename, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.23-224.66)"), "\'", "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.11-224.72)")
BF       # athrow             # error string_join__1(string_join__1("Cannot open file \'", filename, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.23-224.66)"), "\'", "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 224.11-224.72)")
A7 00 03 # goto +3            # goto <842:endif>
# <841:else>
# <842:endif>
01       # aconst_null        # NULL
36 04    # vstore 4           # l = NULL;
15 03    # vload 3            # r
14 47 F3 # aldc 18419         # s[18419] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 228.14-228.26)"
B8 00 4B # invokestatic 75    # read_word(r, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 228.14-228.26)")
36 05    # vstore 5           # w = read_word(r, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 228.14-228.26)");
BB 10    # new 16             # alloc(string_bundle)
36 06    # vstore 6           # res = alloc(string_bundle);
10 00    # bipush 0           # 0
36 07    # vstore 7           # count = 0;
# <843:loop>
A7 00 03 # goto +3            # goto <844:body>
# <844:body>
15 05    # vload 5            # w
14 48 2F # aldc 18479         # s[18479] = ""
14 48 30 # aldc 18480         # s[18480] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 233.11-233.30)"
B8 00 05 # invokestatic 5     # string_equal__1(w, "", "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 233.11-233.30)")
10 01    # bipush 1           # true
9F 00 3B # if_cmpeq +59       # if (string_equal__1(w, "", "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 233.11-233.30)") == true) goto <847:else>
A7 00 03 # goto +3            # goto <846:then>
# <846:then>
15 05    # vload 5            # w
15 04    # vload 4            # l
14 48 6C # aldc 18540         # s[18540] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 234.9-234.24)"
B8 00 4E # invokestatic 78    # list_cons(w, l, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 234.9-234.24)")
36 04    # vstore 4           # l = list_cons(w, l, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 234.9-234.24)");
15 03    # vload 3            # r
14 48 A7 # aldc 18599         # s[18599] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 235.9-235.21)"
B8 00 4B # invokestatic 75    # read_word(r, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 235.9-235.21)")
36 05    # vstore 5           # w = read_word(r, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 235.9-235.21)");
15 07    # vload 7            # count
14 48 E2 # aldc 18658         # s[18658] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 237.18-237.27)"
B8 00 3A # invokestatic 58    # int_max__1("read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 237.18-237.27)")
9F 00 06 # if_cmpeq +6        # if (count == int_max__1("read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 237.18-237.27)")) goto <849:then>
A7 00 0A # goto +10           # goto <850:else>
# <849:then>
14 49 1E # aldc 18718         # s[18718] = "Too many words in input file"
BF       # athrow             # error "Too many words in input file"
A7 00 03 # goto +3            # goto <851:endif>
# <850:else>
# <851:endif>
15 07    # vload 7            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # count += 1;
A7 00 06 # goto +6            # goto <848:endif>
# <847:else>
A7 00 06 # goto +6            # break
# <848:endif>
A7 FF B2 # goto -78           # goto <843:loop>
# <845:exit>
15 06    # vload 6            # res
62 00    # aaddf 0            # &res->array
15 04    # vload 4            # l
14 49 3B # aldc 18747         # s[18747] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 246.16-246.36)"
B8 00 4F # invokestatic 79    # rev_list_to_array(l, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 246.16-246.36)")
4F       # amstore            # res->array = rev_list_to_array(l, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 246.16-246.36)");
15 06    # vload 6            # res
62 08    # aaddf 8            # &res->length
15 07    # vload 7            # count
4E       # imstore            # res->length = count;
15 06    # vload 6            # res
36 02    # vstore 2           # _result = res;
15 02    # vload 2            # _result
14 49 77 # aldc 18807         # s[18807] = "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 220.12-220.37)"
B8 00 51 # invokestatic 81    # is_string_bundle(_result, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 220.12-220.37)")
14 49 B3 # aldc 18867         # s[18867] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 220.4-220.38: @ensures annotation failed"
CF       # assert             # assert is_string_bundle(_result, "read_words (/tmp/tmp.n2ZIl2coE0/readfile.c0: 220.12-220.37)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_bundle_array__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # wl
14 49 FD # aldc 18941         # s[18941] = "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 268.1-269.63)"
B8 00 52 # invokestatic 82    # string_bundle_array(wl, "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 268.1-269.63)")
36 02    # vstore 2           # _result = string_bundle_array(wl, "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 268.1-269.63)");
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # wl
14 4A 44 # aldc 19012         # s[19012] = "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.32-269.56)"
B8 00 53 # invokestatic 83    # string_bundle_length(wl, "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.32-269.56)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == string_bundle_length(wl, "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.32-269.56)")) goto <852:cond_true>
A7 00 08 # goto +8            # goto <853:cond_false>
# <852:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <854:cond_end>
# <853:cond_false>
10 00    # bipush 0           # false
# <854:cond_end>
14 4A 8C # aldc 19084         # s[19084] = "/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.4-269.57: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == string_bundle_length(wl, "string_bundle_array__1 (/tmp/tmp.n2ZIl2coE0/readfile.c0: 269.32-269.56)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<args_flag__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <855:cond_true>
A7 00 08 # goto +8            # goto <856:cond_false>
# <855:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <857:cond_end>
# <856:cond_false>
10 00    # bipush 0           # false
# <857:cond_end>
14 4A D6 # aldc 19158         # s[19158] = "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 4B 24 # aldc 19236         # s[19236] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 1C # invokenative 28    # args_flag(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_int__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <858:cond_true>
A7 00 08 # goto +8            # goto <859:cond_false>
# <858:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <860:cond_end>
# <859:cond_false>
10 00    # bipush 0           # false
# <860:cond_end>
14 4B 36 # aldc 19254         # s[19254] = "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 4B 86 # aldc 19334         # s[19334] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 1D # invokenative 29    # args_int(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_string__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <861:cond_true>
A7 00 08 # goto +8            # goto <862:cond_false>
# <861:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <863:cond_end>
# <862:cond_false>
10 00    # bipush 0           # false
# <863:cond_end>
14 4B 98 # aldc 19352         # s[19352] = "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 4B E8 # aldc 19432         # s[19432] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 1E # invokenative 30    # args_string(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_parse__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 32             # code length = 50 bytes
B7 00 1F # invokenative 31    # args_parse()
36 01    # vstore 1           # _result = args_parse();
15 01    # vload 1            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <864:cond_true>
A7 00 08 # goto +8            # goto <865:cond_false>
# <864:cond_true>
10 01    # bipush 1           # true
A7 00 1B # goto +27           # goto <866:cond_end>
# <865:cond_false>
15 01    # vload 1            # _result
62 00    # aaddf 0            # &_result->argc
2E       # imload             # _result->argc
15 01    # vload 1            # _result
62 08    # aaddf 8            # &_result->argv
2F       # amload             # _result->argv
BE       # arraylength        # \length(_result->argv)
9F 00 06 # if_cmpeq +6        # if (_result->argc == \length(_result->argv)) goto <867:cond_true>
A7 00 08 # goto +8            # goto <868:cond_false>
# <867:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <869:cond_end>
# <868:cond_false>
10 00    # bipush 0           # false
# <869:cond_end>
# <866:cond_end>
14 4B FA # aldc 19450         # s[19450] = "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || (_result->argc == \length(_result->argv))) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<check_word>
04                # number of arguments = 4
09                # number of local variables = 9
01 32             # code length = 306 bytes
15 00    # vload 0            # dict
BE       # arraylength        # \length(dict)
15 01    # vload 1            # d
9F 00 06 # if_cmpeq +6        # if (\length(dict) == d) goto <870:cond_true>
A7 00 08 # goto +8            # goto <871:cond_false>
# <870:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <872:cond_end>
# <871:cond_false>
10 00    # bipush 0           # false
# <872:cond_end>
14 4C 48 # aldc 19528         # s[19528] = "speller.c0: 14.4-14.32: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 4C 7D # aldc 19581         # s[19581] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 14.4-14.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(dict) == d) [failure message on stack]
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 4C 8F # aldc 19599         # s[19599] = "check_word (speller.c0: 15.13-15.32)"
B8 00 26 # invokestatic 38    # is_sorted__1(dict, 0, d, "check_word (speller.c0: 15.13-15.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(dict, 0, d, "check_word (speller.c0: 15.13-15.32)") == true) goto <873:cond_true>
A7 00 12 # goto +18           # goto <874:cond_false>
# <873:cond_true>
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 4C B4 # aldc 19636         # s[19636] = "check_word (speller.c0: 15.36-15.54)"
B8 00 27 # invokestatic 39    # no_dupes__1(dict, 0, d, "check_word (speller.c0: 15.36-15.54)")
A7 00 05 # goto +5            # goto <875:cond_end>
# <874:cond_false>
10 00    # bipush 0           # false
# <875:cond_end>
14 4C D9 # aldc 19673         # s[19673] = "speller.c0: 15.4-15.55: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 4D 0E # aldc 19726         # s[19726] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 15.4-15.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(dict, 0, d, "check_word (speller.c0: 15.13-15.32)") && no_dupes__1(dict, 0, d, "check_word (speller.c0: 15.36-15.54)")) [failure message on stack]
10 00    # bipush 0           # 0
36 05    # vstore 5           # lo = 0;
15 01    # vload 1            # d
36 06    # vstore 6           # hi = d;
# <876:loop>
A7 00 03 # goto +3            # goto <877:body>
# <877:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <882:and>
A7 00 21 # goto +33           # goto <880:cond_false>
# <882:and>
15 05    # vload 5            # lo
15 06    # vload 6            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <879:cond_true>
A7 00 17 # goto +23           # goto <880:cond_false>
# <879:cond_true>
15 06    # vload 6            # hi
15 01    # vload 1            # d
A4 00 06 # if_icmple +6       # if (hi <= d) goto <883:cond_true>
A7 00 08 # goto +8            # goto <884:cond_false>
# <883:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <885:cond_end>
# <884:cond_false>
10 00    # bipush 0           # false
# <885:cond_end>
A7 00 05 # goto +5            # goto <881:cond_end>
# <880:cond_false>
10 00    # bipush 0           # false
# <881:cond_end>
14 4D 20 # aldc 19744         # s[19744] = "speller.c0: 20.6-20.52: @loop_invariant annotation failed"
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= d)) [failure message on stack]
15 05    # vload 5            # lo
15 06    # vload 6            # hi
A1 00 06 # if_icmplt +6       # if (lo < hi) goto <886:then>
A7 00 7B # goto +123          # goto <887:else>
# <886:then>
15 05    # vload 5            # lo
15 06    # vload 6            # hi
15 05    # vload 5            # lo
64       # isub               # (hi - lo)
10 02    # bipush 2           # 2
6C       # idiv               # ((hi - lo) / 2)
60       # iadd               # (lo + ((hi - lo) / 2))
36 07    # vstore 7           # mid = (lo + ((hi - lo) / 2));
15 05    # vload 5            # lo
15 07    # vload 7            # mid
A4 00 06 # if_icmple +6       # if (lo <= mid) goto <889:cond_true>
A7 00 17 # goto +23           # goto <890:cond_false>
# <889:cond_true>
15 07    # vload 7            # mid
15 06    # vload 6            # hi
A1 00 06 # if_icmplt +6       # if (mid < hi) goto <892:cond_true>
A7 00 08 # goto +8            # goto <893:cond_false>
# <892:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <894:cond_end>
# <893:cond_false>
10 00    # bipush 0           # false
# <894:cond_end>
A7 00 05 # goto +5            # goto <891:cond_end>
# <890:cond_false>
10 00    # bipush 0           # false
# <891:cond_end>
14 4D 5A # aldc 19802         # s[19802] = "speller.c0: 23.8-23.37: @assert annotation failed"
CF       # assert             # assert ((lo <= mid) && (mid < hi)) [failure message on stack]
15 00    # vload 0            # dict
15 07    # vload 7            # mid
63       # aadds              # &dict[mid]
2F       # amload             # dict[mid]
36 08    # vstore 8           # midWord = dict[mid];
15 08    # vload 8            # midWord
15 02    # vload 2            # w
14 4D 8C # aldc 19852         # s[19852] = "check_word (speller.c0: 25.9-25.32)"
B8 00 05 # invokestatic 5     # string_equal__1(midWord, w, "check_word (speller.c0: 25.9-25.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(midWord, w, "check_word (speller.c0: 25.9-25.32)") == true) goto <895:then>
A7 00 0D # goto +13           # goto <896:else>
# <895:then>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <897:endif>
# <896:else>
# <897:endif>
15 08    # vload 8            # midWord
15 02    # vload 2            # w
14 4D B0 # aldc 19888         # s[19888] = "check_word (speller.c0: 26.9-26.35)"
B8 00 06 # invokestatic 6     # string_compare__1(midWord, w, "check_word (speller.c0: 26.9-26.35)")
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (string_compare__1(midWord, w, "check_word (speller.c0: 26.9-26.35)") == -(1)) goto <898:then>
A7 00 0D # goto +13           # goto <899:else>
# <898:then>
15 05    # vload 5            # lo
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # lo += 1;
A7 00 07 # goto +7            # goto <900:endif>
# <899:else>
15 07    # vload 7            # mid
36 06    # vstore 6           # hi = mid;
# <900:endif>
A7 00 06 # goto +6            # goto <888:endif>
# <887:else>
A7 00 06 # goto +6            # break
# <888:endif>
A7 FF 4A # goto -182          # goto <876:loop>
# <878:exit>
15 05    # vload 5            # lo
15 06    # vload 6            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <901:cond_true>
A7 00 08 # goto +8            # goto <902:cond_false>
# <901:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <903:cond_end>
# <902:cond_false>
10 00    # bipush 0           # false
# <903:cond_end>
14 4D D4 # aldc 19924         # s[19924] = "speller.c0: 32.6-32.22: @assert annotation failed"
CF       # assert             # assert (lo == hi) [failure message on stack]
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 


#<check_text_naive>
06                # number of arguments = 6
09                # number of local variables = 9
01 25             # code length = 293 bytes
15 00    # vload 0            # dict
BE       # arraylength        # \length(dict)
15 01    # vload 1            # d
9F 00 06 # if_cmpeq +6        # if (\length(dict) == d) goto <904:cond_true>
A7 00 08 # goto +8            # goto <905:cond_false>
# <904:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <906:cond_end>
# <905:cond_false>
10 00    # bipush 0           # false
# <906:cond_end>
14 4E 06 # aldc 19974         # s[19974] = "speller.c0: 37.4-37.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 4E 3B # aldc 20027         # s[20027] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 37.4-37.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(dict) == d) [failure message on stack]
15 02    # vload 2            # text
BE       # arraylength        # \length(text)
15 03    # vload 3            # t
9F 00 06 # if_cmpeq +6        # if (\length(text) == t) goto <907:cond_true>
A7 00 08 # goto +8            # goto <908:cond_false>
# <907:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <909:cond_end>
# <908:cond_false>
10 00    # bipush 0           # false
# <909:cond_end>
14 4E 4D # aldc 20045         # s[20045] = "speller.c0: 38.4-38.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 4E 82 # aldc 20098         # s[20098] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 38.4-38.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(text) == t) [failure message on stack]
15 04    # vload 4            # miss
BE       # arraylength        # \length(miss)
15 03    # vload 3            # t
A2 00 06 # if_icmpge +6       # if (\length(miss) >= t) goto <910:cond_true>
A7 00 08 # goto +8            # goto <911:cond_false>
# <910:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <912:cond_end>
# <911:cond_false>
10 00    # bipush 0           # false
# <912:cond_end>
14 4E 94 # aldc 20116         # s[20116] = "speller.c0: 39.4-39.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 4E C9 # aldc 20169         # s[20169] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 39.4-39.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(miss) >= t) [failure message on stack]
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 4E DB # aldc 20187         # s[20187] = "check_text_naive (speller.c0: 40.13-40.32)"
B8 00 26 # invokestatic 38    # is_sorted__1(dict, 0, d, "check_text_naive (speller.c0: 40.13-40.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(dict, 0, d, "check_text_naive (speller.c0: 40.13-40.32)") == true) goto <913:cond_true>
A7 00 12 # goto +18           # goto <914:cond_false>
# <913:cond_true>
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 4F 06 # aldc 20230         # s[20230] = "check_text_naive (speller.c0: 40.36-40.54)"
B8 00 27 # invokestatic 39    # no_dupes__1(dict, 0, d, "check_text_naive (speller.c0: 40.36-40.54)")
A7 00 05 # goto +5            # goto <915:cond_end>
# <914:cond_false>
10 00    # bipush 0           # false
# <915:cond_end>
14 4F 31 # aldc 20273         # s[20273] = "speller.c0: 40.4-40.55: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 4F 66 # aldc 20326         # s[20326] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 40.4-40.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(dict, 0, d, "check_text_naive (speller.c0: 40.13-40.32)") && no_dupes__1(dict, 0, d, "check_text_naive (speller.c0: 40.36-40.54)")) [failure message on stack]
10 00    # bipush 0           # 0
36 07    # vstore 7           # numMiss = 0;
10 00    # bipush 0           # 0
36 08    # vstore 8           # i = 0;
# <916:loop>
A7 00 03 # goto +3            # goto <917:body>
# <917:body>
15 08    # vload 8            # i
15 03    # vload 3            # t
A1 00 06 # if_icmplt +6       # if (i < t) goto <919:then>
A7 00 3B # goto +59           # goto <920:else>
# <919:then>
15 00    # vload 0            # dict
15 01    # vload 1            # d
15 02    # vload 2            # text
15 08    # vload 8            # i
63       # aadds              # &text[i]
2F       # amload             # text[i]
14 4F 78 # aldc 20344         # s[20344] = "check_text_naive (speller.c0: 46.10-46.38)"
B8 00 5A # invokestatic 90    # check_word(dict, d, text[i], "check_text_naive (speller.c0: 46.10-46.38)")
10 01    # bipush 1           # true
9F 00 1C # if_cmpeq +28       # if (check_word(dict, d, text[i], "check_text_naive (speller.c0: 46.10-46.38)") == true) goto <923:else>
A7 00 03 # goto +3            # goto <922:then>
# <922:then>
15 04    # vload 4            # miss
15 07    # vload 7            # numMiss
63       # aadds              # &miss[numMiss]
15 02    # vload 2            # text
15 08    # vload 8            # i
63       # aadds              # &text[i]
2F       # amload             # text[i]
4F       # amstore            # miss[numMiss] = text[i];
15 07    # vload 7            # numMiss
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # numMiss += 1;
A7 00 03 # goto +3            # goto <924:endif>
# <923:else>
# <924:endif>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <921:endif>
# <920:else>
A7 00 06 # goto +6            # break
# <921:endif>
A7 FF B8 # goto -72           # goto <916:loop>
# <918:exit>
15 07    # vload 7            # numMiss
36 06    # vstore 6           # _result = numMiss;
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <925:cond_true>
A7 00 17 # goto +23           # goto <926:cond_false>
# <925:cond_true>
15 06    # vload 6            # _result
15 03    # vload 3            # t
A4 00 06 # if_icmple +6       # if (_result <= t) goto <928:cond_true>
A7 00 08 # goto +8            # goto <929:cond_false>
# <928:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <930:cond_end>
# <929:cond_false>
10 00    # bipush 0           # false
# <930:cond_end>
A7 00 05 # goto +5            # goto <927:cond_end>
# <926:cond_false>
10 00    # bipush 0           # false
# <927:cond_end>
14 4F A3 # aldc 20387         # s[20387] = "speller.c0: 41.4-41.41: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= t)) [failure message on stack]
15 04    # vload 4            # miss
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
14 4F D6 # aldc 20438         # s[20438] = "check_text_naive (speller.c0: 42.12-42.38)"
B8 00 27 # invokestatic 39    # no_dupes__1(miss, 0, _result, "check_text_naive (speller.c0: 42.12-42.38)")
14 50 01 # aldc 20481         # s[20481] = "speller.c0: 42.4-42.39: @ensures annotation failed"
CF       # assert             # assert no_dupes__1(miss, 0, _result, "check_text_naive (speller.c0: 42.12-42.38)") [failure message on stack]
15 06    # vload 6            # _result
B0       # return             # 


#<check_sorted_text>
06                # number of arguments = 6
0D                # number of local variables = 13
02 76             # code length = 630 bytes
15 00    # vload 0            # dict
BE       # arraylength        # \length(dict)
15 01    # vload 1            # d
9F 00 06 # if_cmpeq +6        # if (\length(dict) == d) goto <931:cond_true>
A7 00 08 # goto +8            # goto <932:cond_false>
# <931:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <933:cond_end>
# <932:cond_false>
10 00    # bipush 0           # false
# <933:cond_end>
14 50 34 # aldc 20532         # s[20532] = "speller.c0: 55.4-55.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 50 69 # aldc 20585         # s[20585] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 55.4-55.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(dict) == d) [failure message on stack]
15 02    # vload 2            # text
BE       # arraylength        # \length(text)
15 03    # vload 3            # t
A2 00 06 # if_icmpge +6       # if (\length(text) >= t) goto <934:cond_true>
A7 00 08 # goto +8            # goto <935:cond_false>
# <934:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <936:cond_end>
# <935:cond_false>
10 00    # bipush 0           # false
# <936:cond_end>
14 50 7B # aldc 20603         # s[20603] = "speller.c0: 56.4-56.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 50 B0 # aldc 20656         # s[20656] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 56.4-56.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(text) >= t) [failure message on stack]
15 04    # vload 4            # miss
BE       # arraylength        # \length(miss)
15 03    # vload 3            # t
A2 00 06 # if_icmpge +6       # if (\length(miss) >= t) goto <937:cond_true>
A7 00 17 # goto +23           # goto <938:cond_false>
# <937:cond_true>
15 03    # vload 3            # t
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (t >= 0) goto <940:cond_true>
A7 00 08 # goto +8            # goto <941:cond_false>
# <940:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <942:cond_end>
# <941:cond_false>
10 00    # bipush 0           # false
# <942:cond_end>
A7 00 05 # goto +5            # goto <939:cond_end>
# <938:cond_false>
10 00    # bipush 0           # false
# <939:cond_end>
14 50 C2 # aldc 20674         # s[20674] = "speller.c0: 57.4-57.42: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 50 F7 # aldc 20727         # s[20727] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 57.4-57.42: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((\length(miss) >= t) && (t >= 0)) [failure message on stack]
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 51 09 # aldc 20745         # s[20745] = "check_sorted_text (speller.c0: 58.13-58.34)"
B8 00 26 # invokestatic 38    # is_sorted__1(dict, 0, d, "check_sorted_text (speller.c0: 58.13-58.34)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(dict, 0, d, "check_sorted_text (speller.c0: 58.13-58.34)") == true) goto <943:cond_true>
A7 00 12 # goto +18           # goto <944:cond_false>
# <943:cond_true>
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 51 35 # aldc 20789         # s[20789] = "check_sorted_text (speller.c0: 58.38-58.58)"
B8 00 27 # invokestatic 39    # no_dupes__1(dict, 0, d, "check_sorted_text (speller.c0: 58.38-58.58)")
A7 00 05 # goto +5            # goto <945:cond_end>
# <944:cond_false>
10 00    # bipush 0           # false
# <945:cond_end>
14 51 61 # aldc 20833         # s[20833] = "speller.c0: 58.4-58.59: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 51 96 # aldc 20886         # s[20886] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 58.4-58.59: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(dict, 0, d, "check_sorted_text (speller.c0: 58.13-58.34)") && no_dupes__1(dict, 0, d, "check_sorted_text (speller.c0: 58.38-58.58)")) [failure message on stack]
15 02    # vload 2            # text
10 00    # bipush 0           # 0
15 03    # vload 3            # t
14 51 A8 # aldc 20904         # s[20904] = "check_sorted_text (speller.c0: 59.13-59.34)"
B8 00 26 # invokestatic 38    # is_sorted__1(text, 0, t, "check_sorted_text (speller.c0: 59.13-59.34)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(text, 0, t, "check_sorted_text (speller.c0: 59.13-59.34)") == true) goto <946:cond_true>
A7 00 12 # goto +18           # goto <947:cond_false>
# <946:cond_true>
15 02    # vload 2            # text
10 00    # bipush 0           # 0
15 03    # vload 3            # t
14 51 D4 # aldc 20948         # s[20948] = "check_sorted_text (speller.c0: 59.38-59.58)"
B8 00 27 # invokestatic 39    # no_dupes__1(text, 0, t, "check_sorted_text (speller.c0: 59.38-59.58)")
A7 00 05 # goto +5            # goto <948:cond_end>
# <947:cond_false>
10 00    # bipush 0           # false
# <948:cond_end>
14 52 00 # aldc 20992         # s[20992] = "speller.c0: 59.4-59.59: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 52 35 # aldc 21045         # s[21045] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 59.4-59.59: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(text, 0, t, "check_sorted_text (speller.c0: 59.13-59.34)") && no_dupes__1(text, 0, t, "check_sorted_text (speller.c0: 59.38-59.58)")) [failure message on stack]
10 00    # bipush 0           # 0
36 07    # vstore 7           # dNum = 0;
10 00    # bipush 0           # 0
36 08    # vstore 8           # tNum = 0;
10 00    # bipush 0           # 0
36 09    # vstore 9           # falseNum = 0;
# <949:loop>
A7 00 03 # goto +3            # goto <950:body>
# <950:body>
15 07    # vload 7            # dNum
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (dNum >= 0) goto <952:cond_true>
A7 00 17 # goto +23           # goto <953:cond_false>
# <952:cond_true>
15 07    # vload 7            # dNum
15 01    # vload 1            # d
A4 00 06 # if_icmple +6       # if (dNum <= d) goto <955:cond_true>
A7 00 08 # goto +8            # goto <956:cond_false>
# <955:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <957:cond_end>
# <956:cond_false>
10 00    # bipush 0           # false
# <957:cond_end>
A7 00 05 # goto +5            # goto <954:cond_end>
# <953:cond_false>
10 00    # bipush 0           # false
# <954:cond_end>
14 52 47 # aldc 21063         # s[21063] = "speller.c0: 71.6-71.44: @loop_invariant annotation failed"
CF       # assert             # assert ((dNum >= 0) && (dNum <= d)) [failure message on stack]
15 08    # vload 8            # tNum
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (tNum >= 0) goto <958:cond_true>
A7 00 17 # goto +23           # goto <959:cond_false>
# <958:cond_true>
15 08    # vload 8            # tNum
15 03    # vload 3            # t
A4 00 06 # if_icmple +6       # if (tNum <= t) goto <961:cond_true>
A7 00 08 # goto +8            # goto <962:cond_false>
# <961:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <963:cond_end>
# <962:cond_false>
10 00    # bipush 0           # false
# <963:cond_end>
A7 00 05 # goto +5            # goto <960:cond_end>
# <959:cond_false>
10 00    # bipush 0           # false
# <960:cond_end>
14 52 81 # aldc 21121         # s[21121] = "speller.c0: 72.6-72.44: @loop_invariant annotation failed"
CF       # assert             # assert ((tNum >= 0) && (tNum <= t)) [failure message on stack]
15 07    # vload 7            # dNum
15 01    # vload 1            # d
A1 00 06 # if_icmplt +6       # if (dNum < d) goto <967:and>
A7 00 8E # goto +142          # goto <965:else>
# <967:and>
15 08    # vload 8            # tNum
15 03    # vload 3            # t
A1 00 06 # if_icmplt +6       # if (tNum < t) goto <964:then>
A7 00 84 # goto +132          # goto <965:else>
# <964:then>
15 00    # vload 0            # dict
15 07    # vload 7            # dNum
63       # aadds              # &dict[dNum]
2F       # amload             # dict[dNum]
36 0A    # vstore 10          # dWord = dict[dNum];
15 02    # vload 2            # text
15 08    # vload 8            # tNum
63       # aadds              # &text[tNum]
2F       # amload             # text[tNum]
36 0B    # vstore 11          # tWord = text[tNum];
15 0A    # vload 10           # dWord
15 0B    # vload 11           # tWord
14 52 BB # aldc 21179         # s[21179] = "check_sorted_text (speller.c0: 76.9-76.37)"
B8 00 06 # invokestatic 6     # string_compare__1(dWord, tWord, "check_sorted_text (speller.c0: 76.9-76.37)")
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (string_compare__1(dWord, tWord, "check_sorted_text (speller.c0: 76.9-76.37)") == -(1)) goto <968:then>
A7 00 0D # goto +13           # goto <969:else>
# <968:then>
15 07    # vload 7            # dNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # dNum += 1;
A7 00 55 # goto +85           # goto <970:endif>
# <969:else>
15 0A    # vload 10           # dWord
15 0B    # vload 11           # tWord
14 52 E6 # aldc 21222         # s[21222] = "check_sorted_text (speller.c0: 78.16-78.44)"
B8 00 06 # invokestatic 6     # string_compare__1(dWord, tWord, "check_sorted_text (speller.c0: 78.16-78.44)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_compare__1(dWord, tWord, "check_sorted_text (speller.c0: 78.16-78.44)") == 1) goto <971:then>
A7 00 20 # goto +32           # goto <972:else>
# <971:then>
15 04    # vload 4            # miss
15 09    # vload 9            # falseNum
63       # aadds              # &miss[falseNum]
15 02    # vload 2            # text
15 08    # vload 8            # tNum
63       # aadds              # &text[tNum]
2F       # amload             # text[tNum]
4F       # amstore            # miss[falseNum] = text[tNum];
15 09    # vload 9            # falseNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # falseNum += 1;
15 08    # vload 8            # tNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # tNum += 1;
A7 00 26 # goto +38           # goto <973:endif>
# <972:else>
15 0A    # vload 10           # dWord
15 0B    # vload 11           # tWord
14 53 12 # aldc 21266         # s[21266] = "check_sorted_text (speller.c0: 82.16-82.41)"
B8 00 05 # invokestatic 5     # string_equal__1(dWord, tWord, "check_sorted_text (speller.c0: 82.16-82.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(dWord, tWord, "check_sorted_text (speller.c0: 82.16-82.41)") == true) goto <974:then>
A7 00 14 # goto +20           # goto <975:else>
# <974:then>
15 07    # vload 7            # dNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # dNum += 1;
15 08    # vload 8            # tNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # tNum += 1;
A7 00 03 # goto +3            # goto <976:endif>
# <975:else>
# <976:endif>
# <973:endif>
# <970:endif>
A7 00 06 # goto +6            # goto <966:endif>
# <965:else>
A7 00 06 # goto +6            # break
# <966:endif>
A7 FF 1D # goto -227          # goto <949:loop>
# <951:exit>
15 08    # vload 8            # tNum
15 03    # vload 3            # t
A1 00 06 # if_icmplt +6       # if (tNum < t) goto <977:then>
A7 00 4F # goto +79           # goto <978:else>
# <977:then>
15 09    # vload 9            # falseNum
36 0A    # vstore 10          # temp = falseNum;
15 08    # vload 8            # tNum
36 0B    # vstore 11          # temp2 = tNum;
10 00    # bipush 0           # 0
36 0C    # vstore 12          # i = 0;
# <980:loop>
A7 00 03 # goto +3            # goto <981:body>
# <981:body>
15 0C    # vload 12           # i
15 03    # vload 3            # t
15 0B    # vload 11           # temp2
64       # isub               # (t - temp2)
A1 00 06 # if_icmplt +6       # if (i < (t - temp2)) goto <983:then>
A7 00 2A # goto +42           # goto <984:else>
# <983:then>
15 04    # vload 4            # miss
15 0A    # vload 10           # temp
15 0C    # vload 12           # i
60       # iadd               # (temp + i)
63       # aadds              # &miss[(temp + i)]
15 02    # vload 2            # text
15 08    # vload 8            # tNum
63       # aadds              # &text[tNum]
2F       # amload             # text[tNum]
4F       # amstore            # miss[(temp + i)] = text[tNum];
15 08    # vload 8            # tNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # tNum += 1;
15 09    # vload 9            # falseNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # falseNum += 1;
15 0C    # vload 12           # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 0C    # vstore 12          # i += 1;
A7 00 06 # goto +6            # goto <985:endif>
# <984:else>
A7 00 06 # goto +6            # break
# <985:endif>
A7 FF C6 # goto -58           # goto <980:loop>
# <982:exit>
A7 00 03 # goto +3            # goto <979:endif>
# <978:else>
# <979:endif>
15 09    # vload 9            # falseNum
36 06    # vstore 6           # _result = falseNum;
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <986:cond_true>
A7 00 17 # goto +23           # goto <987:cond_false>
# <986:cond_true>
15 06    # vload 6            # _result
15 03    # vload 3            # t
A4 00 06 # if_icmple +6       # if (_result <= t) goto <989:cond_true>
A7 00 08 # goto +8            # goto <990:cond_false>
# <989:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <991:cond_end>
# <990:cond_false>
10 00    # bipush 0           # false
# <991:cond_end>
A7 00 05 # goto +5            # goto <988:cond_end>
# <987:cond_false>
10 00    # bipush 0           # false
# <988:cond_end>
14 53 3E # aldc 21310         # s[21310] = "speller.c0: 60.4-60.41: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= t)) [failure message on stack]
15 04    # vload 4            # miss
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
14 53 71 # aldc 21361         # s[21361] = "check_sorted_text (speller.c0: 61.12-61.39)"
B8 00 26 # invokestatic 38    # is_sorted__1(miss, 0, _result, "check_sorted_text (speller.c0: 61.12-61.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(miss, 0, _result, "check_sorted_text (speller.c0: 61.12-61.39)") == true) goto <992:cond_true>
A7 00 12 # goto +18           # goto <993:cond_false>
# <992:cond_true>
15 04    # vload 4            # miss
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
14 53 9D # aldc 21405         # s[21405] = "check_sorted_text (speller.c0: 61.43-61.69)"
B8 00 27 # invokestatic 39    # no_dupes__1(miss, 0, _result, "check_sorted_text (speller.c0: 61.43-61.69)")
A7 00 05 # goto +5            # goto <994:cond_end>
# <993:cond_false>
10 00    # bipush 0           # false
# <994:cond_end>
14 53 C9 # aldc 21449         # s[21449] = "speller.c0: 61.4-61.70: @ensures annotation failed"
CF       # assert             # assert (is_sorted__1(miss, 0, _result, "check_sorted_text (speller.c0: 61.12-61.39)") && no_dupes__1(miss, 0, _result, "check_sorted_text (speller.c0: 61.43-61.69)")) [failure message on stack]
15 06    # vload 6            # _result
B0       # return             # 


#<merge>
06                # number of arguments = 6
0D                # number of local variables = 13
03 18             # code length = 792 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <1000:and>
A7 00 36 # goto +54           # goto <996:cond_false>
# <1000:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (lo1 < hi1) goto <999:and>
A7 00 2C # goto +44           # goto <996:cond_false>
# <999:and>
15 02    # vload 2            # hi1
15 03    # vload 3            # lo2
A4 00 06 # if_icmple +6       # if (hi1 <= lo2) goto <998:and>
A7 00 22 # goto +34           # goto <996:cond_false>
# <998:and>
15 03    # vload 3            # lo2
15 04    # vload 4            # hi2
A1 00 06 # if_icmplt +6       # if (lo2 < hi2) goto <995:cond_true>
A7 00 18 # goto +24           # goto <996:cond_false>
# <995:cond_true>
15 04    # vload 4            # hi2
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(A)) goto <1001:cond_true>
A7 00 08 # goto +8            # goto <1002:cond_false>
# <1001:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1003:cond_end>
# <1002:cond_false>
10 00    # bipush 0           # false
# <1003:cond_end>
A7 00 05 # goto +5            # goto <997:cond_end>
# <996:cond_false>
10 00    # bipush 0           # false
# <997:cond_end>
14 53 FC # aldc 21500         # s[21500] = "speller.c0: 104.4-104.73: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 54 33 # aldc 21555         # s[21555] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 104.4-104.73: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((((0 <= lo1) && (lo1 < hi1)) && (hi1 <= lo2)) && (lo2 < hi2)) && (hi2 <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
14 54 45 # aldc 21573         # s[21573] = "merge (speller.c0: 105.13-105.35)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, lo1, hi1, "merge (speller.c0: 105.13-105.35)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(A, lo1, hi1, "merge (speller.c0: 105.13-105.35)") == true) goto <1004:cond_true>
A7 00 12 # goto +18           # goto <1005:cond_false>
# <1004:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
14 54 67 # aldc 21607         # s[21607] = "merge (speller.c0: 105.39-105.60)"
B8 00 27 # invokestatic 39    # no_dupes__1(A, lo1, hi1, "merge (speller.c0: 105.39-105.60)")
A7 00 05 # goto +5            # goto <1006:cond_end>
# <1005:cond_false>
10 00    # bipush 0           # false
# <1006:cond_end>
14 54 89 # aldc 21641         # s[21641] = "speller.c0: 105.4-105.61: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 54 C0 # aldc 21696         # s[21696] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 105.4-105.61: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(A, lo1, hi1, "merge (speller.c0: 105.13-105.35)") && no_dupes__1(A, lo1, hi1, "merge (speller.c0: 105.39-105.60)")) [failure message on stack]
15 00    # vload 0            # A
15 03    # vload 3            # lo2
15 04    # vload 4            # hi2
14 54 D2 # aldc 21714         # s[21714] = "merge (speller.c0: 106.13-106.35)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, lo2, hi2, "merge (speller.c0: 106.13-106.35)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(A, lo2, hi2, "merge (speller.c0: 106.13-106.35)") == true) goto <1007:cond_true>
A7 00 12 # goto +18           # goto <1008:cond_false>
# <1007:cond_true>
15 00    # vload 0            # A
15 03    # vload 3            # lo2
15 04    # vload 4            # hi2
14 54 F4 # aldc 21748         # s[21748] = "merge (speller.c0: 106.39-106.60)"
B8 00 27 # invokestatic 39    # no_dupes__1(A, lo2, hi2, "merge (speller.c0: 106.39-106.60)")
A7 00 05 # goto +5            # goto <1009:cond_end>
# <1008:cond_false>
10 00    # bipush 0           # false
# <1009:cond_end>
14 55 16 # aldc 21782         # s[21782] = "speller.c0: 106.4-106.61: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 55 4D # aldc 21837         # s[21837] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 106.4-106.61: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(A, lo2, hi2, "merge (speller.c0: 106.13-106.35)") && no_dupes__1(A, lo2, hi2, "merge (speller.c0: 106.39-106.60)")) [failure message on stack]
10 00    # bipush 0           # 0
36 07    # vstore 7           # num1 = 0;
10 00    # bipush 0           # 0
36 08    # vstore 8           # num2 = 0;
10 00    # bipush 0           # 0
36 09    # vstore 9           # goodNum = 0;
15 04    # vload 4            # hi2
15 01    # vload 1            # lo1
64       # isub               # (hi2 - lo1)
BC 08    # newarray 8         # alloc_array(string, (hi2 - lo1))
36 0A    # vstore 10          # merged = alloc_array(string, (hi2 - lo1));
# <1010:loop>
A7 00 03 # goto +3            # goto <1011:body>
# <1011:body>
15 07    # vload 7            # num1
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (num1 >= 0) goto <1013:cond_true>
A7 00 1A # goto +26           # goto <1014:cond_false>
# <1013:cond_true>
15 07    # vload 7            # num1
15 02    # vload 2            # hi1
15 01    # vload 1            # lo1
64       # isub               # (hi1 - lo1)
A4 00 06 # if_icmple +6       # if (num1 <= (hi1 - lo1)) goto <1016:cond_true>
A7 00 08 # goto +8            # goto <1017:cond_false>
# <1016:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1018:cond_end>
# <1017:cond_false>
10 00    # bipush 0           # false
# <1018:cond_end>
A7 00 05 # goto +5            # goto <1015:cond_end>
# <1014:cond_false>
10 00    # bipush 0           # false
# <1015:cond_end>
14 55 5F # aldc 21855         # s[21855] = "speller.c0: 116.6-116.50: @loop_invariant annotation failed"
CF       # assert             # assert ((num1 >= 0) && (num1 <= (hi1 - lo1))) [failure message on stack]
15 08    # vload 8            # num2
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (num2 >= 0) goto <1019:cond_true>
A7 00 1A # goto +26           # goto <1020:cond_false>
# <1019:cond_true>
15 08    # vload 8            # num2
15 04    # vload 4            # hi2
15 03    # vload 3            # lo2
64       # isub               # (hi2 - lo2)
A4 00 06 # if_icmple +6       # if (num2 <= (hi2 - lo2)) goto <1022:cond_true>
A7 00 08 # goto +8            # goto <1023:cond_false>
# <1022:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1024:cond_end>
# <1023:cond_false>
10 00    # bipush 0           # false
# <1024:cond_end>
A7 00 05 # goto +5            # goto <1021:cond_end>
# <1020:cond_false>
10 00    # bipush 0           # false
# <1021:cond_end>
14 55 9B # aldc 21915         # s[21915] = "speller.c0: 117.6-117.50: @loop_invariant annotation failed"
CF       # assert             # assert ((num2 >= 0) && (num2 <= (hi2 - lo2))) [failure message on stack]
15 07    # vload 7            # num1
15 02    # vload 2            # hi1
15 01    # vload 1            # lo1
64       # isub               # (hi1 - lo1)
A1 00 06 # if_icmplt +6       # if (num1 < (hi1 - lo1)) goto <1028:and>
A7 00 B1 # goto +177          # goto <1026:else>
# <1028:and>
15 08    # vload 8            # num2
15 04    # vload 4            # hi2
15 03    # vload 3            # lo2
64       # isub               # (hi2 - lo2)
A1 00 06 # if_icmplt +6       # if (num2 < (hi2 - lo2)) goto <1025:then>
A7 00 A4 # goto +164          # goto <1026:else>
# <1025:then>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 07    # vload 7            # num1
60       # iadd               # (lo1 + num1)
63       # aadds              # &A[(lo1 + num1)]
2F       # amload             # A[(lo1 + num1)]
36 0B    # vstore 11          # word1 = A[(lo1 + num1)];
15 00    # vload 0            # A
15 03    # vload 3            # lo2
15 08    # vload 8            # num2
60       # iadd               # (lo2 + num2)
63       # aadds              # &A[(lo2 + num2)]
2F       # amload             # A[(lo2 + num2)]
36 0C    # vstore 12          # word2 = A[(lo2 + num2)];
15 0B    # vload 11           # word1
15 0C    # vload 12           # word2
14 55 D7 # aldc 21975         # s[21975] = "merge (speller.c0: 121.9-121.36)"
B8 00 06 # invokestatic 6     # string_compare__1(word1, word2, "merge (speller.c0: 121.9-121.36)")
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (string_compare__1(word1, word2, "merge (speller.c0: 121.9-121.36)") == -(1)) goto <1029:then>
A7 00 1C # goto +28           # goto <1030:else>
# <1029:then>
15 0A    # vload 10           # merged
15 09    # vload 9            # goodNum
63       # aadds              # &merged[goodNum]
15 0B    # vload 11           # word1
4F       # amstore            # merged[goodNum] = word1;
15 09    # vload 9            # goodNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # goodNum += 1;
15 07    # vload 7            # num1
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # num1 += 1;
A7 00 60 # goto +96           # goto <1031:endif>
# <1030:else>
15 0B    # vload 11           # word1
15 0C    # vload 12           # word2
14 55 F8 # aldc 22008         # s[22008] = "merge (speller.c0: 125.16-125.43)"
B8 00 06 # invokestatic 6     # string_compare__1(word1, word2, "merge (speller.c0: 125.16-125.43)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_compare__1(word1, word2, "merge (speller.c0: 125.16-125.43)") == 1) goto <1032:then>
A7 00 1C # goto +28           # goto <1033:else>
# <1032:then>
15 0A    # vload 10           # merged
15 09    # vload 9            # goodNum
63       # aadds              # &merged[goodNum]
15 0C    # vload 12           # word2
4F       # amstore            # merged[goodNum] = word2;
15 09    # vload 9            # goodNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # goodNum += 1;
15 08    # vload 8            # num2
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # num2 += 1;
A7 00 35 # goto +53           # goto <1034:endif>
# <1033:else>
15 0B    # vload 11           # word1
15 0C    # vload 12           # word2
14 56 1A # aldc 22042         # s[22042] = "merge (speller.c0: 129.16-129.41)"
B8 00 05 # invokestatic 5     # string_equal__1(word1, word2, "merge (speller.c0: 129.16-129.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(word1, word2, "merge (speller.c0: 129.16-129.41)") == true) goto <1035:then>
A7 00 23 # goto +35           # goto <1036:else>
# <1035:then>
15 0A    # vload 10           # merged
15 09    # vload 9            # goodNum
63       # aadds              # &merged[goodNum]
15 0B    # vload 11           # word1
4F       # amstore            # merged[goodNum] = word1;
15 09    # vload 9            # goodNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # goodNum += 1;
15 07    # vload 7            # num1
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # num1 += 1;
15 08    # vload 8            # num2
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # num2 += 1;
A7 00 03 # goto +3            # goto <1037:endif>
# <1036:else>
# <1037:endif>
# <1034:endif>
# <1031:endif>
A7 00 06 # goto +6            # goto <1027:endif>
# <1026:else>
A7 00 06 # goto +6            # break
# <1027:endif>
A7 FE F1 # goto -271          # goto <1010:loop>
# <1012:exit>
15 07    # vload 7            # num1
15 02    # vload 2            # hi1
15 01    # vload 1            # lo1
64       # isub               # (hi1 - lo1)
A1 00 06 # if_icmplt +6       # if (num1 < (hi1 - lo1)) goto <1038:then>
A7 00 4D # goto +77           # goto <1039:else>
# <1038:then>
15 09    # vload 9            # goodNum
36 0B    # vstore 11          # temp = goodNum;
10 00    # bipush 0           # 0
36 0C    # vstore 12          # i = 0;
# <1041:loop>
A7 00 03 # goto +3            # goto <1042:body>
# <1042:body>
15 0C    # vload 12           # i
15 02    # vload 2            # hi1
15 01    # vload 1            # lo1
64       # isub               # (hi1 - lo1)
15 07    # vload 7            # num1
64       # isub               # ((hi1 - lo1) - num1)
A1 00 06 # if_icmplt +6       # if (i < ((hi1 - lo1) - num1)) goto <1044:then>
A7 00 29 # goto +41           # goto <1045:else>
# <1044:then>
15 0A    # vload 10           # merged
15 0B    # vload 11           # temp
15 0C    # vload 12           # i
60       # iadd               # (temp + i)
63       # aadds              # &merged[(temp + i)]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 07    # vload 7            # num1
60       # iadd               # (lo1 + num1)
15 0C    # vload 12           # i
60       # iadd               # ((lo1 + num1) + i)
63       # aadds              # &A[((lo1 + num1) + i)]
2F       # amload             # A[((lo1 + num1) + i)]
4F       # amstore            # merged[(temp + i)] = A[((lo1 + num1) + i)];
15 09    # vload 9            # goodNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # goodNum += 1;
15 0C    # vload 12           # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 0C    # vstore 12          # i += 1;
A7 00 06 # goto +6            # goto <1046:endif>
# <1045:else>
A7 00 06 # goto +6            # break
# <1046:endif>
A7 FF C4 # goto -60           # goto <1041:loop>
# <1043:exit>
A7 00 03 # goto +3            # goto <1040:endif>
# <1039:else>
# <1040:endif>
15 08    # vload 8            # num2
15 04    # vload 4            # hi2
15 03    # vload 3            # lo2
64       # isub               # (hi2 - lo2)
A1 00 06 # if_icmplt +6       # if (num2 < (hi2 - lo2)) goto <1047:then>
A7 00 4D # goto +77           # goto <1048:else>
# <1047:then>
15 09    # vload 9            # goodNum
36 0B    # vstore 11          # temp = goodNum;
10 00    # bipush 0           # 0
36 0C    # vstore 12          # i = 0;
# <1050:loop>
A7 00 03 # goto +3            # goto <1051:body>
# <1051:body>
15 0C    # vload 12           # i
15 04    # vload 4            # hi2
15 03    # vload 3            # lo2
64       # isub               # (hi2 - lo2)
15 08    # vload 8            # num2
64       # isub               # ((hi2 - lo2) - num2)
A1 00 06 # if_icmplt +6       # if (i < ((hi2 - lo2) - num2)) goto <1053:then>
A7 00 29 # goto +41           # goto <1054:else>
# <1053:then>
15 0A    # vload 10           # merged
15 0B    # vload 11           # temp
15 0C    # vload 12           # i
60       # iadd               # (temp + i)
63       # aadds              # &merged[(temp + i)]
15 00    # vload 0            # A
15 03    # vload 3            # lo2
15 08    # vload 8            # num2
60       # iadd               # (lo2 + num2)
15 0C    # vload 12           # i
60       # iadd               # ((lo2 + num2) + i)
63       # aadds              # &A[((lo2 + num2) + i)]
2F       # amload             # A[((lo2 + num2) + i)]
4F       # amstore            # merged[(temp + i)] = A[((lo2 + num2) + i)];
15 09    # vload 9            # goodNum
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # goodNum += 1;
15 0C    # vload 12           # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 0C    # vstore 12          # i += 1;
A7 00 06 # goto +6            # goto <1055:endif>
# <1054:else>
A7 00 06 # goto +6            # break
# <1055:endif>
A7 FF C4 # goto -60           # goto <1050:loop>
# <1052:exit>
A7 00 03 # goto +3            # goto <1049:endif>
# <1048:else>
# <1049:endif>
10 00    # bipush 0           # 0
36 0B    # vstore 11          # i = 0;
# <1056:loop>
A7 00 03 # goto +3            # goto <1057:body>
# <1057:body>
15 0B    # vload 11           # i
15 09    # vload 9            # goodNum
A1 00 06 # if_icmplt +6       # if (i < goodNum) goto <1059:then>
A7 00 1C # goto +28           # goto <1060:else>
# <1059:then>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 0B    # vload 11           # i
60       # iadd               # (lo1 + i)
63       # aadds              # &A[(lo1 + i)]
15 0A    # vload 10           # merged
15 0B    # vload 11           # i
63       # aadds              # &merged[i]
2F       # amload             # merged[i]
4F       # amstore            # A[(lo1 + i)] = merged[i];
15 0B    # vload 11           # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 0B    # vstore 11          # i += 1;
A7 00 06 # goto +6            # goto <1061:endif>
# <1060:else>
A7 00 06 # goto +6            # break
# <1061:endif>
A7 FF D7 # goto -41           # goto <1056:loop>
# <1058:exit>
15 09    # vload 9            # goodNum
36 06    # vstore 6           # _result = goodNum;
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1062:cond_true>
A7 00 1A # goto +26           # goto <1063:cond_false>
# <1062:cond_true>
15 06    # vload 6            # _result
15 04    # vload 4            # hi2
15 01    # vload 1            # lo1
64       # isub               # (hi2 - lo1)
A4 00 06 # if_icmple +6       # if (_result <= (hi2 - lo1)) goto <1065:cond_true>
A7 00 08 # goto +8            # goto <1066:cond_false>
# <1065:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1067:cond_end>
# <1066:cond_false>
10 00    # bipush 0           # false
# <1067:cond_end>
A7 00 05 # goto +5            # goto <1064:cond_end>
# <1063:cond_false>
10 00    # bipush 0           # false
# <1064:cond_end>
14 56 3C # aldc 22076         # s[22076] = "speller.c0: 107.4-107.49: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= (hi2 - lo1))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 01    # vload 1            # lo1
15 06    # vload 6            # _result
60       # iadd               # (lo1 + _result)
14 56 71 # aldc 22129         # s[22129] = "merge (speller.c0: 108.12-108.44)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, lo1, (lo1 + _result), "merge (speller.c0: 108.12-108.44)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(A, lo1, (lo1 + _result), "merge (speller.c0: 108.12-108.44)") == true) goto <1068:cond_true>
A7 00 15 # goto +21           # goto <1069:cond_false>
# <1068:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 01    # vload 1            # lo1
15 06    # vload 6            # _result
60       # iadd               # (lo1 + _result)
14 56 93 # aldc 22163         # s[22163] = "merge (speller.c0: 108.48-108.79)"
B8 00 27 # invokestatic 39    # no_dupes__1(A, lo1, (lo1 + _result), "merge (speller.c0: 108.48-108.79)")
A7 00 05 # goto +5            # goto <1070:cond_end>
# <1069:cond_false>
10 00    # bipush 0           # false
# <1070:cond_end>
14 56 B5 # aldc 22197         # s[22197] = "speller.c0: 108.4-108.80: @ensures annotation failed"
CF       # assert             # assert (is_sorted__1(A, lo1, (lo1 + _result), "merge (speller.c0: 108.12-108.44)") && no_dupes__1(A, lo1, (lo1 + _result), "merge (speller.c0: 108.48-108.79)")) [failure message on stack]
15 06    # vload 6            # _result
B0       # return             # 


#<mergesort>
04                # number of arguments = 4
09                # number of local variables = 9
01 68             # code length = 360 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1074:and>
A7 00 22 # goto +34           # goto <1072:cond_false>
# <1074:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1071:cond_true>
A7 00 18 # goto +24           # goto <1072:cond_false>
# <1071:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1075:cond_true>
A7 00 08 # goto +8            # goto <1076:cond_false>
# <1075:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1077:cond_end>
# <1076:cond_false>
10 00    # bipush 0           # false
# <1077:cond_end>
A7 00 05 # goto +5            # goto <1073:cond_end>
# <1072:cond_false>
10 00    # bipush 0           # false
# <1073:cond_end>
14 56 EA # aldc 22250         # s[22250] = "speller.c0: 163.4-163.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 57 21 # aldc 22305         # s[22305] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 163.4-163.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # hi
15 01    # vload 1            # lo
64       # isub               # (hi - lo)
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if ((hi - lo) <= 1) goto <1078:then>
A7 00 66 # goto +102          # goto <1079:else>
# <1078:then>
15 02    # vload 2            # hi
15 01    # vload 1            # lo
64       # isub               # (hi - lo)
36 04    # vstore 4           # _result = (hi - lo);
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1081:cond_true>
A7 00 1A # goto +26           # goto <1082:cond_false>
# <1081:cond_true>
15 04    # vload 4            # _result
15 02    # vload 2            # hi
15 01    # vload 1            # lo
64       # isub               # (hi - lo)
A4 00 06 # if_icmple +6       # if (_result <= (hi - lo)) goto <1084:cond_true>
A7 00 08 # goto +8            # goto <1085:cond_false>
# <1084:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1086:cond_end>
# <1085:cond_false>
10 00    # bipush 0           # false
# <1086:cond_end>
A7 00 05 # goto +5            # goto <1083:cond_end>
# <1082:cond_false>
10 00    # bipush 0           # false
# <1083:cond_end>
14 57 33 # aldc 22323         # s[22323] = "speller.c0: 164.4-164.47: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= (hi - lo))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 01    # vload 1            # lo
15 04    # vload 4            # _result
60       # iadd               # (lo + _result)
14 57 68 # aldc 22376         # s[22376] = "mergesort (speller.c0: 165.12-165.42)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.12-165.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.12-165.42)") == true) goto <1087:cond_true>
A7 00 15 # goto +21           # goto <1088:cond_false>
# <1087:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 01    # vload 1            # lo
15 04    # vload 4            # _result
60       # iadd               # (lo + _result)
14 57 8E # aldc 22414         # s[22414] = "mergesort (speller.c0: 165.46-165.75)"
B8 00 27 # invokestatic 39    # no_dupes__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.46-165.75)")
A7 00 05 # goto +5            # goto <1089:cond_end>
# <1088:cond_false>
10 00    # bipush 0           # false
# <1089:cond_end>
14 57 B4 # aldc 22452         # s[22452] = "speller.c0: 165.4-165.76: @ensures annotation failed"
CF       # assert             # assert (is_sorted__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.12-165.42)") && no_dupes__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.46-165.75)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <1080:endif>
# <1079:else>
# <1080:endif>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
15 01    # vload 1            # lo
64       # isub               # (hi - lo)
10 02    # bipush 2           # 2
6C       # idiv               # ((hi - lo) / 2)
60       # iadd               # (lo + ((hi - lo) / 2))
36 05    # vstore 5           # mid = (lo + ((hi - lo) / 2));
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 05    # vload 5            # mid
14 57 E9 # aldc 22505         # s[22505] = "mergesort (speller.c0: 172.14-172.33)"
B8 00 5E # invokestatic 94    # mergesort(A, lo, mid, "mergesort (speller.c0: 172.14-172.33)")
36 06    # vstore 6           # left = mergesort(A, lo, mid, "mergesort (speller.c0: 172.14-172.33)");
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 05    # vload 5            # mid
14 58 0F # aldc 22543         # s[22543] = "mergesort (speller.c0: 173.13-173.32)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, lo, mid, "mergesort (speller.c0: 173.13-173.32)")
14 58 35 # aldc 22581         # s[22581] = "speller.c0: 173.6-173.33: @assert annotation failed"
CF       # assert             # assert is_sorted__1(A, lo, mid, "mergesort (speller.c0: 173.13-173.32)") [failure message on stack]
15 00    # vload 0            # A
15 05    # vload 5            # mid
15 02    # vload 2            # hi
14 58 69 # aldc 22633         # s[22633] = "mergesort (speller.c0: 174.15-174.34)"
B8 00 5E # invokestatic 94    # mergesort(A, mid, hi, "mergesort (speller.c0: 174.15-174.34)")
36 07    # vstore 7           # right = mergesort(A, mid, hi, "mergesort (speller.c0: 174.15-174.34)");
15 00    # vload 0            # A
15 05    # vload 5            # mid
15 02    # vload 2            # hi
14 58 8F # aldc 22671         # s[22671] = "mergesort (speller.c0: 175.13-175.32)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, mid, hi, "mergesort (speller.c0: 175.13-175.32)")
14 58 B5 # aldc 22709         # s[22709] = "speller.c0: 175.6-175.33: @assert annotation failed"
CF       # assert             # assert is_sorted__1(A, mid, hi, "mergesort (speller.c0: 175.13-175.32)") [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 01    # vload 1            # lo
15 06    # vload 6            # left
60       # iadd               # (lo + left)
15 05    # vload 5            # mid
15 05    # vload 5            # mid
15 07    # vload 7            # right
60       # iadd               # (mid + right)
14 58 E9 # aldc 22761         # s[22761] = "mergesort (speller.c0: 176.16-176.49)"
B8 00 5D # invokestatic 93    # merge(A, lo, (lo + left), mid, (mid + right), "mergesort (speller.c0: 176.16-176.49)")
36 08    # vstore 8           # unique = merge(A, lo, (lo + left), mid, (mid + right), "mergesort (speller.c0: 176.16-176.49)");
15 08    # vload 8            # unique
36 04    # vstore 4           # _result = unique;
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1090:cond_true>
A7 00 1A # goto +26           # goto <1091:cond_false>
# <1090:cond_true>
15 04    # vload 4            # _result
15 02    # vload 2            # hi
15 01    # vload 1            # lo
64       # isub               # (hi - lo)
A4 00 06 # if_icmple +6       # if (_result <= (hi - lo)) goto <1093:cond_true>
A7 00 08 # goto +8            # goto <1094:cond_false>
# <1093:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1095:cond_end>
# <1094:cond_false>
10 00    # bipush 0           # false
# <1095:cond_end>
A7 00 05 # goto +5            # goto <1092:cond_end>
# <1091:cond_false>
10 00    # bipush 0           # false
# <1092:cond_end>
14 59 0F # aldc 22799         # s[22799] = "speller.c0: 164.4-164.47: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= (hi - lo))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 01    # vload 1            # lo
15 04    # vload 4            # _result
60       # iadd               # (lo + _result)
14 59 44 # aldc 22852         # s[22852] = "mergesort (speller.c0: 165.12-165.42)"
B8 00 26 # invokestatic 38    # is_sorted__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.12-165.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.12-165.42)") == true) goto <1096:cond_true>
A7 00 15 # goto +21           # goto <1097:cond_false>
# <1096:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 01    # vload 1            # lo
15 04    # vload 4            # _result
60       # iadd               # (lo + _result)
14 59 6A # aldc 22890         # s[22890] = "mergesort (speller.c0: 165.46-165.75)"
B8 00 27 # invokestatic 39    # no_dupes__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.46-165.75)")
A7 00 05 # goto +5            # goto <1098:cond_end>
# <1097:cond_false>
10 00    # bipush 0           # false
# <1098:cond_end>
14 59 90 # aldc 22928         # s[22928] = "speller.c0: 165.4-165.76: @ensures annotation failed"
CF       # assert             # assert (is_sorted__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.12-165.42)") && no_dupes__1(A, lo, (lo + _result), "mergesort (speller.c0: 165.46-165.75)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<check_text_better>
06                # number of arguments = 6
09                # number of local variables = 9
01 0B             # code length = 267 bytes
15 00    # vload 0            # dict
BE       # arraylength        # \length(dict)
15 01    # vload 1            # d
9F 00 06 # if_cmpeq +6        # if (\length(dict) == d) goto <1099:cond_true>
A7 00 08 # goto +8            # goto <1100:cond_false>
# <1099:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1101:cond_end>
# <1100:cond_false>
10 00    # bipush 0           # false
# <1101:cond_end>
14 59 C5 # aldc 22981         # s[22981] = "speller.c0: 181.4-181.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 59 FC # aldc 23036         # s[23036] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 181.4-181.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(dict) == d) [failure message on stack]
15 02    # vload 2            # text
BE       # arraylength        # \length(text)
15 03    # vload 3            # t
9F 00 06 # if_cmpeq +6        # if (\length(text) == t) goto <1102:cond_true>
A7 00 08 # goto +8            # goto <1103:cond_false>
# <1102:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1104:cond_end>
# <1103:cond_false>
10 00    # bipush 0           # false
# <1104:cond_end>
14 5A 0E # aldc 23054         # s[23054] = "speller.c0: 182.4-182.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 5A 45 # aldc 23109         # s[23109] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 182.4-182.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(text) == t) [failure message on stack]
15 04    # vload 4            # miss
BE       # arraylength        # \length(miss)
15 03    # vload 3            # t
A2 00 06 # if_icmpge +6       # if (\length(miss) >= t) goto <1105:cond_true>
A7 00 08 # goto +8            # goto <1106:cond_false>
# <1105:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1107:cond_end>
# <1106:cond_false>
10 00    # bipush 0           # false
# <1107:cond_end>
14 5A 57 # aldc 23127         # s[23127] = "speller.c0: 183.4-183.32: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 5A 8E # aldc 23182         # s[23182] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 183.4-183.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(miss) >= t) [failure message on stack]
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 5A A0 # aldc 23200         # s[23200] = "check_text_better (speller.c0: 184.13-184.32)"
B8 00 26 # invokestatic 38    # is_sorted__1(dict, 0, d, "check_text_better (speller.c0: 184.13-184.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(dict, 0, d, "check_text_better (speller.c0: 184.13-184.32)") == true) goto <1108:cond_true>
A7 00 12 # goto +18           # goto <1109:cond_false>
# <1108:cond_true>
15 00    # vload 0            # dict
10 00    # bipush 0           # 0
15 01    # vload 1            # d
14 5A CE # aldc 23246         # s[23246] = "check_text_better (speller.c0: 184.36-184.54)"
B8 00 27 # invokestatic 39    # no_dupes__1(dict, 0, d, "check_text_better (speller.c0: 184.36-184.54)")
A7 00 05 # goto +5            # goto <1110:cond_end>
# <1109:cond_false>
10 00    # bipush 0           # false
# <1110:cond_end>
14 5A FC # aldc 23292         # s[23292] = "speller.c0: 184.4-184.55: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 5B 33 # aldc 23347         # s[23347] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("speller.c0: 184.4-184.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (is_sorted__1(dict, 0, d, "check_text_better (speller.c0: 184.13-184.32)") && no_dupes__1(dict, 0, d, "check_text_better (speller.c0: 184.36-184.54)")) [failure message on stack]
15 02    # vload 2            # text
10 00    # bipush 0           # 0
15 03    # vload 3            # t
14 5B 45 # aldc 23365         # s[23365] = "check_text_better (speller.c0: 189.20-189.41)"
B8 00 5E # invokestatic 94    # mergesort(text, 0, t, "check_text_better (speller.c0: 189.20-189.41)")
36 07    # vstore 7           # uniqueNums = mergesort(text, 0, t, "check_text_better (speller.c0: 189.20-189.41)");
15 00    # vload 0            # dict
15 01    # vload 1            # d
15 02    # vload 2            # text
15 07    # vload 7            # uniqueNums
15 04    # vload 4            # miss
14 5B 73 # aldc 23411         # s[23411] = "check_text_better (speller.c0: 194.17-194.67)"
B8 00 5C # invokestatic 92    # check_sorted_text(dict, d, text, uniqueNums, miss, "check_text_better (speller.c0: 194.17-194.67)")
36 08    # vstore 8           # missNum = check_sorted_text(dict, d, text, uniqueNums, miss, "check_text_better (speller.c0: 194.17-194.67)");
15 08    # vload 8            # missNum
36 06    # vstore 6           # _result = missNum;
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1111:cond_true>
A7 00 17 # goto +23           # goto <1112:cond_false>
# <1111:cond_true>
15 06    # vload 6            # _result
15 03    # vload 3            # t
A4 00 06 # if_icmple +6       # if (_result <= t) goto <1114:cond_true>
A7 00 08 # goto +8            # goto <1115:cond_false>
# <1114:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1116:cond_end>
# <1115:cond_false>
10 00    # bipush 0           # false
# <1116:cond_end>
A7 00 05 # goto +5            # goto <1113:cond_end>
# <1112:cond_false>
10 00    # bipush 0           # false
# <1113:cond_end>
14 5B A1 # aldc 23457         # s[23457] = "speller.c0: 185.4-185.41: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= t)) [failure message on stack]
15 04    # vload 4            # miss
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
14 5B D6 # aldc 23510         # s[23510] = "check_text_better (speller.c0: 186.12-186.39)"
B8 00 26 # invokestatic 38    # is_sorted__1(miss, 0, _result, "check_text_better (speller.c0: 186.12-186.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_sorted__1(miss, 0, _result, "check_text_better (speller.c0: 186.12-186.39)") == true) goto <1117:cond_true>
A7 00 12 # goto +18           # goto <1118:cond_false>
# <1117:cond_true>
15 04    # vload 4            # miss
10 00    # bipush 0           # 0
15 06    # vload 6            # _result
14 5C 04 # aldc 23556         # s[23556] = "check_text_better (speller.c0: 186.43-186.69)"
B8 00 27 # invokestatic 39    # no_dupes__1(miss, 0, _result, "check_text_better (speller.c0: 186.43-186.69)")
A7 00 05 # goto +5            # goto <1119:cond_end>
# <1118:cond_false>
10 00    # bipush 0           # false
# <1119:cond_end>
14 5C 32 # aldc 23602         # s[23602] = "speller.c0: 186.4-186.70: @ensures annotation failed"
CF       # assert             # assert (is_sorted__1(miss, 0, _result, "check_text_better (speller.c0: 186.12-186.39)") && no_dupes__1(miss, 0, _result, "check_text_better (speller.c0: 186.43-186.69)")) [failure message on stack]
15 06    # vload 6            # _result
B0       # return             # 


#<parse_bool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 20 # invokenative 32    # parse_bool(s)
36 02    # vstore 2           # _result = parse_bool(s);
15 02    # vload 2            # _result
B0       # return             # 


#<parse_int__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <1120:cond_true>
A7 00 17 # goto +23           # goto <1121:cond_false>
# <1120:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <1123:cond_true>
A7 00 08 # goto +8            # goto <1124:cond_false>
# <1123:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1125:cond_end>
# <1124:cond_false>
10 00    # bipush 0           # false
# <1125:cond_end>
A7 00 05 # goto +5            # goto <1122:cond_end>
# <1121:cond_false>
10 00    # bipush 0           # false
# <1122:cond_end>
14 5C 67 # aldc 23655         # s[23655] = "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 5C B8 # aldc 23736         # s[23736] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 21 # invokenative 33    # parse_int(s, base)
36 03    # vstore 3           # _result = parse_int(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<num_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 22 # invokenative 34    # num_tokens(s)
36 02    # vstore 2           # _result = num_tokens(s);
15 02    # vload 2            # _result
B0       # return             # 


#<int_tokens__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <1126:cond_true>
A7 00 17 # goto +23           # goto <1127:cond_false>
# <1126:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <1129:cond_true>
A7 00 08 # goto +8            # goto <1130:cond_false>
# <1129:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1131:cond_end>
# <1130:cond_false>
10 00    # bipush 0           # false
# <1131:cond_end>
A7 00 05 # goto +5            # goto <1128:cond_end>
# <1127:cond_false>
10 00    # bipush 0           # false
# <1128:cond_end>
14 5C CA # aldc 23754         # s[23754] = "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 5D 1B # aldc 23835         # s[23835] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 23 # invokenative 35    # int_tokens(s, base)
36 03    # vstore 3           # _result = int_tokens(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<parse_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 26             # code length = 38 bytes
15 00    # vload 0            # s
B7 00 24 # invokenative 36    # parse_tokens(s)
36 02    # vstore 2           # _result = parse_tokens(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 5D 2D # aldc 23853         # s[23853] = "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
B8 00 62 # invokestatic 98    # num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) goto <1132:cond_true>
A7 00 08 # goto +8            # goto <1133:cond_false>
# <1132:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1134:cond_end>
# <1133:cond_false>
10 00    # bipush 0           # false
# <1134:cond_end>
14 5D 73 # aldc 23923         # s[23923] = "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<parse_ints__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
15 00    # vload 0            # s
15 01    # vload 1            # base
14 5D C2 # aldc 24002         # s[24002] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
B8 00 63 # invokestatic 99    # int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)")
14 5E 06 # aldc 24070         # s[24070] = "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 5E 57 # aldc 24151         # s[24151] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)") [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 25 # invokenative 37    # parse_ints(s, base)
36 03    # vstore 3           # _result = parse_ints(s, base);
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 5E 69 # aldc 24169         # s[24169] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
B8 00 62 # invokestatic 98    # num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) goto <1135:cond_true>
A7 00 08 # goto +8            # goto <1136:cond_false>
# <1135:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1137:cond_end>
# <1136:cond_false>
10 00    # bipush 0           # false
# <1137:cond_end>
14 5E AD # aldc 24237         # s[24237] = "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 

00 26             # native count
# native pool
00 01 00 65       # string_length
00 02 00 64       # string_join
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 00 00 0B       # readline
00 01 00 3F       # file_closed
00 01 00 41       # file_read
00 01 00 3E       # file_close
00 01 00 40       # file_eof
00 01 00 42       # file_readline
00 02 00 00       # args_flag
00 02 00 01       # args_int
00 02 00 03       # args_string
00 00 00 02       # args_parse
00 01 00 57       # parse_bool
00 02 00 58       # parse_int
00 01 00 56       # num_tokens
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 02 00 59       # parse_ints

