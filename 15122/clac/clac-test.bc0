C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

8D 3B             # string pool total size
# string pool
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 73 65 67 6D 65 6E 74 5F 73 6C 69 73 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 32 33 2E 31 30 2D 32 33 2E 34 34 29 00  # "is_segment_slist (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 23.10-23.44)"
69 73 5F 71 75 65 75 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 37 2E 38 2D 33 37 2E 34 33 29 00  # "is_queue (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 37.8-37.43)"
71 75 65 75 65 5F 65 6D 70 74 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 31 2E 31 33 2D 34 31 2E 32 34 29 00  # "queue_empty (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.13-41.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 31 2E 34 2D 34 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.4-41.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 69 73 5F 72 65 61 64 5F 6F 6E 6C 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 37 2E 31 33 2D 34 37 2E 32 34 29 00  # "queue_is_read_only (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.13-47.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.4-47.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 33 2E 31 32 2D 35 33 2E 32 39 29 00  # "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 53.12-53.29)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 33 2E 34 2D 35 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 53.4-53.30: @ensures annotation failed"
71 75 65 75 65 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 34 2E 31 32 2D 35 34 2E 33 32 29 00  # "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 54.12-54.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 34 2E 34 2D 35 34 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 54.4-54.33: @ensures annotation failed"
65 6E 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 35 2E 31 33 2D 36 35 2E 32 34 29 00  # "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.13-65.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 35 2E 34 2D 36 35 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.4-65.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 6E 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 31 32 2D 36 36 2E 32 33 29 00  # "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
65 6E 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 37 29 00  # "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
65 6E 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 31 32 2D 36 36 2E 32 33 29 00  # "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
65 6E 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 37 29 00  # "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
64 65 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 37 2E 31 33 2D 37 37 2E 32 34 29 00  # "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.13-77.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 37 2E 34 2D 37 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.4-77.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 31 34 2D 37 38 2E 32 38 29 00  # "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.14-78.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 34 2D 37 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.4-78.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 31 32 2D 37 39 2E 32 33 29 00  # "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 79.12-79.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 79.4-79.24: @ensures annotation failed"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 37 2E 31 33 2D 38 37 2E 32 34 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.13-87.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 37 2E 34 2D 38 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.4-87.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
5B 66 72 6F 6E 74 5D 20 00  # "[front] "
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 39 2E 33 2D 38 39 2E 32 31 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 89.3-89.21)"
00  # ""
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 32 36 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 32 36 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)"
00  # ""
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 32 36 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)"
20 3C 3C 20 00  # " << "
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 32 2E 32 39 2D 39 32 2E 34 33 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 92.29-92.43)"
20 5B 62 61 63 6B 5D 00  # " [back]"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 34 2E 33 2D 39 34 2E 32 30 29 00  # "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 94.3-94.20)"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 38 2E 31 33 2D 39 38 2E 32 34 29 00  # "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.13-98.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 38 2E 34 2D 39 38 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.4-98.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 39 2E 31 32 2D 39 39 2E 32 33 29 00  # "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 99.12-99.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 99.4-99.24: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 30 2E 31 32 2D 31 30 30 2E 32 39 29 00  # "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 100.12-100.29)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 30 2E 34 2D 31 30 30 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 100.4-100.30: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 31 32 2D 31 30 31 2E 33 39 29 00  # "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 101.12-101.39)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 34 2D 31 30 31 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 101.4-101.40: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 32 2E 34 2D 31 32 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 65 6D 70 74 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 31 2E 31 2D 31 32 32 2E 33 39 29 00  # "queue_empty__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 121.1-122.39)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 35 2E 34 2D 31 32 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 69 73 5F 72 65 61 64 5F 6F 6E 6C 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 34 2E 31 2D 31 32 35 2E 33 39 29 00  # "queue_is_read_only__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 124.1-125.39)"
71 75 65 75 65 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 37 2E 31 2D 31 32 39 2E 33 39 29 00  # "queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 127.1-129.39)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 38 2E 34 2D 31 32 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 128.4-128.28: @ensures annotation failed"
71 75 65 75 65 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 39 2E 31 32 2D 31 32 39 2E 33 32 29 00  # "queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 129.12-129.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 39 2E 34 2D 31 32 39 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 129.4-129.33: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 32 2E 34 2D 31 33 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 6E 71 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 31 2E 31 2D 31 33 33 2E 33 39 29 00  # "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 131.1-133.39)"
65 6E 71 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 31 33 2D 31 33 33 2E 32 37 29 00  # "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
65 6E 71 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 31 33 2D 31 33 33 2E 32 37 29 00  # "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 36 2E 34 2D 31 33 36 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 37 2E 31 34 2D 31 33 37 2E 32 38 29 00  # "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.14-137.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 37 2E 34 2D 31 33 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 35 2E 31 2D 31 33 37 2E 33 39 29 00  # "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 135.1-137.39)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 30 2E 34 2D 31 34 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 70 72 69 6E 74 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 39 2E 31 2D 31 34 30 2E 33 39 29 00  # "queue_print__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 139.1-140.39)"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 35 2E 31 2D 31 34 37 2E 34 36 29 00  # "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 145.1-147.46)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 146.4-146.28: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 37 2E 31 32 2D 31 34 37 2E 33 39 29 00  # "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 147.12-147.39)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 37 2E 34 2D 31 34 37 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 147.4-147.40: @ensures annotation failed"
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 61 73 73 6F 63 6C 69 73 74 5F 73 65 67 6D 65 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 32 33 2E 33 32 2D 32 33 2E 37 30 29 00  # "is_assoclist_segment (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 23.32-23.70)"
69 73 5F 61 63 79 63 6C 69 63 5F 61 73 73 6F 63 6C 69 73 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 33 33 2E 32 31 2D 33 33 2E 35 36 29 00  # "is_acyclic_assoclist (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 33.21-33.56)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 33 33 2E 36 2D 33 33 2E 35 37 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 33.6-33.57: @loop_invariant annotation failed"
69 73 5F 64 69 63 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 35 34 2E 32 33 2D 35 34 2E 35 37 29 00  # "is_dict (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 54.23-54.57)"
64 69 63 74 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 35 39 2E 31 32 2D 35 39 2E 32 38 29 00  # "dict_new (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 59.12-59.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 35 39 2E 34 2D 35 39 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 59.4-59.29: @ensures annotation failed"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 33 29 00  # "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.13-67.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.4-67.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 37 30 2E 32 31 2D 37 30 2E 34 34 29 00  # "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 70.21-70.44)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 37 30 2E 36 2D 37 30 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 70.6-70.45: @loop_invariant annotation failed"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 37 32 2E 39 2D 37 32 2E 33 36 29 00  # "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 72.9-72.36)"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 31 2E 31 33 2D 38 31 2E 32 33 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.13-81.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 31 2E 34 2D 38 31 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.4-81.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 32 2E 34 2D 38 32 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 82.4-82.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 37 2E 32 31 2D 38 37 2E 34 34 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 87.21-87.44)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 37 2E 36 2D 38 37 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 87.6-87.45: @loop_invariant annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 39 2E 39 2D 38 39 2E 33 36 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 89.9-89.36)"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 33 2E 31 32 2D 38 33 2E 32 32 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 33 2E 34 2D 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.4-83.23: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 34 2E 31 32 2D 38 34 2E 33 32 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 34 2E 34 2D 38 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.4-84.41: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 33 2E 31 32 2D 38 33 2E 32 32 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 33 2E 34 2D 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.4-83.23: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 34 2E 31 32 2D 38 34 2E 33 32 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 34 2E 34 2D 38 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.4-84.41: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 33 2E 31 32 2D 38 33 2E 32 32 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 33 2E 34 2D 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.4-83.23: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 34 2E 31 32 2D 38 34 2E 33 32 29 00  # "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 38 34 2E 34 2D 38 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.4-84.41: @ensures annotation failed"
64 69 63 74 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 31 34 2E 31 2D 31 31 35 2E 33 35 29 00  # "dict_new__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 114.1-115.35)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 31 35 2E 36 2D 31 31 35 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 115.6-115.30: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 31 39 2E 36 2D 31 31 39 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 119.6-119.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6C 6F 6F 6B 75 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 31 38 2E 31 2D 31 31 39 2E 33 30 29 00  # "dict_lookup__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 118.1-119.30)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 32 32 2E 36 2D 31 32 32 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 122.6-122.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 32 33 2E 36 2D 31 32 33 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 123.6-123.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 69 6E 73 65 72 74 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 69 6D 70 6C 65 5F 64 69 63 74 2E 63 30 3A 20 31 32 31 2E 31 2D 31 32 33 2E 33 32 29 00  # "dict_insert__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 121.1-123.32)"
69 73 5F 73 65 67 6D 65 6E 74 5F 69 6E 74 6C 69 73 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 32 33 2E 31 30 2D 32 33 2E 34 36 29 00  # "is_segment_intlist (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 23.10-23.46)"
69 73 5F 73 74 61 63 6B 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 33 36 2E 38 2D 33 36 2E 34 34 29 00  # "is_stack (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 36.8-36.44)"
73 74 61 63 6B 5F 65 6D 70 74 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 30 2E 31 33 2D 34 30 2E 32 34 29 00  # "stack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.13-40.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 30 2E 34 2D 34 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.4-40.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 36 2E 31 32 2D 34 36 2E 32 39 29 00  # "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 46.12-46.29)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 36 2E 34 2D 34 36 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 46.4-46.30: @ensures annotation failed"
73 74 61 63 6B 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 37 2E 31 32 2D 34 37 2E 33 32 29 00  # "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 47.12-47.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 47.4-47.33: @ensures annotation failed"
70 75 73 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 37 2E 31 33 2D 35 37 2E 32 34 29 00  # "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.13-57.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.4-57.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 75 73 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 38 2E 31 32 2D 35 38 2E 32 33 29 00  # "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 58.12-58.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 38 2E 34 2D 35 38 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 58.4-58.24: @ensures annotation failed"
70 6F 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 37 2E 31 33 2D 36 37 2E 32 34 29 00  # "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.13-67.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.4-67.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 38 2E 31 34 2D 36 38 2E 32 38 29 00  # "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.14-68.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.4-68.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 39 2E 31 32 2D 36 39 2E 32 33 29 00  # "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 69.12-69.23)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 39 2E 34 2D 36 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 69.4-69.24: @ensures annotation failed"
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 37 2E 31 33 2D 37 37 2E 32 34 29 00  # "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.13-77.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 37 2E 34 2D 37 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.4-77.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 39 2E 33 2D 37 39 2E 31 38 29 00  # "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 79.3-79.18)"
00  # ""
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 36 29 00  # "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)"
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 36 29 00  # "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)"
00  # ""
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 32 36 29 00  # "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)"
20 7C 20 00  # " | "
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 32 2E 33 30 2D 38 32 2E 34 33 29 00  # "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 82.30-82.43)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 30 2E 34 2D 31 30 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 100.4-100.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 39 39 2E 31 2D 31 30 30 2E 34 30 29 00  # "stack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 99.1-100.40)"
73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 32 2E 31 2D 31 30 34 2E 34 30 29 00  # "stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 102.1-104.40)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 103.4-103.28: @ensures annotation failed"
73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 34 2E 31 32 2D 31 30 34 2E 33 32 29 00  # "stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 104.12-104.32)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 34 2E 34 2D 31 30 34 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 104.4-104.33: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 107.4-107.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 75 73 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 36 2E 31 2D 31 30 38 2E 33 39 29 00  # "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 106.1-108.39)"
70 75 73 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 31 33 2D 31 30 38 2E 32 37 29 00  # "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
70 75 73 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 31 33 2D 31 30 38 2E 32 37 29 00  # "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 111.4-111.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 32 2E 31 34 2D 31 31 32 2E 32 38 29 00  # "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.14-112.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 32 2E 34 2D 31 31 32 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.4-112.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 30 2E 31 2D 31 31 32 2E 34 30 29 00  # "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 110.1-112.40)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 35 2E 34 2D 31 31 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 115.4-115.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 34 2E 31 2D 31 31 35 2E 34 30 29 00  # "stack_print__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 114.1-115.40)"
69 73 5F 73 65 67 6D 65 6E 74 5F 71 6C 69 73 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 32 33 2E 33 33 2D 32 33 2E 36 37 29 00  # "is_segment_qlist (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 23.33-23.67)"
69 73 5F 71 73 74 61 63 6B 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 36 2E 38 2D 33 36 2E 34 32 29 00  # "is_qstack (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 36.8-36.42)"
71 73 74 61 63 6B 5F 65 6D 70 74 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 30 2E 31 33 2D 34 30 2E 32 35 29 00  # "qstack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.13-40.25)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 30 2E 34 2D 34 30 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.4-40.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 73 74 61 63 6B 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 36 2E 31 32 2D 34 36 2E 33 30 29 00  # "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 46.12-46.30)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 36 2E 34 2D 34 36 2E 33 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 46.4-46.31: @ensures annotation failed"
71 73 74 61 63 6B 5F 6E 65 77 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 37 2E 31 32 2D 34 37 2E 33 33 29 00  # "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 47.12-47.33)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 47.4-47.34: @ensures annotation failed"
71 70 75 73 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 37 2E 31 33 2D 35 37 2E 32 35 29 00  # "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.13-57.25)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.4-57.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 39 2E 34 2D 35 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 59.4-59.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 75 73 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 38 2E 31 32 2D 35 38 2E 32 34 29 00  # "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 58.12-58.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 38 2E 34 2D 35 38 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 58.4-58.25: @ensures annotation failed"
71 70 6F 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 31 33 2D 36 38 2E 32 35 29 00  # "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.13-68.25)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.4-68.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 39 2E 31 34 2D 36 39 2E 32 39 29 00  # "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.14-69.29)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 39 2E 34 2D 36 39 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.4-69.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 30 2E 31 32 2D 37 30 2E 32 34 29 00  # "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 70.12-70.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 30 2E 34 2D 37 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 70.4-70.25: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 31 2E 34 2D 37 31 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 71.4-71.28: @ensures annotation failed"
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 31 33 2D 37 39 2E 32 35 29 00  # "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.13-79.25)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.4-79.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 31 2E 33 2D 38 31 2E 31 38 29 00  # "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 81.3-81.18)"
20 20 20 20 20 00  # "     "
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 33 2E 32 32 2D 38 33 2E 33 37 29 00  # "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 83.22-83.37)"
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 34 2E 35 2D 38 34 2E 32 35 29 00  # "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 84.5-84.25)"
0A 00  # "\n"
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 35 2E 33 30 2D 38 35 2E 34 32 29 00  # "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 85.30-85.42)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 103.4-103.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 32 2E 31 2D 31 30 33 2E 34 33 29 00  # "qstack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 102.1-103.43)"
71 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 35 2E 31 2D 31 30 37 2E 34 33 29 00  # "qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 105.1-107.43)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 36 2E 34 2D 31 30 36 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 106.4-106.28: @ensures annotation failed"
71 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 31 32 2D 31 30 37 2E 33 33 29 00  # "qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 107.12-107.33)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 107.4-107.34: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 30 2E 34 2D 31 31 30 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 110.4-110.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 75 73 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 39 2E 31 2D 31 31 31 2E 34 33 29 00  # "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 109.1-111.43)"
71 70 75 73 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 31 33 2D 31 31 31 2E 32 38 29 00  # "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.4-111.29: @ensures annotation failed"
71 70 75 73 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 31 33 2D 31 31 31 2E 32 38 29 00  # "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.4-111.29: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 34 2E 34 2D 31 31 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 114.4-114.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 35 2E 31 34 2D 31 31 35 2E 32 39 29 00  # "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.14-115.29)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 35 2E 34 2D 31 31 35 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.4-115.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 33 2E 31 2D 31 31 36 2E 34 33 29 00  # "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 113.1-116.43)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 36 2E 34 2D 31 31 36 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 116.4-116.28: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 39 2E 34 2D 31 31 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 119.4-119.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 38 2E 31 2D 31 31 39 2E 34 33 29 00  # "qstack_print__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 118.1-119.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 30 2E 36 2D 31 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 33 34 2D 31 35 2E 35 34 29 00  # "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 36 2D 31 35 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 31 36 2D 32 31 2E 33 30 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 36 2D 32 31 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 65 6F 66 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 31 36 2D 32 37 2E 33 30 29 00  # "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 31 36 2D 33 35 2E 33 30 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 36 2D 33 35 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 31 36 2D 33 36 2E 32 37 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 36 2D 33 36 2E 32 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 22.4-22.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 34 2E 31 33 2D 32 34 2E 32 39 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 24.13-24.29)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 37 2E 38 2D 32 37 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 27.8-27.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 31 2E 31 32 2D 33 31 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 31.12-31.48: @loop_invariant annotation failed"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 30 2E 33 39 2D 33 30 2E 35 38 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.39-30.58)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 30 2E 32 35 2D 33 30 2E 35 39 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.25-30.59)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 36 2E 31 32 2D 33 36 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 36.12-36.48: @loop_invariant annotation failed"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 35 2E 34 30 2D 33 35 2E 35 39 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.40-35.59)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 35 2E 32 36 2D 33 35 2E 36 30 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.26-35.60)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 38 2E 32 37 2D 33 38 2E 34 38 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.27-38.48)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 38 2E 32 30 2D 33 38 2E 34 39 29 00  # "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.20-38.49)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 47.4-47.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 34 38 2E 31 34 2D 34 38 2E 31 39 29 00  # "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.14-48.19)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 34 38 2E 34 2D 34 38 2E 32 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.4-48.20: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 30 2E 31 37 2D 35 30 2E 32 37 29 00  # "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 50.17-50.27)"
69 6E 70 75 74 5F 6C 69 6E 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 31 2E 33 2D 35 31 2E 32 34 29 00  # "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 51.3-51.24)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 57.4-57.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 39 2E 31 37 2D 35 39 2E 33 32 29 00  # "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 59.17-59.32)"
45 72 72 6F 72 3A 20 66 69 6C 65 20 64 6F 65 73 20 6E 6F 74 20 65 78 69 73 74 00  # "Error: file does not exist"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 31 2E 31 31 2D 36 31 2E 32 35 29 00  # "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 61.11-61.25)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 32 2E 31 39 2D 36 32 2E 33 38 29 00  # "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 62.19-62.38)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 33 2E 35 2D 36 33 2E 32 36 29 00  # "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 63.5-63.26)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 35 2E 33 2D 36 35 2E 31 39 29 00  # "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 65.3-65.19)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 38 2E 36 2D 37 38 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 78.6-78.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 39 2E 31 36 2D 37 39 2E 32 31 29 00  # "input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.16-79.21)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 39 2E 36 2D 37 39 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.6-79.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 37 2E 31 2D 37 39 2E 32 38 29 00  # "input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 77.1-79.28)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 33 2E 36 2D 38 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 83.6-83.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 66 69 6C 65 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 32 2E 31 2D 38 33 2E 33 30 29 00  # "input_file__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 82.1-83.30)"
2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 37 2E 36 2D 38 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 87.6-87.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 73 74 72 69 6E 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 78 47 5A 30 43 6E 63 51 42 42 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 36 2E 31 2D 38 37 2E 33 30 29 00  # "input_string__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 86.1-87.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 74 6F 6B 65 6E 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 33 34 2D 32 33 2E 34 37 29 00  # "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 31 35 2D 32 37 2E 33 34 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 33 34 2D 32 38 2E 34 37 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 38 2E 36 2D 38 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 37 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
70 6F 77 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 2E 31 32 2D 33 30 2E 32 32 29 00  # "pow (clac.c0: 30.12-30.22)"
63 6C 61 63 2E 63 30 3A 20 33 34 2E 34 2D 33 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 34.4-34.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 2E 31 38 2D 33 36 2E 32 39 29 00  # "countQ (clac.c0: 36.18-36.29)"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 33 38 2E 31 31 2D 33 38 2E 32 35 29 00  # "countQ (clac.c0: 38.11-38.25)"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 33 39 2E 31 38 2D 33 39 2E 32 34 29 00  # "countQ (clac.c0: 39.18-39.24)"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 34 31 2E 35 2D 34 31 2E 31 38 29 00  # "countQ (clac.c0: 41.5-41.18)"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 34 33 2E 31 31 2D 34 33 2E 32 38 29 00  # "countQ (clac.c0: 43.11-43.28)"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 34 34 2E 31 38 2D 34 34 2E 32 37 29 00  # "countQ (clac.c0: 44.18-44.27)"
63 6F 75 6E 74 51 20 28 63 6C 61 63 2E 63 30 3A 20 34 35 2E 35 2D 34 35 2E 31 35 29 00  # "countQ (clac.c0: 45.5-45.15)"
63 6C 61 63 2E 63 30 3A 20 35 38 2E 34 2D 35 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 58.4-58.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 30 2E 31 38 2D 36 30 2E 32 39 29 00  # "countS (clac.c0: 60.18-60.29)"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 32 2E 31 31 2D 36 32 2E 32 35 29 00  # "countS (clac.c0: 62.11-62.25)"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 33 2E 31 35 2D 36 33 2E 32 31 29 00  # "countS (clac.c0: 63.15-63.21)"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 35 2E 35 2D 36 35 2E 31 39 29 00  # "countS (clac.c0: 65.5-65.19)"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 37 2E 31 31 2D 36 37 2E 32 38 29 00  # "countS (clac.c0: 67.11-67.28)"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 38 2E 31 35 2D 36 38 2E 32 34 29 00  # "countS (clac.c0: 68.15-68.24)"
63 6F 75 6E 74 53 20 28 63 6C 61 63 2E 63 30 3A 20 36 39 2E 35 2D 36 39 2E 31 36 29 00  # "countS (clac.c0: 69.5-69.16)"
63 6C 61 63 2E 63 30 3A 20 37 35 2E 34 2D 37 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 75.4-75.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 37 37 2E 31 38 2D 37 37 2E 32 39 29 00  # "picknS (clac.c0: 77.18-77.29)"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 38 31 2E 31 31 2D 38 31 2E 32 35 29 00  # "picknS (clac.c0: 81.11-81.25)"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 38 32 2E 31 35 2D 38 32 2E 32 31 29 00  # "picknS (clac.c0: 82.15-82.21)"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 38 34 2E 35 2D 38 34 2E 31 39 29 00  # "picknS (clac.c0: 84.5-84.19)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 39 33 2E 31 31 2D 39 33 2E 32 38 29 00  # "picknS (clac.c0: 93.11-93.28)"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 39 34 2E 31 35 2D 39 34 2E 32 34 29 00  # "picknS (clac.c0: 94.15-94.24)"
70 69 63 6B 6E 53 20 28 63 6C 61 63 2E 63 30 3A 20 39 35 2E 35 2D 39 35 2E 31 36 29 00  # "picknS (clac.c0: 95.5-95.16)"
63 6C 61 63 2E 63 30 3A 20 31 30 31 2E 34 2D 31 30 31 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 101.4-101.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 68 65 63 6B 73 63 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 34 2E 31 31 2D 31 30 34 2E 32 35 29 00  # "checksc (clac.c0: 104.11-104.25)"
63 68 65 63 6B 73 63 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 35 2E 31 38 2D 31 30 35 2E 32 34 29 00  # "checksc (clac.c0: 105.18-105.24)"
3B 00  # ";"
63 68 65 63 6B 73 63 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 36 2E 39 2D 31 30 36 2E 33 30 29 00  # "checksc (clac.c0: 106.9-106.30)"
69 6E 69 74 5F 73 74 61 74 65 20 28 63 6C 61 63 2E 63 30 3A 20 31 33 34 2E 31 34 2D 31 33 34 2E 32 34 29 00  # "init_state (clac.c0: 134.14-134.24)"
69 6E 69 74 5F 73 74 61 74 65 20 28 63 6C 61 63 2E 63 30 3A 20 31 33 35 2E 31 39 2D 31 33 35 2E 33 31 29 00  # "init_state (clac.c0: 135.19-135.31)"
63 6C 61 63 2E 63 30 3A 20 31 33 31 2E 34 2D 31 33 31 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0: 131.4-131.28: @ensures annotation failed"
63 6C 61 63 2E 63 30 3A 20 31 34 35 2E 34 2D 31 34 35 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 145.4-145.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 35 32 2E 31 31 2D 31 35 32 2E 32 35 29 00  # "eval (clac.c0: 152.11-152.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 35 32 2E 33 30 2D 31 35 32 2E 35 37 29 00  # "eval (clac.c0: 152.30-152.57)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 30 2E 39 2D 31 36 30 2E 32 33 29 00  # "eval (clac.c0: 160.9-160.23)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 32 2E 31 31 2D 31 36 32 2E 33 30 29 00  # "eval (clac.c0: 162.11-162.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 34 2E 32 30 2D 31 36 34 2E 32 36 29 00  # "eval (clac.c0: 164.20-164.26)"
3A 00  # ":"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 35 2E 31 31 2D 31 36 35 2E 33 32 29 00  # "eval (clac.c0: 165.11-165.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 36 2E 32 32 2D 31 36 36 2E 34 35 29 00  # "eval (clac.c0: 166.22-166.45)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 36 2E 31 34 2D 31 36 36 2E 34 36 29 00  # "eval (clac.c0: 166.14-166.46)"
6E 6F 74 20 63 6C 6F 73 65 64 00  # "not closed"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 39 2E 32 33 2D 31 36 39 2E 32 39 29 00  # "eval (clac.c0: 169.23-169.29)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 33 2E 31 38 2D 31 37 33 2E 33 37 29 00  # "eval (clac.c0: 173.18-173.37)"
2B 00  # "+"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 35 2E 32 37 2D 31 37 35 2E 34 39 29 00  # "eval (clac.c0: 175.27-175.49)"
2D 00  # "-"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 36 2E 31 33 2D 31 37 36 2E 33 35 29 00  # "eval (clac.c0: 176.13-176.35)"
2A 00  # "*"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 36 2E 33 39 2D 31 37 36 2E 36 31 29 00  # "eval (clac.c0: 176.39-176.61)"
2A 2A 00  # "**"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 37 2E 31 33 2D 31 37 37 2E 33 36 29 00  # "eval (clac.c0: 177.13-177.36)"
2F 00  # "/"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 37 2E 34 30 2D 31 37 37 2E 36 32 29 00  # "eval (clac.c0: 177.40-177.62)"
25 00  # "%"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 38 2E 31 33 2D 31 37 38 2E 33 35 29 00  # "eval (clac.c0: 178.13-178.35)"
3C 00  # "<"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 38 2E 33 39 2D 31 37 38 2E 36 31 29 00  # "eval (clac.c0: 178.39-178.61)"
64 72 6F 70 00  # "drop"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 39 2E 31 33 2D 31 37 39 2E 33 38 29 00  # "eval (clac.c0: 179.13-179.38)"
73 77 61 70 00  # "swap"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 39 2E 34 32 2D 31 37 39 2E 36 37 29 00  # "eval (clac.c0: 179.42-179.67)"
72 6F 74 00  # "rot"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 30 2E 31 33 2D 31 38 30 2E 33 37 29 00  # "eval (clac.c0: 180.13-180.37)"
69 66 00  # "if"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 30 2E 34 31 2D 31 38 30 2E 36 34 29 00  # "eval (clac.c0: 180.41-180.64)"
70 69 63 6B 00  # "pick"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 31 2E 31 33 2D 31 38 31 2E 33 38 29 00  # "eval (clac.c0: 181.13-181.38)"
73 6B 69 70 00  # "skip"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 31 2E 34 32 2D 31 38 31 2E 36 37 29 00  # "eval (clac.c0: 181.42-181.67)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 34 2E 32 34 2D 31 38 34 2E 33 30 29 00  # "eval (clac.c0: 184.24-184.30)"
3B 00  # ";"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 35 2E 31 39 2D 31 38 35 2E 34 30 29 00  # "eval (clac.c0: 185.19-185.40)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 36 2E 31 39 2D 31 38 36 2E 32 35 29 00  # "eval (clac.c0: 186.19-186.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 30 2E 32 36 2D 31 39 30 2E 33 37 29 00  # "eval (clac.c0: 190.26-190.37)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 31 2E 32 34 2D 31 39 31 2E 33 30 29 00  # "eval (clac.c0: 191.24-191.30)"
3B 00  # ";"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 32 2E 31 39 2D 31 39 32 2E 34 30 29 00  # "eval (clac.c0: 192.19-192.40)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 33 2E 31 33 2D 31 39 33 2E 32 36 29 00  # "eval (clac.c0: 193.13-193.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 34 2E 31 39 2D 31 39 34 2E 32 35 29 00  # "eval (clac.c0: 194.19-194.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 36 2E 31 31 2D 31 39 36 2E 34 32 29 00  # "eval (clac.c0: 196.11-196.42)"
70 72 69 6E 74 00  # "print"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 39 2E 31 38 2D 31 39 39 2E 34 34 29 00  # "eval (clac.c0: 199.18-199.44)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 30 2E 31 34 2D 32 30 30 2E 32 38 29 00  # "eval (clac.c0: 200.14-200.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 31 2E 31 39 2D 32 30 31 2E 32 35 29 00  # "eval (clac.c0: 201.19-201.25)"
00  # ""
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 32 2E 31 31 2D 32 30 32 2E 32 38 29 00  # "eval (clac.c0: 202.11-202.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 32 2E 31 31 2D 32 30 32 2E 32 38 29 00  # "eval (clac.c0: 202.11-202.28)"
0A 00  # "\n"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 32 2E 31 31 2D 32 30 32 2E 32 38 29 00  # "eval (clac.c0: 202.11-202.28)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
71 75 69 74 00  # "quit"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 36 2E 31 38 2D 32 30 36 2E 34 33 29 00  # "eval (clac.c0: 206.18-206.43)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 34 36 2E 32 34 2D 31 34 36 2E 34 33 29 00  # "eval (clac.c0: 146.24-146.43)"
63 6C 61 63 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0: 146.4-146.44: @ensures annotation failed"
2B 00  # "+"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 38 2E 31 38 2D 32 30 38 2E 33 39 29 00  # "eval (clac.c0: 208.18-208.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 39 2E 31 34 2D 32 30 39 2E 32 38 29 00  # "eval (clac.c0: 209.14-209.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 30 2E 31 39 2D 32 31 30 2E 32 35 29 00  # "eval (clac.c0: 210.19-210.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 31 2E 31 36 2D 32 31 31 2E 33 30 29 00  # "eval (clac.c0: 211.16-211.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 32 2E 32 31 2D 32 31 32 2E 32 37 29 00  # "eval (clac.c0: 212.21-212.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 33 2E 31 33 2D 32 31 33 2E 32 34 29 00  # "eval (clac.c0: 213.13-213.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 20 31 00  # "insufficient tokens 1"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 20 32 00  # "insufficient tokens 2"
2D 00  # "-"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 31 2E 31 38 2D 32 32 31 2E 33 39 29 00  # "eval (clac.c0: 221.18-221.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 34 2E 31 34 2D 32 32 34 2E 32 38 29 00  # "eval (clac.c0: 224.14-224.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 35 2E 31 39 2D 32 32 35 2E 32 35 29 00  # "eval (clac.c0: 225.19-225.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 36 2E 31 36 2D 32 32 36 2E 33 30 29 00  # "eval (clac.c0: 226.16-226.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 37 2E 32 31 2D 32 32 37 2E 32 37 29 00  # "eval (clac.c0: 227.21-227.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 38 2E 31 33 2D 32 32 38 2E 32 34 29 00  # "eval (clac.c0: 228.13-228.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 35 2E 39 2D 32 33 35 2E 32 33 29 00  # "eval (clac.c0: 235.9-235.23)"
2A 00  # "*"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 36 2E 31 38 2D 32 33 36 2E 33 39 29 00  # "eval (clac.c0: 236.18-236.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 37 2E 31 34 2D 32 33 37 2E 32 38 29 00  # "eval (clac.c0: 237.14-237.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 38 2E 31 39 2D 32 33 38 2E 32 35 29 00  # "eval (clac.c0: 238.19-238.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 39 2E 31 36 2D 32 33 39 2E 33 30 29 00  # "eval (clac.c0: 239.16-239.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 30 2E 32 31 2D 32 34 30 2E 32 37 29 00  # "eval (clac.c0: 240.21-240.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 31 2E 31 33 2D 32 34 31 2E 32 34 29 00  # "eval (clac.c0: 241.13-241.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
2A 2A 00  # "**"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 38 2E 31 38 2D 32 34 38 2E 34 30 29 00  # "eval (clac.c0: 248.18-248.40)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 39 2E 31 34 2D 32 34 39 2E 32 38 29 00  # "eval (clac.c0: 249.14-249.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 30 2E 31 39 2D 32 35 30 2E 32 35 29 00  # "eval (clac.c0: 250.19-250.25)"
6E 65 67 61 74 69 76 65 20 63 6F 6D 70 6F 6E 65 6E 74 00  # "negative component"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 34 2E 31 36 2D 32 35 34 2E 33 30 29 00  # "eval (clac.c0: 254.16-254.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 35 2E 32 31 2D 32 35 35 2E 32 37 29 00  # "eval (clac.c0: 255.21-255.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 36 2E 32 30 2D 32 35 36 2E 32 38 29 00  # "eval (clac.c0: 256.20-256.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 36 2E 31 33 2D 32 35 36 2E 32 39 29 00  # "eval (clac.c0: 256.13-256.29)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
2F 00  # "/"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 33 2E 31 38 2D 32 36 33 2E 33 39 29 00  # "eval (clac.c0: 263.18-263.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 34 2E 31 34 2D 32 36 34 2E 32 38 29 00  # "eval (clac.c0: 264.14-264.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 35 2E 31 39 2D 32 36 35 2E 32 35 29 00  # "eval (clac.c0: 265.19-265.25)"
69 6E 76 61 6C 69 64 20 74 6F 6B 65 6E 00  # "invalid token"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 39 2E 31 36 2D 32 36 39 2E 33 30 29 00  # "eval (clac.c0: 269.16-269.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 37 30 2E 32 31 2D 32 37 30 2E 32 37 29 00  # "eval (clac.c0: 270.21-270.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 37 31 2E 32 32 2D 32 37 31 2E 33 31 29 00  # "eval (clac.c0: 271.22-271.31)"
61 72 69 74 68 6D 61 74 69 63 20 65 72 72 6F 72 00  # "arithmatic error"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 37 34 2E 31 33 2D 32 37 34 2E 32 34 29 00  # "eval (clac.c0: 274.13-274.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
25 00  # "%"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 31 2E 31 38 2D 32 38 31 2E 33 39 29 00  # "eval (clac.c0: 281.18-281.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 32 2E 31 34 2D 32 38 32 2E 32 38 29 00  # "eval (clac.c0: 282.14-282.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 33 2E 31 39 2D 32 38 33 2E 32 35 29 00  # "eval (clac.c0: 283.19-283.25)"
69 6E 76 61 6C 69 64 20 74 6F 6B 65 6E 00  # "invalid token"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 37 2E 31 36 2D 32 38 37 2E 33 30 29 00  # "eval (clac.c0: 287.16-287.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 38 2E 32 31 2D 32 38 38 2E 32 37 29 00  # "eval (clac.c0: 288.21-288.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 39 2E 32 32 2D 32 38 39 2E 33 31 29 00  # "eval (clac.c0: 289.22-289.31)"
61 72 69 74 68 6D 61 74 69 63 20 65 72 72 6F 72 00  # "arithmatic error"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 32 2E 31 33 2D 32 39 32 2E 32 34 29 00  # "eval (clac.c0: 292.13-292.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
3C 00  # "<"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 39 2E 31 38 2D 32 39 39 2E 33 39 29 00  # "eval (clac.c0: 299.18-299.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 30 2E 31 34 2D 33 30 30 2E 32 38 29 00  # "eval (clac.c0: 300.14-300.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 31 2E 31 39 2D 33 30 31 2E 32 35 29 00  # "eval (clac.c0: 301.19-301.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 32 2E 31 36 2D 33 30 32 2E 33 30 29 00  # "eval (clac.c0: 302.16-302.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 33 2E 32 31 2D 33 30 33 2E 32 37 29 00  # "eval (clac.c0: 303.21-303.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 35 2E 31 35 2D 33 30 35 2E 32 34 29 00  # "eval (clac.c0: 305.15-305.24)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 37 2E 31 35 2D 33 30 37 2E 32 34 29 00  # "eval (clac.c0: 307.15-307.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
64 72 6F 70 00  # "drop"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 35 2E 31 38 2D 33 31 35 2E 34 32 29 00  # "eval (clac.c0: 315.18-315.42)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 36 2E 31 34 2D 33 31 36 2E 32 38 29 00  # "eval (clac.c0: 316.14-316.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 37 2E 31 31 2D 33 31 37 2E 31 37 29 00  # "eval (clac.c0: 317.11-317.17)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
73 77 61 70 00  # "swap"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 31 2E 31 38 2D 33 32 31 2E 34 32 29 00  # "eval (clac.c0: 321.18-321.42)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 32 2E 31 34 2D 33 32 32 2E 32 38 29 00  # "eval (clac.c0: 322.14-322.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 33 2E 31 39 2D 33 32 33 2E 32 35 29 00  # "eval (clac.c0: 323.19-323.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 34 2E 31 36 2D 33 32 34 2E 33 30 29 00  # "eval (clac.c0: 324.16-324.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 35 2E 32 31 2D 33 32 35 2E 32 37 29 00  # "eval (clac.c0: 325.21-325.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 36 2E 31 33 2D 33 32 36 2E 32 32 29 00  # "eval (clac.c0: 326.13-326.22)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 37 2E 31 33 2D 33 32 37 2E 32 32 29 00  # "eval (clac.c0: 327.13-327.22)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
72 6F 74 00  # "rot"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 33 34 2E 31 38 2D 33 33 34 2E 34 31 29 00  # "eval (clac.c0: 334.18-334.41)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 33 35 2E 31 34 2D 33 33 35 2E 32 38 29 00  # "eval (clac.c0: 335.14-335.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 33 36 2E 31 39 2D 33 33 36 2E 32 35 29 00  # "eval (clac.c0: 336.19-336.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 33 37 2E 31 36 2D 33 33 37 2E 33 30 29 00  # "eval (clac.c0: 337.16-337.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 33 38 2E 32 31 2D 33 33 38 2E 32 37 29 00  # "eval (clac.c0: 338.21-338.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 33 39 2E 31 38 2D 33 33 39 2E 33 32 29 00  # "eval (clac.c0: 339.18-339.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 30 2E 32 33 2D 33 34 30 2E 32 39 29 00  # "eval (clac.c0: 340.23-340.29)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 31 2E 31 35 2D 33 34 31 2E 32 34 29 00  # "eval (clac.c0: 341.15-341.24)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 32 2E 31 35 2D 33 34 32 2E 32 34 29 00  # "eval (clac.c0: 342.15-342.24)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 33 2E 31 35 2D 33 34 33 2E 32 34 29 00  # "eval (clac.c0: 343.15-343.24)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 66 00  # "if"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 33 2E 31 38 2D 33 35 33 2E 34 30 29 00  # "eval (clac.c0: 353.18-353.40)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 34 2E 31 34 2D 33 35 34 2E 32 38 29 00  # "eval (clac.c0: 354.14-354.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 35 2E 31 39 2D 33 35 35 2E 32 35 29 00  # "eval (clac.c0: 355.19-355.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 31 2E 31 38 2D 33 36 31 2E 33 32 29 00  # "eval (clac.c0: 361.18-361.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 32 2E 31 35 2D 33 36 32 2E 32 31 29 00  # "eval (clac.c0: 362.15-362.21)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 37 2E 31 38 2D 33 36 37 2E 33 32 29 00  # "eval (clac.c0: 367.18-367.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 38 2E 31 35 2D 33 36 38 2E 32 31 29 00  # "eval (clac.c0: 368.15-368.21)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 37 32 2E 31 38 2D 33 37 32 2E 33 32 29 00  # "eval (clac.c0: 372.18-372.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 37 33 2E 31 35 2D 33 37 33 2E 32 31 29 00  # "eval (clac.c0: 373.15-373.21)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
70 69 63 6B 00  # "pick"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 38 32 2E 31 38 2D 33 38 32 2E 34 32 29 00  # "eval (clac.c0: 382.18-382.42)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 38 33 2E 31 34 2D 33 38 33 2E 32 38 29 00  # "eval (clac.c0: 383.14-383.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 38 34 2E 31 39 2D 33 38 34 2E 32 35 29 00  # "eval (clac.c0: 384.19-384.25)"
69 6E 76 61 6C 69 64 20 70 69 63 6B 00  # "invalid pick"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 39 32 2E 32 31 2D 33 39 32 2E 33 32 29 00  # "eval (clac.c0: 392.21-392.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 39 33 2E 31 31 2D 33 39 33 2E 32 32 29 00  # "eval (clac.c0: 393.11-393.22)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
73 6B 69 70 00  # "skip"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 39 37 2E 31 38 2D 33 39 37 2E 34 32 29 00  # "eval (clac.c0: 397.18-397.42)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 39 38 2E 31 34 2D 33 39 38 2E 32 38 29 00  # "eval (clac.c0: 398.14-398.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 39 39 2E 31 39 2D 33 39 39 2E 32 35 29 00  # "eval (clac.c0: 399.19-399.25)"
69 6E 76 61 6C 69 64 20 73 6B 69 70 00  # "invalid skip"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 30 35 2E 31 38 2D 34 30 35 2E 33 32 29 00  # "eval (clac.c0: 405.18-405.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 30 36 2E 31 35 2D 34 30 36 2E 32 31 29 00  # "eval (clac.c0: 406.15-406.21)"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
69 6E 73 75 66 66 69 63 69 65 6E 74 20 74 6F 6B 65 6E 73 00  # "insufficient tokens"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 31 36 2E 31 38 2D 34 31 36 2E 34 33 29 00  # "eval (clac.c0: 416.18-416.43)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 31 37 2E 32 34 2D 34 31 37 2E 34 39 29 00  # "eval (clac.c0: 417.24-417.49)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 31 39 2E 32 34 2D 34 31 39 2E 35 30 29 00  # "eval (clac.c0: 419.24-419.50)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 32 31 2E 39 2D 34 32 31 2E 33 31 29 00  # "eval (clac.c0: 421.9-421.31)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 32 38 2E 31 38 2D 34 32 38 2E 33 36 29 00  # "eval (clac.c0: 428.18-428.36)"
75 6E 64 65 66 69 6E 65 64 20 74 6F 6B 65 6E 20 00  # "undefined token "
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 33 31 2E 31 37 2D 34 33 31 2E 35 33 29 00  # "eval (clac.c0: 431.17-431.53)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 34 33 33 2E 39 2D 34 33 33 2E 32 30 29 00  # "eval (clac.c0: 433.9-433.20)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 34 36 2E 32 34 2D 31 34 36 2E 34 33 29 00  # "eval (clac.c0: 146.24-146.43)"
63 6C 61 63 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0: 146.4-146.44: @ensures annotation failed"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 5F 5F 31 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 33 36 2E 31 2D 33 37 2E 33 35 29 00  # "stack_from_string__1 (clac-test.c0: 36.1-37.35)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 33 37 2E 36 2D 33 37 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac-test.c0: 37.6-37.30: @ensures annotation failed"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 34 31 2E 36 2D 34 31 2E 34 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac-test.c0: 41.6-41.40: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 73 5F 65 71 5F 5F 31 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 34 30 2E 31 2D 34 31 2E 34 35 29 00  # "stacks_eq__1 (clac-test.c0: 40.1-41.45)"
74 65 73 74 5F 70 72 6F 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 35 30 2E 31 35 2D 35 30 2E 32 36 29 00  # "test_prog (clac-test.c0: 50.15-50.26)"
74 65 73 74 5F 70 72 6F 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 35 31 2E 33 2D 35 31 2E 33 32 29 00  # "test_prog (clac-test.c0: 51.3-51.32)"
74 65 73 74 5F 70 72 6F 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 35 32 2E 31 36 2D 35 32 2E 34 38 29 00  # "test_prog (clac-test.c0: 52.16-52.48)"
74 65 73 74 5F 70 72 6F 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 35 33 2E 31 36 2D 35 33 2E 34 36 29 00  # "test_prog (clac-test.c0: 53.16-53.46)"
74 65 73 74 5F 70 72 6F 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 35 35 2E 31 37 2D 35 35 2E 33 32 29 00  # "test_prog (clac-test.c0: 55.17-55.32)"
74 65 73 74 5F 70 72 6F 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 35 37 2E 31 30 2D 35 37 2E 32 37 29 00  # "test_prog (clac-test.c0: 57.10-57.27)"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 31 2E 31 37 2D 36 31 2E 32 39 29 00  # "main (clac-test.c0: 61.17-61.29)"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 32 2E 31 36 2D 36 32 2E 32 38 29 00  # "main (clac-test.c0: 62.16-62.28)"
31 20 32 20 33 20 34 00  # "1 2 3 4"
00  # ""
31 20 32 20 33 20 34 00  # "1 2 3 4"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 36 2E 31 32 2D 36 36 2E 37 36 29 00  # "main (clac-test.c0: 66.12-66.76)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 36 2E 35 2D 36 36 2E 37 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 66.5-66.78: assert failed"
33 20 34 00  # "3 4"
31 20 32 00  # "1 2"
31 20 32 20 33 20 34 00  # "1 2 3 4"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 37 2E 31 32 2D 36 37 2E 37 36 29 00  # "main (clac-test.c0: 67.12-67.76)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 37 2E 35 2D 36 37 2E 37 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 67.5-67.78: assert failed"
31 20 32 20 70 72 69 6E 74 20 33 20 34 20 70 72 69 6E 74 20 35 20 36 00  # "1 2 print 3 4 print 5 6"
00  # ""
31 20 33 20 35 20 36 00  # "1 3 5 6"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 38 2E 31 32 2D 36 38 2E 37 36 29 00  # "main (clac-test.c0: 68.12-68.76)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 38 2E 35 2D 36 38 2E 37 38 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 68.5-68.78: assert failed"
71 75 69 74 00  # "quit"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 39 2E 31 32 2D 36 39 2E 37 37 29 00  # "main (clac-test.c0: 69.12-69.77)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 36 39 2E 35 2D 36 39 2E 37 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 69.5-69.79: assert failed"
31 20 32 20 71 75 69 74 20 33 20 34 00  # "1 2 quit 3 4"
30 00  # "0"
30 20 31 20 32 00  # "0 1 2"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 30 2E 31 32 2D 37 30 2E 37 37 29 00  # "main (clac-test.c0: 70.12-70.77)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 30 2E 35 2D 37 30 2E 37 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 70.5-70.79: assert failed"
31 20 32 20 2B 00  # "1 2 +"
00  # ""
33 00  # "3"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 31 2E 31 32 2D 37 31 2E 34 39 29 00  # "main (clac-test.c0: 71.12-71.49)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 31 2E 35 2D 37 31 2E 35 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 71.5-71.51: assert failed"
31 20 32 20 2D 00  # "1 2 -"
00  # ""
2D 31 00  # "-1"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 32 2E 31 32 2D 37 32 2E 35 30 29 00  # "main (clac-test.c0: 72.12-72.50)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 32 2E 35 2D 37 32 2E 35 32 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 72.5-72.52: assert failed"
32 20 34 20 2A 00  # "2 4 *"
00  # ""
38 00  # "8"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 33 2E 31 32 2D 37 33 2E 34 39 29 00  # "main (clac-test.c0: 73.12-73.49)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 33 2E 35 2D 37 33 2E 35 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 73.5-73.51: assert failed"
31 20 32 20 2F 00  # "1 2 /"
00  # ""
30 00  # "0"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 34 2E 31 32 2D 37 34 2E 34 39 29 00  # "main (clac-test.c0: 74.12-74.49)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 34 2E 35 2D 37 34 2E 35 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 74.5-74.51: assert failed"
31 20 32 20 25 00  # "1 2 %"
00  # ""
31 00  # "1"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 35 2E 31 32 2D 37 35 2E 34 39 29 00  # "main (clac-test.c0: 75.12-75.49)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 35 2E 35 2D 37 35 2E 35 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 75.5-75.51: assert failed"
32 20 34 20 2A 2A 00  # "2 4 **"
00  # ""
31 36 00  # "16"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 36 2E 31 32 2D 37 36 2E 35 31 29 00  # "main (clac-test.c0: 76.12-76.51)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 36 2E 35 2D 37 36 2E 35 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 76.5-76.53: assert failed"
31 20 32 20 33 20 33 20 70 69 63 6B 00  # "1 2 3 3 pick"
00  # ""
31 20 32 20 33 20 31 00  # "1 2 3 1"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 37 2E 31 32 2D 37 37 2E 36 32 29 00  # "main (clac-test.c0: 77.12-77.62)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 37 2E 35 2D 37 37 2E 36 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 77.5-77.64: assert failed"
2D 31 20 64 72 6F 70 00  # "-1 drop"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 38 2E 31 32 2D 37 38 2E 35 30 29 00  # "main (clac-test.c0: 78.12-78.50)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 38 2E 35 2D 37 38 2E 35 32 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 78.5-78.52: assert failed"
35 20 31 20 64 72 6F 70 00  # "5 1 drop"
00  # ""
35 00  # "5"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 39 2E 31 32 2D 37 39 2E 35 32 29 00  # "main (clac-test.c0: 79.12-79.52)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 37 39 2E 35 2D 37 39 2E 35 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 79.5-79.54: assert failed"
35 20 31 20 73 77 61 70 00  # "5 1 swap"
00  # ""
31 20 35 00  # "1 5"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 30 2E 31 32 2D 38 30 2E 35 34 29 00  # "main (clac-test.c0: 80.12-80.54)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 30 2E 35 2D 38 30 2E 35 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 80.5-80.56: assert failed"
32 20 33 20 35 20 31 20 73 77 61 70 00  # "2 3 5 1 swap"
00  # ""
32 20 33 20 31 20 35 00  # "2 3 1 5"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 31 2E 31 32 2D 38 31 2E 36 32 29 00  # "main (clac-test.c0: 81.12-81.62)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 36 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 81.5-81.64: assert failed"
32 20 33 20 35 20 31 20 72 6F 74 00  # "2 3 5 1 rot"
00  # ""
32 20 35 20 31 20 33 00  # "2 5 1 3"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 32 2E 31 32 2D 38 32 2E 36 31 29 00  # "main (clac-test.c0: 82.12-82.61)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 32 2E 35 2D 38 32 2E 36 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 82.5-82.63: assert failed"
31 20 69 66 00  # "1 if"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 33 2E 31 32 2D 38 33 2E 34 37 29 00  # "main (clac-test.c0: 83.12-83.47)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 33 2E 35 2D 38 33 2E 34 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 83.5-83.49: assert failed"
30 20 69 66 20 2B 20 2D 20 2F 00  # "0 if + - /"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 34 2E 31 32 2D 38 34 2E 35 33 29 00  # "main (clac-test.c0: 84.12-84.53)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 34 2E 35 2D 38 34 2E 35 35 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 84.5-84.55: assert failed"
32 20 32 20 31 20 73 6B 69 70 20 2B 20 2D 00  # "2 2 1 skip + -"
00  # ""
30 00  # "0"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 35 2E 31 32 2D 38 35 2E 35 38 29 00  # "main (clac-test.c0: 85.12-85.58)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 35 2E 35 2D 38 35 2E 36 30 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 85.5-85.60: assert failed"
32 20 31 20 32 20 73 6B 69 70 20 2B 20 2D 00  # "2 1 2 skip + -"
00  # ""
32 20 31 00  # "2 1"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 36 2E 31 32 2D 38 36 2E 36 30 29 00  # "main (clac-test.c0: 86.12-86.60)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 36 2E 35 2D 38 36 2E 36 32 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 86.5-86.62: assert failed"
3A 20 34 20 31 20 31 20 2B 20 3B 20 34 00  # ": 4 1 1 + ; 4"
00  # ""
34 00  # "4"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 37 2E 31 32 2D 38 37 2E 35 37 29 00  # "main (clac-test.c0: 87.12-87.57)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 37 2E 35 2D 38 37 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 87.5-87.59: assert failed"
3A 20 2B 20 31 20 31 20 2B 20 3B 20 35 20 32 20 2B 00  # ": + 1 1 + ; 5 2 +"
00  # ""
37 00  # "7"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 38 2E 31 32 2D 38 38 2E 36 31 29 00  # "main (clac-test.c0: 88.12-88.61)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 38 2E 35 2D 38 38 2E 36 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 88.5-88.63: assert failed"
3A 20 6A 61 67 75 61 72 20 31 20 31 20 2B 20 3B 20 6A 61 67 75 61 72 00  # ": jaguar 1 1 + ; jaguar"
00  # ""
32 00  # "2"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 39 2E 31 32 2D 38 39 2E 36 37 29 00  # "main (clac-test.c0: 89.12-89.67)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 38 39 2E 35 2D 38 39 2E 36 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 89.5-89.69: assert failed"
3A 20 7A 65 62 72 61 20 37 20 32 20 2D 20 3B 20 7A 65 62 72 61 20 37 00  # ": zebra 7 2 - ; zebra 7"
00  # ""
35 20 37 00  # "5 7"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 30 2E 31 32 2D 39 30 2E 36 39 29 00  # "main (clac-test.c0: 90.12-90.69)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 30 2E 35 2D 39 30 2E 37 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 90.5-90.71: assert failed"
3A 20 7A 65 62 72 61 20 37 20 32 20 2D 20 3B 20 7A 65 62 72 61 20 35 00  # ": zebra 7 2 - ; zebra 5"
00  # ""
35 20 35 00  # "5 5"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 31 2E 31 32 2D 39 31 2E 36 39 29 00  # "main (clac-test.c0: 91.12-91.69)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 37 31 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 91.5-91.71: assert failed"
3A 20 7A 65 62 72 61 20 37 20 32 20 2D 20 3B 20 3A 20 6A 61 67 75 61 72 20 31 20 31 20 2B 20 3B 20 7A 65 62 72 61 20 35 20 2B 20 6A 61 67 75 61 72 00  # ": zebra 7 2 - ; : jaguar 1 1 + ; zebra 5 + jaguar"
00  # ""
31 30 20 32 00  # "10 2"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 32 2E 31 32 2D 39 33 2E 34 33 29 00  # "main (clac-test.c0: 92.12-93.43)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 32 2E 35 2D 39 33 2E 34 35 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "clac-test.c0: 92.5-93.45: assert failed"
41 6C 6C 20 74 65 73 74 73 20 70 61 73 73 65 64 21 0A 00  # "All tests passed!\n"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 39 34 2E 35 2D 39 34 2E 33 34 29 00  # "main (clac-test.c0: 94.5-94.34)"
65 72 72 31 00  # "err1"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 30 2E 39 2D 31 30 30 2E 33 34 29 00  # "main (clac-test.c0: 100.9-100.34)"
31 20 32 20 61 64 73 66 73 64 66 61 64 66 61 73 00  # "1 2 adsfsdfadfas"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 32 2E 37 2D 31 30 32 2E 35 34 29 00  # "main (clac-test.c0: 102.7-102.54)"
65 72 72 32 00  # "err2"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 33 2E 31 36 2D 31 30 33 2E 34 31 29 00  # "main (clac-test.c0: 103.16-103.41)"
31 20 32 20 31 32 30 30 30 30 32 30 31 30 32 30 31 32 31 30 31 32 39 39 39 30 30 30 00  # "1 2 120000201020121012999000"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 35 2E 37 2D 31 30 35 2E 36 36 29 00  # "main (clac-test.c0: 105.7-105.66)"
65 72 72 33 00  # "err3"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 36 2E 31 36 2D 31 30 36 2E 34 31 29 00  # "main (clac-test.c0: 106.16-106.41)"
31 20 32 20 70 72 69 6E 74 20 70 72 69 6E 74 20 70 72 69 6E 74 20 70 72 69 6E 74 20 70 72 69 6E 74 00  # "1 2 print print print print print"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 38 2E 37 2D 31 30 38 2E 37 31 29 00  # "main (clac-test.c0: 108.7-108.71)"
65 72 72 34 00  # "err4"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 30 39 2E 31 36 2D 31 30 39 2E 34 31 29 00  # "main (clac-test.c0: 109.16-109.41)"
70 72 69 6E 74 00  # "print"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 31 31 2E 37 2D 31 31 31 2E 34 33 29 00  # "main (clac-test.c0: 111.7-111.43)"
65 72 72 35 00  # "err5"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 31 32 2E 31 36 2D 31 31 32 2E 34 31 29 00  # "main (clac-test.c0: 112.16-112.41)"
31 20 32 20 70 69 63 6B 00  # "1 2 pick"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 31 34 2E 37 2D 31 31 34 2E 34 36 29 00  # "main (clac-test.c0: 114.7-114.46)"
65 72 72 36 00  # "err6"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 31 35 2E 31 36 2D 31 31 35 2E 34 31 29 00  # "main (clac-test.c0: 115.16-115.41)"
31 20 2D 31 20 70 69 63 6B 00  # "1 -1 pick"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 31 37 2E 37 2D 31 31 37 2E 34 37 29 00  # "main (clac-test.c0: 117.7-117.47)"
65 72 72 37 00  # "err7"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 31 38 2E 31 36 2D 31 31 38 2E 34 31 29 00  # "main (clac-test.c0: 118.16-118.41)"
64 72 6F 70 00  # "drop"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 30 2E 37 2D 31 32 30 2E 34 32 29 00  # "main (clac-test.c0: 120.7-120.42)"
65 72 72 38 00  # "err8"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 31 2E 31 36 2D 31 32 31 2E 34 31 29 00  # "main (clac-test.c0: 121.16-121.41)"
31 20 73 77 61 70 00  # "1 swap"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 33 2E 37 2D 31 32 33 2E 34 34 29 00  # "main (clac-test.c0: 123.7-123.44)"
65 72 72 39 00  # "err9"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 34 2E 31 36 2D 31 32 34 2E 34 31 29 00  # "main (clac-test.c0: 124.16-124.41)"
31 20 32 20 72 6F 74 00  # "1 2 rot"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 36 2E 37 2D 31 32 36 2E 34 35 29 00  # "main (clac-test.c0: 126.7-126.45)"
65 72 72 31 30 00  # "err10"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 37 2E 31 36 2D 31 32 37 2E 34 32 29 00  # "main (clac-test.c0: 127.16-127.42)"
31 20 30 20 69 66 20 2B 20 2D 20 2F 20 2A 00  # "1 0 if + - / *"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 32 39 2E 37 2D 31 32 39 2E 35 32 29 00  # "main (clac-test.c0: 129.7-129.52)"
65 72 72 31 31 00  # "err11"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 30 2E 31 36 2D 31 33 30 2E 34 32 29 00  # "main (clac-test.c0: 130.16-130.42)"
69 66 00  # "if"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 32 2E 37 2D 31 33 32 2E 34 30 29 00  # "main (clac-test.c0: 132.7-132.40)"
65 72 72 31 32 00  # "err12"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 33 2E 31 36 2D 31 33 33 2E 34 32 29 00  # "main (clac-test.c0: 133.16-133.42)"
31 20 30 20 69 66 20 2B 20 2D 20 2F 20 2A 20 2A 2A 00  # "1 0 if + - / * **"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 35 2E 37 2D 31 33 35 2E 35 35 29 00  # "main (clac-test.c0: 135.7-135.55)"
65 72 72 31 33 00  # "err13"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 36 2E 31 36 2D 31 33 36 2E 34 32 29 00  # "main (clac-test.c0: 136.16-136.42)"
32 20 33 20 73 6B 69 70 20 2B 20 2D 00  # "2 3 skip + -"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 38 2E 37 2D 31 33 38 2E 35 30 29 00  # "main (clac-test.c0: 138.7-138.50)"
65 72 72 31 34 00  # "err14"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 33 39 2E 31 36 2D 31 33 39 2E 34 32 29 00  # "main (clac-test.c0: 139.16-139.42)"
31 20 31 20 73 6B 69 70 20 2B 20 2D 20 2F 20 2A 20 2A 2A 00  # "1 1 skip + - / * **"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 34 31 2E 37 2D 31 34 31 2E 35 37 29 00  # "main (clac-test.c0: 141.7-141.57)"
65 72 72 31 35 00  # "err15"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 34 32 2E 31 36 2D 31 34 32 2E 34 32 29 00  # "main (clac-test.c0: 142.16-142.42)"
31 20 30 20 2F 00  # "1 0 /"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 34 34 2E 37 2D 31 34 34 2E 34 33 29 00  # "main (clac-test.c0: 144.7-144.43)"
65 72 72 31 36 00  # "err16"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 34 35 2E 31 36 2D 31 34 35 2E 34 32 29 00  # "main (clac-test.c0: 145.16-145.42)"
2D 32 31 34 37 34 38 33 36 34 38 20 2D 31 20 2F 00  # "-2147483648 -1 /"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 34 37 2E 37 2D 31 34 37 2E 35 34 29 00  # "main (clac-test.c0: 147.7-147.54)"
65 72 72 31 37 00  # "err17"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 34 38 2E 31 36 2D 31 34 38 2E 34 32 29 00  # "main (clac-test.c0: 148.16-148.42)"
31 20 30 20 25 00  # "1 0 %"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 35 30 2E 37 2D 31 35 30 2E 34 33 29 00  # "main (clac-test.c0: 150.7-150.43)"
65 72 72 31 38 00  # "err18"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 35 31 2E 31 36 2D 31 35 31 2E 34 32 29 00  # "main (clac-test.c0: 151.16-151.42)"
2D 32 31 34 37 34 38 33 36 34 38 20 2D 31 20 25 00  # "-2147483648 -1 %"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 35 33 2E 37 2D 31 35 33 2E 35 34 29 00  # "main (clac-test.c0: 153.7-153.54)"
65 72 72 31 39 00  # "err19"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 35 34 2E 31 36 2D 31 35 34 2E 34 32 29 00  # "main (clac-test.c0: 154.16-154.42)"
3A 20 64 75 70 20 31 20 70 69 63 6B 00  # ": dup 1 pick"
00  # ""
00  # ""
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 35 36 2E 37 2D 31 35 36 2E 35 30 29 00  # "main (clac-test.c0: 156.7-156.50)"
46 61 69 6C 65 64 20 74 65 73 74 3A 20 73 68 6F 75 6C 64 20 68 61 76 65 20 63 61 6C 6C 65 64 20 65 72 72 6F 72 28 29 21 0A 00  # "Failed test: should have called error()!\n"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 35 38 2E 35 2D 31 35 38 2E 35 37 29 00  # "main (clac-test.c0: 158.5-158.57)"
42 61 64 20 63 61 6C 6C 20 74 6F 20 74 68 65 20 74 65 73 74 69 6E 67 20 70 72 6F 67 72 61 6D 3A 20 77 72 6F 6E 67 20 6E 75 6D 62 65 72 20 6F 66 20 61 72 67 75 6D 65 6E 74 73 0A 00  # "Bad call to the testing program: wrong number of arguments\n"
6D 61 69 6E 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 36 32 2E 35 2D 31 36 32 2E 37 35 29 00  # "main (clac-test.c0: 162.5-162.75)"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 33 2E 31 35 2D 31 37 33 2E 32 36 29 00  # "stack_from_string (clac-test.c0: 173.15-173.26)"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 34 2E 33 2D 31 37 34 2E 32 31 29 00  # "stack_from_string (clac-test.c0: 174.3-174.21)"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 35 2E 31 35 2D 31 37 35 2E 32 36 29 00  # "stack_from_string (clac-test.c0: 175.15-175.26)"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 36 2E 31 31 2D 31 37 36 2E 32 35 29 00  # "stack_from_string (clac-test.c0: 176.11-176.25)"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 37 2E 32 34 2D 31 37 37 2E 33 30 29 00  # "stack_from_string (clac-test.c0: 177.24-177.30)"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 37 2E 31 34 2D 31 37 37 2E 33 35 29 00  # "stack_from_string (clac-test.c0: 177.14-177.35)"
42 61 64 20 74 65 73 74 3A 20 74 68 65 72 65 20 77 61 73 20 61 20 6E 6F 6E 2D 69 6E 74 65 67 65 72 20 6F 6E 20 74 68 65 20 71 75 65 75 65 00  # "Bad test: there was a non-integer on the queue"
73 74 61 63 6B 5F 66 72 6F 6D 5F 73 74 72 69 6E 67 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 39 2E 35 2D 31 37 39 2E 31 36 29 00  # "stack_from_string (clac-test.c0: 179.5-179.16)"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 37 31 2E 34 2D 31 37 31 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac-test.c0: 171.4-171.28: @ensures annotation failed"
63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 38 35 2E 34 2D 31 38 35 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac-test.c0: 185.4-185.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 73 5F 65 71 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 38 37 2E 31 31 2D 31 38 37 2E 32 36 29 00  # "stacks_eq (clac-test.c0: 187.11-187.26)"
73 74 61 63 6B 73 5F 65 71 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 38 38 2E 39 2D 31 38 38 2E 32 34 29 00  # "stacks_eq (clac-test.c0: 188.9-188.24)"
73 74 61 63 6B 73 5F 65 71 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 38 39 2E 39 2D 31 38 39 2E 31 36 29 00  # "stacks_eq (clac-test.c0: 189.9-189.16)"
73 74 61 63 6B 73 5F 65 71 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 38 39 2E 32 30 2D 31 38 39 2E 32 37 29 00  # "stacks_eq (clac-test.c0: 189.20-189.27)"
73 74 61 63 6B 73 5F 65 71 20 28 63 6C 61 63 2D 74 65 73 74 2E 63 30 3A 20 31 39 31 2E 31 30 2D 31 39 31 2E 32 35 29 00  # "stacks_eq (clac-test.c0: 191.10-191.25)"

00 79             # function count
# function_pool

#<main>
00                # number of arguments = 0
05                # number of local variables = 5
05 FE             # code length = 1534 bytes
14 79 01 # aldc 30977         # s[30977] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
14 79 11 # aldc 30993         # s[30993] = "main (clac-test.c0: 61.17-61.29)"
B8 00 5E # invokestatic 94    # args_parse__1("main (clac-test.c0: 61.17-61.29)")
36 02    # vstore 2           # args = args_parse__1("main (clac-test.c0: 61.17-61.29)");
14 79 32 # aldc 31026         # s[31026] = "main (clac-test.c0: 62.16-62.28)"
B8 00 72 # invokestatic 114   # init_state("main (clac-test.c0: 62.16-62.28)")
36 03    # vstore 3           # ST = init_state("main (clac-test.c0: 62.16-62.28)");
15 02    # vload 2            # args
62 00    # aaddf 0            # &args->argc
2E       # imload             # args->argc
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (args->argc == 0) goto <815:then>
A7 02 84 # goto +644          # goto <816:else>
# <815:then>
14 79 53 # aldc 31059         # s[31059] = "1 2 3 4"
15 03    # vload 3            # ST
14 79 5B # aldc 31067         # s[31067] = ""
14 79 5C # aldc 31068         # s[31068] = "1 2 3 4"
10 01    # bipush 1           # true
14 79 64 # aldc 31076         # s[31076] = "main (clac-test.c0: 66.12-66.76)"
B8 00 78 # invokestatic 120   # test_prog("1 2 3 4", ST, "", "1 2 3 4", true, "main (clac-test.c0: 66.12-66.76)")
14 79 85 # aldc 31109         # s[31109] = "clac-test.c0: 66.5-66.78: assert failed"
CF       # assert             # assert test_prog("1 2 3 4", ST, "", "1 2 3 4", true, "main (clac-test.c0: 66.12-66.76)") [failure message on stack]
14 79 AD # aldc 31149         # s[31149] = "3 4"
15 03    # vload 3            # ST
14 79 B1 # aldc 31153         # s[31153] = "1 2"
14 79 B5 # aldc 31157         # s[31157] = "1 2 3 4"
10 01    # bipush 1           # true
14 79 BD # aldc 31165         # s[31165] = "main (clac-test.c0: 67.12-67.76)"
B8 00 78 # invokestatic 120   # test_prog("3 4", ST, "1 2", "1 2 3 4", true, "main (clac-test.c0: 67.12-67.76)")
14 79 DE # aldc 31198         # s[31198] = "clac-test.c0: 67.5-67.78: assert failed"
CF       # assert             # assert test_prog("3 4", ST, "1 2", "1 2 3 4", true, "main (clac-test.c0: 67.12-67.76)") [failure message on stack]
14 7A 06 # aldc 31238         # s[31238] = "1 2 print 3 4 print 5 6"
15 03    # vload 3            # ST
14 7A 1E # aldc 31262         # s[31262] = ""
14 7A 1F # aldc 31263         # s[31263] = "1 3 5 6"
10 01    # bipush 1           # true
14 7A 27 # aldc 31271         # s[31271] = "main (clac-test.c0: 68.12-68.76)"
B8 00 78 # invokestatic 120   # test_prog("1 2 print 3 4 print 5 6", ST, "", "1 3 5 6", true, "main (clac-test.c0: 68.12-68.76)")
14 7A 48 # aldc 31304         # s[31304] = "clac-test.c0: 68.5-68.78: assert failed"
CF       # assert             # assert test_prog("1 2 print 3 4 print 5 6", ST, "", "1 3 5 6", true, "main (clac-test.c0: 68.12-68.76)") [failure message on stack]
14 7A 70 # aldc 31344         # s[31344] = "quit"
15 03    # vload 3            # ST
14 7A 75 # aldc 31349         # s[31349] = ""
14 7A 76 # aldc 31350         # s[31350] = ""
10 00    # bipush 0           # false
14 7A 77 # aldc 31351         # s[31351] = "main (clac-test.c0: 69.12-69.77)"
B8 00 78 # invokestatic 120   # test_prog("quit", ST, "", "", false, "main (clac-test.c0: 69.12-69.77)")
14 7A 98 # aldc 31384         # s[31384] = "clac-test.c0: 69.5-69.79: assert failed"
CF       # assert             # assert test_prog("quit", ST, "", "", false, "main (clac-test.c0: 69.12-69.77)") [failure message on stack]
14 7A C0 # aldc 31424         # s[31424] = "1 2 quit 3 4"
15 03    # vload 3            # ST
14 7A CD # aldc 31437         # s[31437] = "0"
14 7A CF # aldc 31439         # s[31439] = "0 1 2"
10 00    # bipush 0           # false
14 7A D5 # aldc 31445         # s[31445] = "main (clac-test.c0: 70.12-70.77)"
B8 00 78 # invokestatic 120   # test_prog("1 2 quit 3 4", ST, "0", "0 1 2", false, "main (clac-test.c0: 70.12-70.77)")
14 7A F6 # aldc 31478         # s[31478] = "clac-test.c0: 70.5-70.79: assert failed"
CF       # assert             # assert test_prog("1 2 quit 3 4", ST, "0", "0 1 2", false, "main (clac-test.c0: 70.12-70.77)") [failure message on stack]
14 7B 1E # aldc 31518         # s[31518] = "1 2 +"
15 03    # vload 3            # ST
14 7B 24 # aldc 31524         # s[31524] = ""
14 7B 25 # aldc 31525         # s[31525] = "3"
10 01    # bipush 1           # true
14 7B 27 # aldc 31527         # s[31527] = "main (clac-test.c0: 71.12-71.49)"
B8 00 78 # invokestatic 120   # test_prog("1 2 +", ST, "", "3", true, "main (clac-test.c0: 71.12-71.49)")
14 7B 48 # aldc 31560         # s[31560] = "clac-test.c0: 71.5-71.51: assert failed"
CF       # assert             # assert test_prog("1 2 +", ST, "", "3", true, "main (clac-test.c0: 71.12-71.49)") [failure message on stack]
14 7B 70 # aldc 31600         # s[31600] = "1 2 -"
15 03    # vload 3            # ST
14 7B 76 # aldc 31606         # s[31606] = ""
14 7B 77 # aldc 31607         # s[31607] = "-1"
10 01    # bipush 1           # true
14 7B 7A # aldc 31610         # s[31610] = "main (clac-test.c0: 72.12-72.50)"
B8 00 78 # invokestatic 120   # test_prog("1 2 -", ST, "", "-1", true, "main (clac-test.c0: 72.12-72.50)")
14 7B 9B # aldc 31643         # s[31643] = "clac-test.c0: 72.5-72.52: assert failed"
CF       # assert             # assert test_prog("1 2 -", ST, "", "-1", true, "main (clac-test.c0: 72.12-72.50)") [failure message on stack]
14 7B C3 # aldc 31683         # s[31683] = "2 4 *"
15 03    # vload 3            # ST
14 7B C9 # aldc 31689         # s[31689] = ""
14 7B CA # aldc 31690         # s[31690] = "8"
10 01    # bipush 1           # true
14 7B CC # aldc 31692         # s[31692] = "main (clac-test.c0: 73.12-73.49)"
B8 00 78 # invokestatic 120   # test_prog("2 4 *", ST, "", "8", true, "main (clac-test.c0: 73.12-73.49)")
14 7B ED # aldc 31725         # s[31725] = "clac-test.c0: 73.5-73.51: assert failed"
CF       # assert             # assert test_prog("2 4 *", ST, "", "8", true, "main (clac-test.c0: 73.12-73.49)") [failure message on stack]
14 7C 15 # aldc 31765         # s[31765] = "1 2 /"
15 03    # vload 3            # ST
14 7C 1B # aldc 31771         # s[31771] = ""
14 7C 1C # aldc 31772         # s[31772] = "0"
10 01    # bipush 1           # true
14 7C 1E # aldc 31774         # s[31774] = "main (clac-test.c0: 74.12-74.49)"
B8 00 78 # invokestatic 120   # test_prog("1 2 /", ST, "", "0", true, "main (clac-test.c0: 74.12-74.49)")
14 7C 3F # aldc 31807         # s[31807] = "clac-test.c0: 74.5-74.51: assert failed"
CF       # assert             # assert test_prog("1 2 /", ST, "", "0", true, "main (clac-test.c0: 74.12-74.49)") [failure message on stack]
14 7C 67 # aldc 31847         # s[31847] = "1 2 %"
15 03    # vload 3            # ST
14 7C 6D # aldc 31853         # s[31853] = ""
14 7C 6E # aldc 31854         # s[31854] = "1"
10 01    # bipush 1           # true
14 7C 70 # aldc 31856         # s[31856] = "main (clac-test.c0: 75.12-75.49)"
B8 00 78 # invokestatic 120   # test_prog("1 2 %", ST, "", "1", true, "main (clac-test.c0: 75.12-75.49)")
14 7C 91 # aldc 31889         # s[31889] = "clac-test.c0: 75.5-75.51: assert failed"
CF       # assert             # assert test_prog("1 2 %", ST, "", "1", true, "main (clac-test.c0: 75.12-75.49)") [failure message on stack]
14 7C B9 # aldc 31929         # s[31929] = "2 4 **"
15 03    # vload 3            # ST
14 7C C0 # aldc 31936         # s[31936] = ""
14 7C C1 # aldc 31937         # s[31937] = "16"
10 01    # bipush 1           # true
14 7C C4 # aldc 31940         # s[31940] = "main (clac-test.c0: 76.12-76.51)"
B8 00 78 # invokestatic 120   # test_prog("2 4 **", ST, "", "16", true, "main (clac-test.c0: 76.12-76.51)")
14 7C E5 # aldc 31973         # s[31973] = "clac-test.c0: 76.5-76.53: assert failed"
CF       # assert             # assert test_prog("2 4 **", ST, "", "16", true, "main (clac-test.c0: 76.12-76.51)") [failure message on stack]
14 7D 0D # aldc 32013         # s[32013] = "1 2 3 3 pick"
15 03    # vload 3            # ST
14 7D 1A # aldc 32026         # s[32026] = ""
14 7D 1B # aldc 32027         # s[32027] = "1 2 3 1"
10 01    # bipush 1           # true
14 7D 23 # aldc 32035         # s[32035] = "main (clac-test.c0: 77.12-77.62)"
B8 00 78 # invokestatic 120   # test_prog("1 2 3 3 pick", ST, "", "1 2 3 1", true, "main (clac-test.c0: 77.12-77.62)")
14 7D 44 # aldc 32068         # s[32068] = "clac-test.c0: 77.5-77.64: assert failed"
CF       # assert             # assert test_prog("1 2 3 3 pick", ST, "", "1 2 3 1", true, "main (clac-test.c0: 77.12-77.62)") [failure message on stack]
14 7D 6C # aldc 32108         # s[32108] = "-1 drop"
15 03    # vload 3            # ST
14 7D 74 # aldc 32116         # s[32116] = ""
14 7D 75 # aldc 32117         # s[32117] = ""
10 01    # bipush 1           # true
14 7D 76 # aldc 32118         # s[32118] = "main (clac-test.c0: 78.12-78.50)"
B8 00 78 # invokestatic 120   # test_prog("-1 drop", ST, "", "", true, "main (clac-test.c0: 78.12-78.50)")
14 7D 97 # aldc 32151         # s[32151] = "clac-test.c0: 78.5-78.52: assert failed"
CF       # assert             # assert test_prog("-1 drop", ST, "", "", true, "main (clac-test.c0: 78.12-78.50)") [failure message on stack]
14 7D BF # aldc 32191         # s[32191] = "5 1 drop"
15 03    # vload 3            # ST
14 7D C8 # aldc 32200         # s[32200] = ""
14 7D C9 # aldc 32201         # s[32201] = "5"
10 01    # bipush 1           # true
14 7D CB # aldc 32203         # s[32203] = "main (clac-test.c0: 79.12-79.52)"
B8 00 78 # invokestatic 120   # test_prog("5 1 drop", ST, "", "5", true, "main (clac-test.c0: 79.12-79.52)")
14 7D EC # aldc 32236         # s[32236] = "clac-test.c0: 79.5-79.54: assert failed"
CF       # assert             # assert test_prog("5 1 drop", ST, "", "5", true, "main (clac-test.c0: 79.12-79.52)") [failure message on stack]
14 7E 14 # aldc 32276         # s[32276] = "5 1 swap"
15 03    # vload 3            # ST
14 7E 1D # aldc 32285         # s[32285] = ""
14 7E 1E # aldc 32286         # s[32286] = "1 5"
10 01    # bipush 1           # true
14 7E 22 # aldc 32290         # s[32290] = "main (clac-test.c0: 80.12-80.54)"
B8 00 78 # invokestatic 120   # test_prog("5 1 swap", ST, "", "1 5", true, "main (clac-test.c0: 80.12-80.54)")
14 7E 43 # aldc 32323         # s[32323] = "clac-test.c0: 80.5-80.56: assert failed"
CF       # assert             # assert test_prog("5 1 swap", ST, "", "1 5", true, "main (clac-test.c0: 80.12-80.54)") [failure message on stack]
14 7E 6B # aldc 32363         # s[32363] = "2 3 5 1 swap"
15 03    # vload 3            # ST
14 7E 78 # aldc 32376         # s[32376] = ""
14 7E 79 # aldc 32377         # s[32377] = "2 3 1 5"
10 01    # bipush 1           # true
14 7E 81 # aldc 32385         # s[32385] = "main (clac-test.c0: 81.12-81.62)"
B8 00 78 # invokestatic 120   # test_prog("2 3 5 1 swap", ST, "", "2 3 1 5", true, "main (clac-test.c0: 81.12-81.62)")
14 7E A2 # aldc 32418         # s[32418] = "clac-test.c0: 81.5-81.64: assert failed"
CF       # assert             # assert test_prog("2 3 5 1 swap", ST, "", "2 3 1 5", true, "main (clac-test.c0: 81.12-81.62)") [failure message on stack]
14 7E CA # aldc 32458         # s[32458] = "2 3 5 1 rot"
15 03    # vload 3            # ST
14 7E D6 # aldc 32470         # s[32470] = ""
14 7E D7 # aldc 32471         # s[32471] = "2 5 1 3"
10 01    # bipush 1           # true
14 7E DF # aldc 32479         # s[32479] = "main (clac-test.c0: 82.12-82.61)"
B8 00 78 # invokestatic 120   # test_prog("2 3 5 1 rot", ST, "", "2 5 1 3", true, "main (clac-test.c0: 82.12-82.61)")
14 7F 00 # aldc 32512         # s[32512] = "clac-test.c0: 82.5-82.63: assert failed"
CF       # assert             # assert test_prog("2 3 5 1 rot", ST, "", "2 5 1 3", true, "main (clac-test.c0: 82.12-82.61)") [failure message on stack]
14 7F 28 # aldc 32552         # s[32552] = "1 if"
15 03    # vload 3            # ST
14 7F 2D # aldc 32557         # s[32557] = ""
14 7F 2E # aldc 32558         # s[32558] = ""
10 01    # bipush 1           # true
14 7F 2F # aldc 32559         # s[32559] = "main (clac-test.c0: 83.12-83.47)"
B8 00 78 # invokestatic 120   # test_prog("1 if", ST, "", "", true, "main (clac-test.c0: 83.12-83.47)")
14 7F 50 # aldc 32592         # s[32592] = "clac-test.c0: 83.5-83.49: assert failed"
CF       # assert             # assert test_prog("1 if", ST, "", "", true, "main (clac-test.c0: 83.12-83.47)") [failure message on stack]
14 7F 78 # aldc 32632         # s[32632] = "0 if + - /"
15 03    # vload 3            # ST
14 7F 83 # aldc 32643         # s[32643] = ""
14 7F 84 # aldc 32644         # s[32644] = ""
10 01    # bipush 1           # true
14 7F 85 # aldc 32645         # s[32645] = "main (clac-test.c0: 84.12-84.53)"
B8 00 78 # invokestatic 120   # test_prog("0 if + - /", ST, "", "", true, "main (clac-test.c0: 84.12-84.53)")
14 7F A6 # aldc 32678         # s[32678] = "clac-test.c0: 84.5-84.55: assert failed"
CF       # assert             # assert test_prog("0 if + - /", ST, "", "", true, "main (clac-test.c0: 84.12-84.53)") [failure message on stack]
14 7F CE # aldc 32718         # s[32718] = "2 2 1 skip + -"
15 03    # vload 3            # ST
14 7F DD # aldc 32733         # s[32733] = ""
14 7F DE # aldc 32734         # s[32734] = "0"
10 01    # bipush 1           # true
14 7F E0 # aldc 32736         # s[32736] = "main (clac-test.c0: 85.12-85.58)"
B8 00 78 # invokestatic 120   # test_prog("2 2 1 skip + -", ST, "", "0", true, "main (clac-test.c0: 85.12-85.58)")
14 80 01 # aldc 32769         # s[32769] = "clac-test.c0: 85.5-85.60: assert failed"
CF       # assert             # assert test_prog("2 2 1 skip + -", ST, "", "0", true, "main (clac-test.c0: 85.12-85.58)") [failure message on stack]
14 80 29 # aldc 32809         # s[32809] = "2 1 2 skip + -"
15 03    # vload 3            # ST
14 80 38 # aldc 32824         # s[32824] = ""
14 80 39 # aldc 32825         # s[32825] = "2 1"
10 01    # bipush 1           # true
14 80 3D # aldc 32829         # s[32829] = "main (clac-test.c0: 86.12-86.60)"
B8 00 78 # invokestatic 120   # test_prog("2 1 2 skip + -", ST, "", "2 1", true, "main (clac-test.c0: 86.12-86.60)")
14 80 5E # aldc 32862         # s[32862] = "clac-test.c0: 86.5-86.62: assert failed"
CF       # assert             # assert test_prog("2 1 2 skip + -", ST, "", "2 1", true, "main (clac-test.c0: 86.12-86.60)") [failure message on stack]
14 80 86 # aldc 32902         # s[32902] = ": 4 1 1 + ; 4"
15 03    # vload 3            # ST
14 80 94 # aldc 32916         # s[32916] = ""
14 80 95 # aldc 32917         # s[32917] = "4"
10 01    # bipush 1           # true
14 80 97 # aldc 32919         # s[32919] = "main (clac-test.c0: 87.12-87.57)"
B8 00 78 # invokestatic 120   # test_prog(": 4 1 1 + ; 4", ST, "", "4", true, "main (clac-test.c0: 87.12-87.57)")
14 80 B8 # aldc 32952         # s[32952] = "clac-test.c0: 87.5-87.59: assert failed"
CF       # assert             # assert test_prog(": 4 1 1 + ; 4", ST, "", "4", true, "main (clac-test.c0: 87.12-87.57)") [failure message on stack]
14 80 E0 # aldc 32992         # s[32992] = ": + 1 1 + ; 5 2 +"
15 03    # vload 3            # ST
14 80 F2 # aldc 33010         # s[33010] = ""
14 80 F3 # aldc 33011         # s[33011] = "7"
10 01    # bipush 1           # true
14 80 F5 # aldc 33013         # s[33013] = "main (clac-test.c0: 88.12-88.61)"
B8 00 78 # invokestatic 120   # test_prog(": + 1 1 + ; 5 2 +", ST, "", "7", true, "main (clac-test.c0: 88.12-88.61)")
14 81 16 # aldc 33046         # s[33046] = "clac-test.c0: 88.5-88.63: assert failed"
CF       # assert             # assert test_prog(": + 1 1 + ; 5 2 +", ST, "", "7", true, "main (clac-test.c0: 88.12-88.61)") [failure message on stack]
14 81 3E # aldc 33086         # s[33086] = ": jaguar 1 1 + ; jaguar"
15 03    # vload 3            # ST
14 81 56 # aldc 33110         # s[33110] = ""
14 81 57 # aldc 33111         # s[33111] = "2"
10 01    # bipush 1           # true
14 81 59 # aldc 33113         # s[33113] = "main (clac-test.c0: 89.12-89.67)"
B8 00 78 # invokestatic 120   # test_prog(": jaguar 1 1 + ; jaguar", ST, "", "2", true, "main (clac-test.c0: 89.12-89.67)")
14 81 7A # aldc 33146         # s[33146] = "clac-test.c0: 89.5-89.69: assert failed"
CF       # assert             # assert test_prog(": jaguar 1 1 + ; jaguar", ST, "", "2", true, "main (clac-test.c0: 89.12-89.67)") [failure message on stack]
14 81 A2 # aldc 33186         # s[33186] = ": zebra 7 2 - ; zebra 7"
15 03    # vload 3            # ST
14 81 BA # aldc 33210         # s[33210] = ""
14 81 BB # aldc 33211         # s[33211] = "5 7"
10 01    # bipush 1           # true
14 81 BF # aldc 33215         # s[33215] = "main (clac-test.c0: 90.12-90.69)"
B8 00 78 # invokestatic 120   # test_prog(": zebra 7 2 - ; zebra 7", ST, "", "5 7", true, "main (clac-test.c0: 90.12-90.69)")
14 81 E0 # aldc 33248         # s[33248] = "clac-test.c0: 90.5-90.71: assert failed"
CF       # assert             # assert test_prog(": zebra 7 2 - ; zebra 7", ST, "", "5 7", true, "main (clac-test.c0: 90.12-90.69)") [failure message on stack]
14 82 08 # aldc 33288         # s[33288] = ": zebra 7 2 - ; zebra 5"
15 03    # vload 3            # ST
14 82 20 # aldc 33312         # s[33312] = ""
14 82 21 # aldc 33313         # s[33313] = "5 5"
10 01    # bipush 1           # true
14 82 25 # aldc 33317         # s[33317] = "main (clac-test.c0: 91.12-91.69)"
B8 00 78 # invokestatic 120   # test_prog(": zebra 7 2 - ; zebra 5", ST, "", "5 5", true, "main (clac-test.c0: 91.12-91.69)")
14 82 46 # aldc 33350         # s[33350] = "clac-test.c0: 91.5-91.71: assert failed"
CF       # assert             # assert test_prog(": zebra 7 2 - ; zebra 5", ST, "", "5 5", true, "main (clac-test.c0: 91.12-91.69)") [failure message on stack]
14 82 6E # aldc 33390         # s[33390] = ": zebra 7 2 - ; : jaguar 1 1 + ; zebra 5 + jaguar"
15 03    # vload 3            # ST
14 82 A0 # aldc 33440         # s[33440] = ""
14 82 A1 # aldc 33441         # s[33441] = "10 2"
10 01    # bipush 1           # true
14 82 A6 # aldc 33446         # s[33446] = "main (clac-test.c0: 92.12-93.43)"
B8 00 78 # invokestatic 120   # test_prog(": zebra 7 2 - ; : jaguar 1 1 + ; zebra 5 + jaguar", ST, "", "10 2", true, "main (clac-test.c0: 92.12-93.43)")
14 82 C7 # aldc 33479         # s[33479] = "clac-test.c0: 92.5-93.45: assert failed"
CF       # assert             # assert test_prog(": zebra 7 2 - ; : jaguar 1 1 + ; zebra 5 + jaguar", ST, "", "10 2", true, "main (clac-test.c0: 92.12-93.43)") [failure message on stack]
14 82 EF # aldc 33519         # s[33519] = "All tests passed!\n"
14 83 02 # aldc 33538         # s[33538] = "main (clac-test.c0: 94.5-94.34)"
B8 00 01 # invokestatic 1     # print__1("All tests passed!\n", "main (clac-test.c0: 94.5-94.34)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 
A7 03 5E # goto +862          # goto <817:endif>
# <816:else>
15 02    # vload 2            # args
62 00    # aaddf 0            # &args->argc
2E       # imload             # args->argc
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (args->argc == 1) goto <818:then>
A7 03 40 # goto +832          # goto <819:else>
# <818:then>
15 02    # vload 2            # args
62 08    # aaddf 8            # &args->argv
2F       # amload             # args->argv
10 00    # bipush 0           # 0
63       # aadds              # &args->argv[0]
2F       # amload             # args->argv[0]
36 04    # vstore 4           # arg = args->argv[0];
15 04    # vload 4            # arg
14 83 22 # aldc 33570         # s[33570] = "err1"
14 83 27 # aldc 33575         # s[33575] = "main (clac-test.c0: 100.9-100.34)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err1", "main (clac-test.c0: 100.9-100.34)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err1", "main (clac-test.c0: 100.9-100.34)") == true) goto <821:then>
A7 00 1A # goto +26           # goto <822:else>
# <821:then>
14 83 49 # aldc 33609         # s[33609] = "1 2 adsfsdfadfas"
15 03    # vload 3            # ST
14 83 5A # aldc 33626         # s[33626] = ""
14 83 5B # aldc 33627         # s[33627] = ""
10 01    # bipush 1           # true
14 83 5C # aldc 33628         # s[33628] = "main (clac-test.c0: 102.7-102.54)"
B8 00 78 # invokestatic 120   # test_prog("1 2 adsfsdfadfas", ST, "", "", true, "main (clac-test.c0: 102.7-102.54)")
57       # pop                # (ignore result)
A7 02 F7 # goto +759          # goto <823:endif>
# <822:else>
15 04    # vload 4            # arg
14 83 7E # aldc 33662         # s[33662] = "err2"
14 83 83 # aldc 33667         # s[33667] = "main (clac-test.c0: 103.16-103.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err2", "main (clac-test.c0: 103.16-103.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err2", "main (clac-test.c0: 103.16-103.41)") == true) goto <824:then>
A7 00 1A # goto +26           # goto <825:else>
# <824:then>
14 83 A6 # aldc 33702         # s[33702] = "1 2 120000201020121012999000"
15 03    # vload 3            # ST
14 83 C3 # aldc 33731         # s[33731] = ""
14 83 C4 # aldc 33732         # s[33732] = ""
10 01    # bipush 1           # true
14 83 C5 # aldc 33733         # s[33733] = "main (clac-test.c0: 105.7-105.66)"
B8 00 78 # invokestatic 120   # test_prog("1 2 120000201020121012999000", ST, "", "", true, "main (clac-test.c0: 105.7-105.66)")
57       # pop                # (ignore result)
A7 02 CD # goto +717          # goto <826:endif>
# <825:else>
15 04    # vload 4            # arg
14 83 E7 # aldc 33767         # s[33767] = "err3"
14 83 EC # aldc 33772         # s[33772] = "main (clac-test.c0: 106.16-106.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err3", "main (clac-test.c0: 106.16-106.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err3", "main (clac-test.c0: 106.16-106.41)") == true) goto <827:then>
A7 00 1A # goto +26           # goto <828:else>
# <827:then>
14 84 0F # aldc 33807         # s[33807] = "1 2 print print print print print"
15 03    # vload 3            # ST
14 84 31 # aldc 33841         # s[33841] = ""
14 84 32 # aldc 33842         # s[33842] = ""
10 01    # bipush 1           # true
14 84 33 # aldc 33843         # s[33843] = "main (clac-test.c0: 108.7-108.71)"
B8 00 78 # invokestatic 120   # test_prog("1 2 print print print print print", ST, "", "", true, "main (clac-test.c0: 108.7-108.71)")
57       # pop                # (ignore result)
A7 02 A3 # goto +675          # goto <829:endif>
# <828:else>
15 04    # vload 4            # arg
14 84 55 # aldc 33877         # s[33877] = "err4"
14 84 5A # aldc 33882         # s[33882] = "main (clac-test.c0: 109.16-109.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err4", "main (clac-test.c0: 109.16-109.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err4", "main (clac-test.c0: 109.16-109.41)") == true) goto <830:then>
A7 00 1A # goto +26           # goto <831:else>
# <830:then>
14 84 7D # aldc 33917         # s[33917] = "print"
15 03    # vload 3            # ST
14 84 83 # aldc 33923         # s[33923] = ""
14 84 84 # aldc 33924         # s[33924] = ""
10 01    # bipush 1           # true
14 84 85 # aldc 33925         # s[33925] = "main (clac-test.c0: 111.7-111.43)"
B8 00 78 # invokestatic 120   # test_prog("print", ST, "", "", true, "main (clac-test.c0: 111.7-111.43)")
57       # pop                # (ignore result)
A7 02 79 # goto +633          # goto <832:endif>
# <831:else>
15 04    # vload 4            # arg
14 84 A7 # aldc 33959         # s[33959] = "err5"
14 84 AC # aldc 33964         # s[33964] = "main (clac-test.c0: 112.16-112.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err5", "main (clac-test.c0: 112.16-112.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err5", "main (clac-test.c0: 112.16-112.41)") == true) goto <833:then>
A7 00 1A # goto +26           # goto <834:else>
# <833:then>
14 84 CF # aldc 33999         # s[33999] = "1 2 pick"
15 03    # vload 3            # ST
14 84 D8 # aldc 34008         # s[34008] = ""
14 84 D9 # aldc 34009         # s[34009] = ""
10 01    # bipush 1           # true
14 84 DA # aldc 34010         # s[34010] = "main (clac-test.c0: 114.7-114.46)"
B8 00 78 # invokestatic 120   # test_prog("1 2 pick", ST, "", "", true, "main (clac-test.c0: 114.7-114.46)")
57       # pop                # (ignore result)
A7 02 4F # goto +591          # goto <835:endif>
# <834:else>
15 04    # vload 4            # arg
14 84 FC # aldc 34044         # s[34044] = "err6"
14 85 01 # aldc 34049         # s[34049] = "main (clac-test.c0: 115.16-115.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err6", "main (clac-test.c0: 115.16-115.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err6", "main (clac-test.c0: 115.16-115.41)") == true) goto <836:then>
A7 00 1A # goto +26           # goto <837:else>
# <836:then>
14 85 24 # aldc 34084         # s[34084] = "1 -1 pick"
15 03    # vload 3            # ST
14 85 2E # aldc 34094         # s[34094] = ""
14 85 2F # aldc 34095         # s[34095] = ""
10 01    # bipush 1           # true
14 85 30 # aldc 34096         # s[34096] = "main (clac-test.c0: 117.7-117.47)"
B8 00 78 # invokestatic 120   # test_prog("1 -1 pick", ST, "", "", true, "main (clac-test.c0: 117.7-117.47)")
57       # pop                # (ignore result)
A7 02 25 # goto +549          # goto <838:endif>
# <837:else>
15 04    # vload 4            # arg
14 85 52 # aldc 34130         # s[34130] = "err7"
14 85 57 # aldc 34135         # s[34135] = "main (clac-test.c0: 118.16-118.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err7", "main (clac-test.c0: 118.16-118.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err7", "main (clac-test.c0: 118.16-118.41)") == true) goto <839:then>
A7 00 1A # goto +26           # goto <840:else>
# <839:then>
14 85 7A # aldc 34170         # s[34170] = "drop"
15 03    # vload 3            # ST
14 85 7F # aldc 34175         # s[34175] = ""
14 85 80 # aldc 34176         # s[34176] = ""
10 01    # bipush 1           # true
14 85 81 # aldc 34177         # s[34177] = "main (clac-test.c0: 120.7-120.42)"
B8 00 78 # invokestatic 120   # test_prog("drop", ST, "", "", true, "main (clac-test.c0: 120.7-120.42)")
57       # pop                # (ignore result)
A7 01 FB # goto +507          # goto <841:endif>
# <840:else>
15 04    # vload 4            # arg
14 85 A3 # aldc 34211         # s[34211] = "err8"
14 85 A8 # aldc 34216         # s[34216] = "main (clac-test.c0: 121.16-121.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err8", "main (clac-test.c0: 121.16-121.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err8", "main (clac-test.c0: 121.16-121.41)") == true) goto <842:then>
A7 00 1A # goto +26           # goto <843:else>
# <842:then>
14 85 CB # aldc 34251         # s[34251] = "1 swap"
15 03    # vload 3            # ST
14 85 D2 # aldc 34258         # s[34258] = ""
14 85 D3 # aldc 34259         # s[34259] = ""
10 01    # bipush 1           # true
14 85 D4 # aldc 34260         # s[34260] = "main (clac-test.c0: 123.7-123.44)"
B8 00 78 # invokestatic 120   # test_prog("1 swap", ST, "", "", true, "main (clac-test.c0: 123.7-123.44)")
57       # pop                # (ignore result)
A7 01 D1 # goto +465          # goto <844:endif>
# <843:else>
15 04    # vload 4            # arg
14 85 F6 # aldc 34294         # s[34294] = "err9"
14 85 FB # aldc 34299         # s[34299] = "main (clac-test.c0: 124.16-124.41)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err9", "main (clac-test.c0: 124.16-124.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err9", "main (clac-test.c0: 124.16-124.41)") == true) goto <845:then>
A7 00 1A # goto +26           # goto <846:else>
# <845:then>
14 86 1E # aldc 34334         # s[34334] = "1 2 rot"
15 03    # vload 3            # ST
14 86 26 # aldc 34342         # s[34342] = ""
14 86 27 # aldc 34343         # s[34343] = ""
10 01    # bipush 1           # true
14 86 28 # aldc 34344         # s[34344] = "main (clac-test.c0: 126.7-126.45)"
B8 00 78 # invokestatic 120   # test_prog("1 2 rot", ST, "", "", true, "main (clac-test.c0: 126.7-126.45)")
57       # pop                # (ignore result)
A7 01 A7 # goto +423          # goto <847:endif>
# <846:else>
15 04    # vload 4            # arg
14 86 4A # aldc 34378         # s[34378] = "err10"
14 86 50 # aldc 34384         # s[34384] = "main (clac-test.c0: 127.16-127.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err10", "main (clac-test.c0: 127.16-127.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err10", "main (clac-test.c0: 127.16-127.42)") == true) goto <848:then>
A7 00 1A # goto +26           # goto <849:else>
# <848:then>
14 86 73 # aldc 34419         # s[34419] = "1 0 if + - / *"
15 03    # vload 3            # ST
14 86 82 # aldc 34434         # s[34434] = ""
14 86 83 # aldc 34435         # s[34435] = ""
10 01    # bipush 1           # true
14 86 84 # aldc 34436         # s[34436] = "main (clac-test.c0: 129.7-129.52)"
B8 00 78 # invokestatic 120   # test_prog("1 0 if + - / *", ST, "", "", true, "main (clac-test.c0: 129.7-129.52)")
57       # pop                # (ignore result)
A7 01 7D # goto +381          # goto <850:endif>
# <849:else>
15 04    # vload 4            # arg
14 86 A6 # aldc 34470         # s[34470] = "err11"
14 86 AC # aldc 34476         # s[34476] = "main (clac-test.c0: 130.16-130.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err11", "main (clac-test.c0: 130.16-130.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err11", "main (clac-test.c0: 130.16-130.42)") == true) goto <851:then>
A7 00 1A # goto +26           # goto <852:else>
# <851:then>
14 86 CF # aldc 34511         # s[34511] = "if"
15 03    # vload 3            # ST
14 86 D2 # aldc 34514         # s[34514] = ""
14 86 D3 # aldc 34515         # s[34515] = ""
10 01    # bipush 1           # true
14 86 D4 # aldc 34516         # s[34516] = "main (clac-test.c0: 132.7-132.40)"
B8 00 78 # invokestatic 120   # test_prog("if", ST, "", "", true, "main (clac-test.c0: 132.7-132.40)")
57       # pop                # (ignore result)
A7 01 53 # goto +339          # goto <853:endif>
# <852:else>
15 04    # vload 4            # arg
14 86 F6 # aldc 34550         # s[34550] = "err12"
14 86 FC # aldc 34556         # s[34556] = "main (clac-test.c0: 133.16-133.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err12", "main (clac-test.c0: 133.16-133.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err12", "main (clac-test.c0: 133.16-133.42)") == true) goto <854:then>
A7 00 1A # goto +26           # goto <855:else>
# <854:then>
14 87 1F # aldc 34591         # s[34591] = "1 0 if + - / * **"
15 03    # vload 3            # ST
14 87 31 # aldc 34609         # s[34609] = ""
14 87 32 # aldc 34610         # s[34610] = ""
10 01    # bipush 1           # true
14 87 33 # aldc 34611         # s[34611] = "main (clac-test.c0: 135.7-135.55)"
B8 00 78 # invokestatic 120   # test_prog("1 0 if + - / * **", ST, "", "", true, "main (clac-test.c0: 135.7-135.55)")
57       # pop                # (ignore result)
A7 01 29 # goto +297          # goto <856:endif>
# <855:else>
15 04    # vload 4            # arg
14 87 55 # aldc 34645         # s[34645] = "err13"
14 87 5B # aldc 34651         # s[34651] = "main (clac-test.c0: 136.16-136.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err13", "main (clac-test.c0: 136.16-136.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err13", "main (clac-test.c0: 136.16-136.42)") == true) goto <857:then>
A7 00 1A # goto +26           # goto <858:else>
# <857:then>
14 87 7E # aldc 34686         # s[34686] = "2 3 skip + -"
15 03    # vload 3            # ST
14 87 8B # aldc 34699         # s[34699] = ""
14 87 8C # aldc 34700         # s[34700] = ""
10 01    # bipush 1           # true
14 87 8D # aldc 34701         # s[34701] = "main (clac-test.c0: 138.7-138.50)"
B8 00 78 # invokestatic 120   # test_prog("2 3 skip + -", ST, "", "", true, "main (clac-test.c0: 138.7-138.50)")
57       # pop                # (ignore result)
A7 00 FF # goto +255          # goto <859:endif>
# <858:else>
15 04    # vload 4            # arg
14 87 AF # aldc 34735         # s[34735] = "err14"
14 87 B5 # aldc 34741         # s[34741] = "main (clac-test.c0: 139.16-139.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err14", "main (clac-test.c0: 139.16-139.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err14", "main (clac-test.c0: 139.16-139.42)") == true) goto <860:then>
A7 00 1A # goto +26           # goto <861:else>
# <860:then>
14 87 D8 # aldc 34776         # s[34776] = "1 1 skip + - / * **"
15 03    # vload 3            # ST
14 87 EC # aldc 34796         # s[34796] = ""
14 87 ED # aldc 34797         # s[34797] = ""
10 01    # bipush 1           # true
14 87 EE # aldc 34798         # s[34798] = "main (clac-test.c0: 141.7-141.57)"
B8 00 78 # invokestatic 120   # test_prog("1 1 skip + - / * **", ST, "", "", true, "main (clac-test.c0: 141.7-141.57)")
57       # pop                # (ignore result)
A7 00 D5 # goto +213          # goto <862:endif>
# <861:else>
15 04    # vload 4            # arg
14 88 10 # aldc 34832         # s[34832] = "err15"
14 88 16 # aldc 34838         # s[34838] = "main (clac-test.c0: 142.16-142.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err15", "main (clac-test.c0: 142.16-142.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err15", "main (clac-test.c0: 142.16-142.42)") == true) goto <863:then>
A7 00 1A # goto +26           # goto <864:else>
# <863:then>
14 88 39 # aldc 34873         # s[34873] = "1 0 /"
15 03    # vload 3            # ST
14 88 3F # aldc 34879         # s[34879] = ""
14 88 40 # aldc 34880         # s[34880] = ""
10 01    # bipush 1           # true
14 88 41 # aldc 34881         # s[34881] = "main (clac-test.c0: 144.7-144.43)"
B8 00 78 # invokestatic 120   # test_prog("1 0 /", ST, "", "", true, "main (clac-test.c0: 144.7-144.43)")
57       # pop                # (ignore result)
A7 00 AB # goto +171          # goto <865:endif>
# <864:else>
15 04    # vload 4            # arg
14 88 63 # aldc 34915         # s[34915] = "err16"
14 88 69 # aldc 34921         # s[34921] = "main (clac-test.c0: 145.16-145.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err16", "main (clac-test.c0: 145.16-145.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err16", "main (clac-test.c0: 145.16-145.42)") == true) goto <866:then>
A7 00 1A # goto +26           # goto <867:else>
# <866:then>
14 88 8C # aldc 34956         # s[34956] = "-2147483648 -1 /"
15 03    # vload 3            # ST
14 88 9D # aldc 34973         # s[34973] = ""
14 88 9E # aldc 34974         # s[34974] = ""
10 01    # bipush 1           # true
14 88 9F # aldc 34975         # s[34975] = "main (clac-test.c0: 147.7-147.54)"
B8 00 78 # invokestatic 120   # test_prog("-2147483648 -1 /", ST, "", "", true, "main (clac-test.c0: 147.7-147.54)")
57       # pop                # (ignore result)
A7 00 81 # goto +129          # goto <868:endif>
# <867:else>
15 04    # vload 4            # arg
14 88 C1 # aldc 35009         # s[35009] = "err17"
14 88 C7 # aldc 35015         # s[35015] = "main (clac-test.c0: 148.16-148.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err17", "main (clac-test.c0: 148.16-148.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err17", "main (clac-test.c0: 148.16-148.42)") == true) goto <869:then>
A7 00 1A # goto +26           # goto <870:else>
# <869:then>
14 88 EA # aldc 35050         # s[35050] = "1 0 %"
15 03    # vload 3            # ST
14 88 F0 # aldc 35056         # s[35056] = ""
14 88 F1 # aldc 35057         # s[35057] = ""
10 01    # bipush 1           # true
14 88 F2 # aldc 35058         # s[35058] = "main (clac-test.c0: 150.7-150.43)"
B8 00 78 # invokestatic 120   # test_prog("1 0 %", ST, "", "", true, "main (clac-test.c0: 150.7-150.43)")
57       # pop                # (ignore result)
A7 00 57 # goto +87           # goto <871:endif>
# <870:else>
15 04    # vload 4            # arg
14 89 14 # aldc 35092         # s[35092] = "err18"
14 89 1A # aldc 35098         # s[35098] = "main (clac-test.c0: 151.16-151.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err18", "main (clac-test.c0: 151.16-151.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err18", "main (clac-test.c0: 151.16-151.42)") == true) goto <872:then>
A7 00 1A # goto +26           # goto <873:else>
# <872:then>
14 89 3D # aldc 35133         # s[35133] = "-2147483648 -1 %"
15 03    # vload 3            # ST
14 89 4E # aldc 35150         # s[35150] = ""
14 89 4F # aldc 35151         # s[35151] = ""
10 01    # bipush 1           # true
14 89 50 # aldc 35152         # s[35152] = "main (clac-test.c0: 153.7-153.54)"
B8 00 78 # invokestatic 120   # test_prog("-2147483648 -1 %", ST, "", "", true, "main (clac-test.c0: 153.7-153.54)")
57       # pop                # (ignore result)
A7 00 2D # goto +45           # goto <874:endif>
# <873:else>
15 04    # vload 4            # arg
14 89 72 # aldc 35186         # s[35186] = "err19"
14 89 78 # aldc 35192         # s[35192] = "main (clac-test.c0: 154.16-154.42)"
B8 00 1D # invokestatic 29    # string_equal__1(arg, "err19", "main (clac-test.c0: 154.16-154.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(arg, "err19", "main (clac-test.c0: 154.16-154.42)") == true) goto <875:then>
A7 00 1A # goto +26           # goto <876:else>
# <875:then>
14 89 9B # aldc 35227         # s[35227] = ": dup 1 pick"
15 03    # vload 3            # ST
14 89 A8 # aldc 35240         # s[35240] = ""
14 89 A9 # aldc 35241         # s[35241] = ""
10 01    # bipush 1           # true
14 89 AA # aldc 35242         # s[35242] = "main (clac-test.c0: 156.7-156.50)"
B8 00 78 # invokestatic 120   # test_prog(": dup 1 pick", ST, "", "", true, "main (clac-test.c0: 156.7-156.50)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <877:endif>
# <876:else>
# <877:endif>
# <874:endif>
# <871:endif>
# <868:endif>
# <865:endif>
# <862:endif>
# <859:endif>
# <856:endif>
# <853:endif>
# <850:endif>
# <847:endif>
# <844:endif>
# <841:endif>
# <838:endif>
# <835:endif>
# <832:endif>
# <829:endif>
# <826:endif>
# <823:endif>
14 89 CC # aldc 35276         # s[35276] = "Failed test: should have called error()!\n"
14 89 F6 # aldc 35318         # s[35318] = "main (clac-test.c0: 158.5-158.57)"
B8 00 01 # invokestatic 1     # print__1("Failed test: should have called error()!\n", "main (clac-test.c0: 158.5-158.57)")
57       # pop                # (ignore result)
10 01    # bipush 1           # 1
36 01    # vstore 1           # _result = 1;
15 01    # vload 1            # _result
B0       # return             # 
A7 00 14 # goto +20           # goto <820:endif>
# <819:else>
14 8A 18 # aldc 35352         # s[35352] = "Bad call to the testing program: wrong number of arguments\n"
14 8A 54 # aldc 35412         # s[35412] = "main (clac-test.c0: 162.5-162.75)"
B8 00 01 # invokestatic 1     # print__1("Bad call to the testing program: wrong number of arguments\n", "main (clac-test.c0: 162.5-162.75)")
57       # pop                # (ignore result)
10 01    # bipush 1           # 1
36 01    # vstore 1           # _result = 1;
15 01    # vload 1            # _result
B0       # return             # 
# <820:endif>
# <817:endif>


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 00 # invokenative 0     # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 01 # invokenative 1     # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 02 # invokenative 2     # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 03 # invokenative 3     # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 04 # invokenative 4     # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 05 # invokenative 5     # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 06 # invokenative 6     # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 00 # aldc 0             # s[0] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 07 # invokestatic 7     # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 00 42 # aldc 66            # s[66] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 00 93 # aldc 147           # s[147] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 08 # invokenative 8     # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<is_segment_slist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <00:then>
A7 00 0D # goto +13           # goto <01:else>
# <00:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <02:endif>
# <01:else>
# <02:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <03:then>
A7 00 0D # goto +13           # goto <04:else>
# <03:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <05:endif>
# <04:else>
# <05:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 00 A5 # aldc 165           # s[165] = "is_segment_slist (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 23.10-23.44)"
B8 00 09 # invokestatic 9     # is_segment_slist(start->next, end, "is_segment_slist (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 23.10-23.44)")
36 03    # vstore 3           # _result = is_segment_slist(start->next, end, "is_segment_slist (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 23.10-23.44)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_queue>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <06:cond_true>
A7 00 16 # goto +22           # goto <07:cond_false>
# <06:cond_true>
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
14 00 EC # aldc 236           # s[236] = "is_queue (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 37.8-37.43)"
B8 00 09 # invokestatic 9     # is_segment_slist(Q->front, Q->back, "is_queue (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 37.8-37.43)")
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
36 02    # vstore 2           # _result = ((Q != NULL) && is_segment_slist(Q->front, Q->back, "is_queue (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 37.8-37.43)"));
15 02    # vload 2            # _result
B0       # return             # 


#<queue_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # Q
14 01 2A # aldc 298           # s[298] = "queue_empty (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.13-41.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_empty (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.13-41.24)")
14 01 6C # aldc 364           # s[364] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.4-41.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 01 BD # aldc 445           # s[445] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.4-41.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_empty (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 41.13-41.24)") [failure message on stack]
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
9F 00 06 # if_cmpeq +6        # if (Q->front == Q->back) goto <09:cond_true>
A7 00 08 # goto +8            # goto <10:cond_false>
# <09:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
36 02    # vstore 2           # _result = (Q->front == Q->back);
15 02    # vload 2            # _result
B0       # return             # 


#<queue_is_read_only>
02                # number of arguments = 2
03                # number of local variables = 3
00 21             # code length = 33 bytes
15 00    # vload 0            # Q
14 01 CF # aldc 463           # s[463] = "queue_is_read_only (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.13-47.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_is_read_only (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.13-47.24)")
14 02 18 # aldc 536           # s[536] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.4-47.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 02 69 # aldc 617           # s[617] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.4-47.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_is_read_only (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 47.13-47.24)") [failure message on stack]
15 00    # vload 0            # Q
62 00    # aaddf 0            # &Q->is_read_only
34       # cmload             # Q->is_read_only
36 02    # vstore 2           # _result = Q->is_read_only;
15 02    # vload 2            # _result
B0       # return             # 


#<queue_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 3C             # code length = 60 bytes
BB 18    # new 24             # alloc(queue)
36 02    # vstore 2           # Q = alloc(queue);
BB 10    # new 16             # alloc(slist)
36 03    # vstore 3           # l = alloc(slist);
15 02    # vload 2            # Q
62 00    # aaddf 0            # &Q->is_read_only
10 00    # bipush 0           # false
55       # cmstore            # Q->is_read_only = false;
15 02    # vload 2            # Q
62 08    # aaddf 8            # &Q->front
15 03    # vload 3            # l
4F       # amstore            # Q->front = l;
15 02    # vload 2            # Q
62 10    # aaddf 16           # &Q->back
15 03    # vload 3            # l
4F       # amstore            # Q->back = l;
15 02    # vload 2            # Q
36 01    # vstore 1           # _result = Q;
15 01    # vload 1            # _result
14 02 7B # aldc 635           # s[635] = "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 53.12-53.29)"
B8 00 0A # invokestatic 10    # is_queue(_result, "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 53.12-53.29)")
14 02 BB # aldc 699           # s[699] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 53.4-53.30: @ensures annotation failed"
CF       # assert             # assert is_queue(_result, "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 53.12-53.29)") [failure message on stack]
15 01    # vload 1            # _result
14 03 0A # aldc 778           # s[778] = "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 54.12-54.32)"
B8 00 0B # invokestatic 11    # queue_empty(_result, "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 54.12-54.32)")
14 03 4A # aldc 842           # s[842] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 54.4-54.33: @ensures annotation failed"
CF       # assert             # assert queue_empty(_result, "queue_new (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 54.12-54.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<enq>
03                # number of arguments = 3
04                # number of local variables = 4
00 72             # code length = 114 bytes
15 00    # vload 0            # Q
14 03 99 # aldc 921           # s[921] = "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.13-65.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.13-65.24)")
14 03 D3 # aldc 979           # s[979] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.4-65.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 04 24 # aldc 1060          # s[1060] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.4-65.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 65.13-65.24)") [failure message on stack]
BB 10    # new 16             # alloc(slist)
36 03    # vstore 3           # l = alloc(slist);
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
62 00    # aaddf 0            # &Q->back->data
15 01    # vload 1            # s
4F       # amstore            # Q->back->data = s;
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
62 08    # aaddf 8            # &Q->back->next
15 03    # vload 3            # l
4F       # amstore            # Q->back->next = l;
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
15 03    # vload 3            # l
4F       # amstore            # Q->back = l;
15 00    # vload 0            # Q
14 04 36 # aldc 1078          # s[1078] = "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)")
14 04 70 # aldc 1136          # s[1136] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)") [failure message on stack]
15 00    # vload 0            # Q
14 04 BF # aldc 1215          # s[1215] = "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)"))
14 04 F9 # aldc 1273          # s[1273] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # Q
14 05 48 # aldc 1352          # s[1352] = "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)")
14 05 82 # aldc 1410          # s[1410] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.4-66.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 66.12-66.23)") [failure message on stack]
15 00    # vload 0            # Q
14 05 D1 # aldc 1489          # s[1489] = "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)"))
14 06 0B # aldc 1547          # s[1547] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.4-67.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty(Q, "enq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 67.13-67.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<deq>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # Q
14 06 5A # aldc 1626          # s[1626] = "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.13-77.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.13-77.24)")
14 06 94 # aldc 1684          # s[1684] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.4-77.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 06 E5 # aldc 1765          # s[1765] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.4-77.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 77.13-77.24)") [failure message on stack]
15 00    # vload 0            # Q
14 06 F7 # aldc 1783          # s[1783] = "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.14-78.28)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.14-78.28)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.14-78.28)"))
14 07 31 # aldc 1841          # s[1841] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.4-78.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 07 82 # aldc 1922          # s[1922] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.4-78.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(queue_empty(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 78.14-78.28)")) [failure message on stack]
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
62 00    # aaddf 0            # &Q->front->data
2F       # amload             # Q->front->data
36 03    # vstore 3           # s = Q->front->data;
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
62 08    # aaddf 8            # &Q->front->next
2F       # amload             # Q->front->next
4F       # amstore            # Q->front = Q->front->next;
15 03    # vload 3            # s
36 02    # vstore 2           # _result = s;
15 00    # vload 0            # Q
14 07 94 # aldc 1940          # s[1940] = "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 79.12-79.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 79.12-79.23)")
14 07 CE # aldc 1998          # s[1998] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 79.4-79.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "deq (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 79.12-79.23)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<queue_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 92             # code length = 146 bytes
15 00    # vload 0            # Q
14 08 1D # aldc 2077          # s[2077] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.13-87.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.13-87.24)")
14 08 5F # aldc 2143          # s[2143] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.4-87.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 08 B0 # aldc 2224          # s[2224] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.4-87.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 87.13-87.24)") [failure message on stack]
14 08 C2 # aldc 2242          # s[2242] = "[front] "
14 08 CB # aldc 2251          # s[2251] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 89.3-89.21)"
B8 00 01 # invokestatic 1     # print__1("[front] ", "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 89.3-89.21)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
36 02    # vstore 2           # l = Q->front;
# <12:loop>
A7 00 03 # goto +3            # goto <13:body>
# <13:body>
15 02    # vload 2            # l
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
A0 00 06 # if_cmpne +6        # if (l != Q->back) goto <15:then>
A7 00 4A # goto +74           # goto <16:else>
# <15:then>
14 09 0C # aldc 2316          # s[2316] = ""
14 09 0D # aldc 2317          # s[2317] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)"
B8 00 01 # invokestatic 1     # print__1("", "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 09 4E # aldc 2382          # s[2382] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)"
B8 00 01 # invokestatic 1     # print__1(l->data, "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)")
57       # pop                # (ignore result)
14 09 8F # aldc 2447          # s[2447] = ""
14 09 90 # aldc 2448          # s[2448] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)"
B8 00 01 # invokestatic 1     # print__1("", "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 91.5-91.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
A0 00 06 # if_cmpne +6        # if (l->next != Q->back) goto <18:then>
A7 00 10 # goto +16           # goto <19:else>
# <18:then>
14 09 D1 # aldc 2513          # s[2513] = " << "
14 09 D6 # aldc 2518          # s[2518] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 92.29-92.43)"
B8 00 01 # invokestatic 1     # print__1(" << ", "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 92.29-92.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <20:endif>
# <19:else>
# <20:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <17:endif>
# <16:else>
A7 00 06 # goto +6            # break
# <17:endif>
A7 FF A6 # goto -90           # goto <12:loop>
# <14:exit>
14 0A 18 # aldc 2584          # s[2584] = " [back]"
14 0A 20 # aldc 2592          # s[2592] = "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 94.3-94.20)"
B8 00 01 # invokestatic 1     # print__1(" [back]", "queue_print (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 94.3-94.20)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<queue_read_only_copy>
02                # number of arguments = 2
04                # number of local variables = 4
00 61             # code length = 97 bytes
15 00    # vload 0            # Q
14 0A 61 # aldc 2657          # s[2657] = "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.13-98.24)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.13-98.24)")
14 0A AC # aldc 2732          # s[2732] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.4-98.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0A FD # aldc 2813          # s[2813] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.4-98.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 98.13-98.24)") [failure message on stack]
BB 18    # new 24             # alloc(queue)
36 03    # vstore 3           # QC = alloc(queue);
15 03    # vload 3            # QC
62 00    # aaddf 0            # &QC->is_read_only
10 01    # bipush 1           # true
55       # cmstore            # QC->is_read_only = true;
15 03    # vload 3            # QC
62 08    # aaddf 8            # &QC->front
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
4F       # amstore            # QC->front = Q->front;
15 03    # vload 3            # QC
62 10    # aaddf 16           # &QC->back
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
4F       # amstore            # QC->back = Q->back;
15 03    # vload 3            # QC
36 02    # vstore 2           # _result = QC;
15 00    # vload 0            # Q
14 0B 0F # aldc 2831          # s[2831] = "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 99.12-99.23)"
B8 00 0A # invokestatic 10    # is_queue(Q, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 99.12-99.23)")
14 0B 5A # aldc 2906          # s[2906] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 99.4-99.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 99.12-99.23)") [failure message on stack]
15 02    # vload 2            # _result
14 0B A9 # aldc 2985          # s[2985] = "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 100.12-100.29)"
B8 00 0A # invokestatic 10    # is_queue(_result, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 100.12-100.29)")
14 0B F6 # aldc 3062          # s[3062] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 100.4-100.30: @ensures annotation failed"
CF       # assert             # assert is_queue(_result, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 100.12-100.29)") [failure message on stack]
15 02    # vload 2            # _result
14 0C 47 # aldc 3143          # s[3143] = "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 101.12-101.39)"
B8 00 0C # invokestatic 12    # queue_is_read_only(_result, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 101.12-101.39)")
14 0C 94 # aldc 3220          # s[3220] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 101.4-101.40: @ensures annotation failed"
CF       # assert             # assert queue_is_read_only(_result, "queue_read_only_copy (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 101.12-101.39)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<queue_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <21:cond_true>
A7 00 08 # goto +8            # goto <22:cond_false>
# <21:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <23:cond_end>
# <22:cond_false>
10 00    # bipush 0           # false
# <23:cond_end>
14 0C E5 # aldc 3301          # s[3301] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0D 38 # aldc 3384          # s[3384] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 0D 4A # aldc 3402          # s[3402] = "queue_empty__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 121.1-122.39)"
B8 00 0B # invokestatic 11    # queue_empty(Q, "queue_empty__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 121.1-122.39)")
36 02    # vstore 2           # _result = queue_empty(Q, "queue_empty__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 121.1-122.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_is_read_only__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <24:cond_true>
A7 00 08 # goto +8            # goto <25:cond_false>
# <24:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <26:cond_end>
# <25:cond_false>
10 00    # bipush 0           # false
# <26:cond_end>
14 0D 90 # aldc 3472          # s[3472] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0D E3 # aldc 3555          # s[3555] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 0D F5 # aldc 3573          # s[3573] = "queue_is_read_only__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 124.1-125.39)"
B8 00 0C # invokestatic 12    # queue_is_read_only(Q, "queue_is_read_only__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 124.1-125.39)")
36 02    # vstore 2           # _result = queue_is_read_only(Q, "queue_is_read_only__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 124.1-125.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 0E 42 # aldc 3650          # s[3650] = "queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 127.1-129.39)"
B8 00 0D # invokestatic 13    # queue_new("queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 127.1-129.39)")
36 01    # vstore 1           # _result = queue_new("queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 127.1-129.39)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <27:cond_true>
A7 00 08 # goto +8            # goto <28:cond_false>
# <27:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <29:cond_end>
# <28:cond_false>
10 00    # bipush 0           # false
# <29:cond_end>
14 0E 86 # aldc 3718          # s[3718] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 128.4-128.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 0E D7 # aldc 3799          # s[3799] = "queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 129.12-129.32)"
B8 00 12 # invokestatic 18    # queue_empty__1(_result, "queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 129.12-129.32)")
14 0F 1C # aldc 3868          # s[3868] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 129.4-129.33: @ensures annotation failed"
CF       # assert             # assert queue_empty__1(_result, "queue_new__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 129.12-129.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<enq__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <30:cond_true>
A7 00 08 # goto +8            # goto <31:cond_false>
# <30:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <32:cond_end>
# <31:cond_false>
10 00    # bipush 0           # false
# <32:cond_end>
14 0F 6D # aldc 3949          # s[3949] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 0F C0 # aldc 4032          # s[4032] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
15 01    # vload 1            # e
14 0F D2 # aldc 4050          # s[4050] = "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 131.1-133.39)"
B8 00 0E # invokestatic 14    # enq(Q, e, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 131.1-133.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
14 10 10 # aldc 4112          # s[4112] = "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)"))
14 10 4F # aldc 4175          # s[4175] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty__1(Q, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # Q
14 10 A0 # aldc 4256          # s[4256] = "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)"))
14 10 DF # aldc 4319          # s[4319] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty__1(Q, "enq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 133.13-133.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<deq__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <33:cond_true>
A7 00 08 # goto +8            # goto <34:cond_false>
# <33:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <35:cond_end>
# <34:cond_false>
10 00    # bipush 0           # false
# <35:cond_end>
14 11 30 # aldc 4400          # s[4400] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 11 83 # aldc 4483          # s[4483] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 11 95 # aldc 4501          # s[4501] = "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.14-137.28)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.14-137.28)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.14-137.28)"))
14 11 D4 # aldc 4564          # s[4564] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 12 27 # aldc 4647          # s[4647] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(queue_empty__1(Q, "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 137.14-137.28)")) [failure message on stack]
15 00    # vload 0            # Q
14 12 39 # aldc 4665          # s[4665] = "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 135.1-137.39)"
B8 00 0F # invokestatic 15    # deq(Q, "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 135.1-137.39)")
36 02    # vstore 2           # _result = deq(Q, "deq__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 135.1-137.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <36:cond_true>
A7 00 08 # goto +8            # goto <37:cond_false>
# <36:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <38:cond_end>
# <37:cond_false>
10 00    # bipush 0           # false
# <38:cond_end>
14 12 77 # aldc 4727          # s[4727] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 12 CA # aldc 4810          # s[4810] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 12 DC # aldc 4828          # s[4828] = "queue_print__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 139.1-140.39)"
B8 00 10 # invokestatic 16    # queue_print(Q, "queue_print__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 139.1-140.39)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<queue_read_only_copy__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 00    # vload 0            # Q
14 13 22 # aldc 4898          # s[4898] = "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 145.1-147.46)"
B8 00 11 # invokestatic 17    # queue_read_only_copy(Q, "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 145.1-147.46)")
36 02    # vstore 2           # _result = queue_read_only_copy(Q, "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 145.1-147.46)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <39:cond_true>
A7 00 08 # goto +8            # goto <40:cond_false>
# <39:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <41:cond_end>
# <40:cond_false>
10 00    # bipush 0           # false
# <41:cond_end>
14 13 71 # aldc 4977          # s[4977] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 146.4-146.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
14 13 C2 # aldc 5058          # s[5058] = "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 147.12-147.39)"
B8 00 13 # invokestatic 19    # queue_is_read_only__1(_result, "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 147.12-147.39)")
14 14 12 # aldc 5138          # s[5138] = "/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 147.4-147.40: @ensures annotation failed"
CF       # assert             # assert queue_is_read_only__1(_result, "queue_read_only_copy__1 (/tmp/tmp.xGZ0CncQBB/queue_of_string.c0: 147.12-147.39)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <42:cond_true>
A7 00 1D # goto +29           # goto <43:cond_false>
# <42:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 14 63 # aldc 5219          # s[5219] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 19 # invokestatic 25    # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <45:cond_true>
A7 00 08 # goto +8            # goto <46:cond_false>
# <45:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <47:cond_end>
# <46:cond_false>
10 00    # bipush 0           # false
# <47:cond_end>
A7 00 05 # goto +5            # goto <44:cond_end>
# <43:cond_false>
10 00    # bipush 0           # false
# <44:cond_end>
14 14 AB # aldc 5291          # s[5291] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 14 FD # aldc 5373          # s[5373] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 0A # invokenative 10    # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 07 # invokenative 7     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 15 0F # aldc 5391          # s[5391] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 19 # invokestatic 25    # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 15 55 # aldc 5461          # s[5461] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 19 # invokestatic 25    # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 15 9B # aldc 5531          # s[5531] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 19 # invokestatic 25    # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <48:cond_true>
A7 00 08 # goto +8            # goto <49:cond_false>
# <48:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0           # false
# <50:cond_end>
14 15 E1 # aldc 5601          # s[5601] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <54:and>
A7 00 27 # goto +39           # goto <52:cond_false>
# <54:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <51:cond_true>
A7 00 1D # goto +29           # goto <52:cond_false>
# <51:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 16 31 # aldc 5681          # s[5681] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 19 # invokestatic 25    # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <55:cond_true>
A7 00 08 # goto +8            # goto <56:cond_false>
# <55:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <57:cond_end>
# <56:cond_false>
10 00    # bipush 0           # false
# <57:cond_end>
A7 00 05 # goto +5            # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0           # false
# <53:cond_end>
14 16 76 # aldc 5750          # s[5750] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 16 C8 # aldc 5832          # s[5832] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 0B # invokenative 11    # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 16 DA # aldc 5850          # s[5850] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 19 # invokestatic 25    # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <58:cond_true>
A7 00 08 # goto +8            # goto <59:cond_false>
# <58:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <60:cond_end>
# <59:cond_false>
10 00    # bipush 0           # false
# <60:cond_end>
14 17 1F # aldc 5919          # s[5919] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 0C # invokenative 12    # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 0D # invokenative 13    # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <61:cond_true>
A7 00 17 # goto +23           # goto <62:cond_false>
# <61:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <64:cond_true>
A7 00 08 # goto +8            # goto <65:cond_false>
# <64:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0           # false
# <66:cond_end>
A7 00 05 # goto +5            # goto <63:cond_end>
# <62:cond_false>
10 00    # bipush 0           # false
# <63:cond_end>
14 17 6F # aldc 5999          # s[5999] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 0E # invokenative 14    # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 0F # invokenative 15    # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <67:cond_true>
A7 00 08 # goto +8            # goto <68:cond_false>
# <67:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <69:cond_end>
# <68:cond_false>
10 00    # bipush 0           # false
# <69:cond_end>
14 17 BF # aldc 6079          # s[6079] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 18 11 # aldc 6161          # s[6161] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 10 # invokenative 16    # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 18 23 # aldc 6179          # s[6179] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 19 # invokestatic 25    # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <70:cond_true>
A7 00 08 # goto +8            # goto <71:cond_false>
# <70:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <72:cond_end>
# <71:cond_false>
10 00    # bipush 0           # false
# <72:cond_end>
14 18 6D # aldc 6253          # s[6253] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 18 BD # aldc 6333          # s[6333] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 1A # invokestatic 26    # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <73:cond_true>
A7 00 08 # goto +8            # goto <74:cond_false>
# <73:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <75:cond_end>
# <74:cond_false>
10 00    # bipush 0           # false
# <75:cond_end>
14 19 07 # aldc 6407          # s[6407] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 11 # invokenative 17    # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <76:cond_true>
A7 00 18 # goto +24           # goto <77:cond_false>
# <76:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <79:cond_true>
A7 00 08 # goto +8            # goto <80:cond_false>
# <79:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0           # false
# <81:cond_end>
A7 00 05 # goto +5            # goto <78:cond_end>
# <77:cond_false>
10 00    # bipush 0           # false
# <78:cond_end>
14 19 57 # aldc 6487          # s[6487] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 19 A9 # aldc 6569          # s[6569] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 12 # invokenative 18    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 13 # invokenative 19    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 19 BB # aldc 6587          # s[6587] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 19 # invokestatic 25    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <82:cond_true>
A7 00 08 # goto +8            # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0           # false
# <84:cond_end>
14 1A 09 # aldc 6665          # s[6665] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 1A 59 # aldc 6745          # s[6745] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 19 # invokestatic 25    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 1A A7 # aldc 6823          # s[6823] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 23 # invokestatic 35    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 1A F5 # aldc 6901          # s[6901] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 1B 45 # aldc 6981          # s[6981] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 23 # invokestatic 35    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 1B 95 # aldc 7061          # s[7061] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1B E7 # aldc 7143          # s[7143] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 14 # invokenative 20    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 1B F9 # aldc 7161          # s[7161] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 19 # invokestatic 25    # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <85:cond_true>
A7 00 08 # goto +8            # goto <86:cond_false>
# <85:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0           # false
# <87:cond_end>
14 1C 49 # aldc 7241          # s[7241] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 15 # invokenative 21    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <88:cond_true>
A7 00 17 # goto +23           # goto <89:cond_false>
# <88:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <91:cond_true>
A7 00 08 # goto +8            # goto <92:cond_false>
# <91:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <93:cond_end>
# <92:cond_false>
10 00    # bipush 0           # false
# <93:cond_end>
A7 00 05 # goto +5            # goto <90:cond_end>
# <89:cond_false>
10 00    # bipush 0           # false
# <90:cond_end>
14 1C 99 # aldc 7321          # s[7321] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <94:cond_true>
A7 00 17 # goto +23           # goto <95:cond_false>
# <94:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <97:cond_true>
A7 00 08 # goto +8            # goto <98:cond_false>
# <97:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <99:cond_end>
# <98:cond_false>
10 00    # bipush 0           # false
# <99:cond_end>
A7 00 05 # goto +5            # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0           # false
# <96:cond_end>
14 1C E9 # aldc 7401          # s[7401] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1D 3B # aldc 7483          # s[7483] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 16 # invokenative 22    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<is_assoclist_segment>
03                # number of arguments = 3
04                # number of local variables = 4
00 4A             # code length = 74 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <100:then>
A7 00 0D # goto +13           # goto <101:else>
# <100:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <102:endif>
# <101:else>
# <102:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <103:then>
A7 00 0D # goto +13           # goto <104:else>
# <103:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <105:endif>
# <104:else>
# <105:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->def
2F       # amload             # start->def
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (start->def != NULL) goto <106:cond_true>
A7 00 13 # goto +19           # goto <107:cond_false>
# <106:cond_true>
15 00    # vload 0            # start
62 10    # aaddf 16           # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 1D 4D # aldc 7501          # s[7501] = "is_assoclist_segment (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 23.32-23.70)"
B8 00 28 # invokestatic 40    # is_assoclist_segment(start->next, end, "is_assoclist_segment (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 23.32-23.70)")
A7 00 05 # goto +5            # goto <108:cond_end>
# <107:cond_false>
10 00    # bipush 0           # false
# <108:cond_end>
36 03    # vstore 3           # _result = ((start->def != NULL) && is_assoclist_segment(start->next, end, "is_assoclist_segment (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 23.32-23.70)"));
15 03    # vload 3            # _result
B0       # return             # 


#<is_acyclic_assoclist>
02                # number of arguments = 2
05                # number of local variables = 5
00 C6             # code length = 198 bytes
15 00    # vload 0            # p
01       # aconst_null        # NULL
9F 00 12 # if_cmpeq +18       # if (p == NULL) goto <109:then>
A7 00 03 # goto +3            # goto <112:or>
# <112:or>
15 00    # vload 0            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (p->next == NULL) goto <109:then>
A7 00 0D # goto +13           # goto <110:else>
# <109:then>
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <111:endif>
# <110:else>
# <111:endif>
15 00    # vload 0            # p
36 03    # vstore 3           # tortise = p;
15 00    # vload 0            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
36 04    # vstore 4           # hare = p->next;
15 00    # vload 0            # p
62 08    # aaddf 8            # &p->def
2F       # amload             # p->def
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (p->def == NULL) goto <113:then>
A7 00 0D # goto +13           # goto <114:else>
# <113:then>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <115:endif>
# <114:else>
# <115:endif>
# <116:loop>
A7 00 03 # goto +3            # goto <117:body>
# <117:body>
15 03    # vload 3            # tortise
15 04    # vload 4            # hare
14 1D 94 # aldc 7572          # s[7572] = "is_acyclic_assoclist (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 33.21-33.56)"
B8 00 28 # invokestatic 40    # is_assoclist_segment(tortise, hare, "is_acyclic_assoclist (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 33.21-33.56)")
14 1D DB # aldc 7643          # s[7643] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 33.6-33.57: @loop_invariant annotation failed"
CF       # assert             # assert is_assoclist_segment(tortise, hare, "is_acyclic_assoclist (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 33.21-33.56)") [failure message on stack]
15 03    # vload 3            # tortise
15 04    # vload 4            # hare
A0 00 06 # if_cmpne +6        # if (tortise != hare) goto <119:then>
A7 00 61 # goto +97           # goto <120:else>
# <119:then>
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
01       # aconst_null        # NULL
9F 00 15 # if_cmpeq +21       # if (hare->next == NULL) goto <122:then>
A7 00 03 # goto +3            # goto <125:or>
# <125:or>
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
62 10    # aaddf 16           # &hare->next->next
2F       # amload             # hare->next->next
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (hare->next->next == NULL) goto <122:then>
A7 00 0D # goto +13           # goto <123:else>
# <122:then>
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <124:endif>
# <123:else>
# <124:endif>
15 04    # vload 4            # hare
62 08    # aaddf 8            # &hare->def
2F       # amload             # hare->def
01       # aconst_null        # NULL
9F 00 15 # if_cmpeq +21       # if (hare->def == NULL) goto <126:then>
A7 00 03 # goto +3            # goto <129:or>
# <129:or>
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
62 08    # aaddf 8            # &hare->next->def
2F       # amload             # hare->next->def
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (hare->next->def == NULL) goto <126:then>
A7 00 0D # goto +13           # goto <127:else>
# <126:then>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <128:endif>
# <127:else>
# <128:endif>
15 03    # vload 3            # tortise
62 10    # aaddf 16           # &tortise->next
2F       # amload             # tortise->next
36 03    # vstore 3           # tortise = tortise->next;
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
62 10    # aaddf 16           # &hare->next->next
2F       # amload             # hare->next->next
36 04    # vstore 4           # hare = hare->next->next;
A7 00 06 # goto +6            # goto <121:endif>
# <120:else>
A7 00 06 # goto +6            # break
# <121:endif>
A7 FF 84 # goto -124          # goto <116:loop>
# <118:exit>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 


#<is_dict>
02                # number of arguments = 2
03                # number of local variables = 3
00 1E             # code length = 30 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <130:cond_true>
A7 00 11 # goto +17           # goto <131:cond_false>
# <130:cond_true>
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
14 1E 2D # aldc 7725          # s[7725] = "is_dict (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 54.23-54.57)"
B8 00 29 # invokestatic 41    # is_acyclic_assoclist(D->assoclist, "is_dict (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 54.23-54.57)")
A7 00 05 # goto +5            # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0           # false
# <132:cond_end>
36 02    # vstore 2           # _result = ((D != NULL) && is_acyclic_assoclist(D->assoclist, "is_dict (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 54.23-54.57)"));
15 02    # vload 2            # _result
B0       # return             # 


#<dict_new>
01                # number of arguments = 1
03                # number of local variables = 3
00 1D             # code length = 29 bytes
BB 08    # new 8              # alloc(dict)
36 02    # vstore 2           # D = alloc(dict);
15 02    # vload 2            # D
62 00    # aaddf 0            # &D->assoclist
01       # aconst_null        # NULL
4F       # amstore            # D->assoclist = NULL;
15 02    # vload 2            # D
36 01    # vstore 1           # _result = D;
15 01    # vload 1            # _result
14 1E 67 # aldc 7783          # s[7783] = "dict_new (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 59.12-59.28)"
B8 00 2A # invokestatic 42    # is_dict(_result, "dict_new (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 59.12-59.28)")
14 1E A2 # aldc 7842          # s[7842] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 59.4-59.29: @ensures annotation failed"
CF       # assert             # assert is_dict(_result, "dict_new (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 59.12-59.28)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<dict_lookup>
03                # number of arguments = 3
05                # number of local variables = 5
00 6E             # code length = 110 bytes
15 00    # vload 0            # D
14 1E ED # aldc 7917          # s[7917] = "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.13-67.23)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.13-67.23)")
14 1F 2B # aldc 7979          # s[7979] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.4-67.24: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 1F 78 # aldc 8056          # s[8056] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.4-67.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_dict(D, "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 67.13-67.23)") [failure message on stack]
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
36 04    # vstore 4           # p = D->assoclist;
# <133:loop>
A7 00 03 # goto +3            # goto <134:body>
# <134:body>
15 04    # vload 4            # p
14 1F 8A # aldc 8074          # s[8074] = "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 70.21-70.44)"
B8 00 29 # invokestatic 41    # is_acyclic_assoclist(p, "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 70.21-70.44)")
14 1F C8 # aldc 8136          # s[8136] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 70.6-70.45: @loop_invariant annotation failed"
CF       # assert             # assert is_acyclic_assoclist(p, "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 70.21-70.44)") [failure message on stack]
15 04    # vload 4            # p
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (p != NULL) goto <136:then>
A7 00 2F # goto +47           # goto <137:else>
# <136:then>
15 01    # vload 1            # name
15 04    # vload 4            # p
62 00    # aaddf 0            # &p->name
2F       # amload             # p->name
14 20 1A # aldc 8218          # s[8218] = "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 72.9-72.36)"
B8 00 1D # invokestatic 29    # string_equal__1(name, p->name, "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 72.9-72.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(name, p->name, "dict_lookup (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 72.9-72.36)") == true) goto <139:then>
A7 00 10 # goto +16           # goto <140:else>
# <139:then>
15 04    # vload 4            # p
62 08    # aaddf 8            # &p->def
2F       # amload             # p->def
36 03    # vstore 3           # _result = p->def;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <141:endif>
# <140:else>
# <141:endif>
15 04    # vload 4            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
36 04    # vstore 4           # p = p->next;
A7 00 06 # goto +6            # goto <138:endif>
# <137:else>
A7 00 06 # goto +6            # break
# <138:endif>
A7 FF B9 # goto -71           # goto <133:loop>
# <135:exit>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
B0       # return             # 


#<dict_insert>
04                # number of arguments = 4
05                # number of local variables = 5
01 28             # code length = 296 bytes
15 00    # vload 0            # D
14 20 57 # aldc 8279          # s[8279] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.13-81.23)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.13-81.23)")
14 20 95 # aldc 8341          # s[8341] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.4-81.24: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 20 E2 # aldc 8418          # s[8418] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.4-81.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 81.13-81.23)") [failure message on stack]
15 02    # vload 2            # def
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (def != NULL) goto <142:cond_true>
A7 00 08 # goto +8            # goto <143:cond_false>
# <142:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0           # false
# <144:cond_end>
14 20 F4 # aldc 8436          # s[8436] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 82.4-82.25: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 21 41 # aldc 8513          # s[8513] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 82.4-82.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (def != NULL) [failure message on stack]
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
36 04    # vstore 4           # p = D->assoclist;
# <145:loop>
A7 00 03 # goto +3            # goto <146:body>
# <146:body>
15 04    # vload 4            # p
14 21 53 # aldc 8531          # s[8531] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 87.21-87.44)"
B8 00 29 # invokestatic 41    # is_acyclic_assoclist(p, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 87.21-87.44)")
14 21 91 # aldc 8593          # s[8593] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 87.6-87.45: @loop_invariant annotation failed"
CF       # assert             # assert is_acyclic_assoclist(p, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 87.21-87.44)") [failure message on stack]
15 04    # vload 4            # p
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (p != NULL) goto <148:then>
A7 00 57 # goto +87           # goto <149:else>
# <148:then>
15 01    # vload 1            # name
15 04    # vload 4            # p
62 00    # aaddf 0            # &p->name
2F       # amload             # p->name
14 21 E3 # aldc 8675          # s[8675] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 89.9-89.36)"
B8 00 1D # invokestatic 29    # string_equal__1(name, p->name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 89.9-89.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(name, p->name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 89.9-89.36)") == true) goto <151:then>
A7 00 38 # goto +56           # goto <152:else>
# <151:then>
15 04    # vload 4            # p
62 08    # aaddf 8            # &p->def
15 02    # vload 2            # def
4F       # amstore            # p->def = def;
15 00    # vload 0            # D
14 22 20 # aldc 8736          # s[8736] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)")
14 22 5E # aldc 8798          # s[8798] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.4-83.23: @ensures annotation failed"
CF       # assert             # assert is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)") [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 22 A9 # aldc 8873          # s[8873] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)") != NULL) goto <154:cond_true>
A7 00 08 # goto +8            # goto <155:cond_false>
# <154:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <156:cond_end>
# <155:cond_false>
10 00    # bipush 0           # false
# <156:cond_end>
14 22 E7 # aldc 8935          # s[8935] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.4-84.41: @ensures annotation failed"
CF       # assert             # assert (dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)") != NULL) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
A7 00 03 # goto +3            # goto <153:endif>
# <152:else>
# <153:endif>
15 04    # vload 4            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
36 04    # vstore 4           # p = p->next;
A7 00 06 # goto +6            # goto <150:endif>
# <149:else>
A7 00 06 # goto +6            # break
# <150:endif>
A7 FF 91 # goto -111          # goto <145:loop>
# <147:exit>
BB 18    # new 24             # alloc(struct alist_node)
36 04    # vstore 4           # p = alloc(struct alist_node);
15 04    # vload 4            # p
62 00    # aaddf 0            # &p->name
15 01    # vload 1            # name
4F       # amstore            # p->name = name;
15 04    # vload 4            # p
62 08    # aaddf 8            # &p->def
15 02    # vload 2            # def
4F       # amstore            # p->def = def;
15 04    # vload 4            # p
62 10    # aaddf 16           # &p->next
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
4F       # amstore            # p->next = D->assoclist;
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
15 04    # vload 4            # p
4F       # amstore            # D->assoclist = p;
15 00    # vload 0            # D
14 23 32 # aldc 9010          # s[9010] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)")
14 23 70 # aldc 9072          # s[9072] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.4-83.23: @ensures annotation failed"
CF       # assert             # assert is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)") [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 23 BB # aldc 9147          # s[9147] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)") != NULL) goto <157:cond_true>
A7 00 08 # goto +8            # goto <158:cond_false>
# <157:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <159:cond_end>
# <158:cond_false>
10 00    # bipush 0           # false
# <159:cond_end>
14 23 F9 # aldc 9209          # s[9209] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.4-84.41: @ensures annotation failed"
CF       # assert             # assert (dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)") != NULL) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # D
14 24 44 # aldc 9284          # s[9284] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)")
14 24 82 # aldc 9346          # s[9346] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.4-83.23: @ensures annotation failed"
CF       # assert             # assert is_dict(D, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 83.12-83.22)") [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 24 CD # aldc 9421          # s[9421] = "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)") != NULL) goto <160:cond_true>
A7 00 08 # goto +8            # goto <161:cond_false>
# <160:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <162:cond_end>
# <161:cond_false>
10 00    # bipush 0           # false
# <162:cond_end>
14 25 0B # aldc 9483          # s[9483] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.4-84.41: @ensures annotation failed"
CF       # assert             # assert (dict_lookup(D, name, "dict_insert (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 84.12-84.32)") != NULL) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<dict_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 1F             # code length = 31 bytes
14 25 56 # aldc 9558          # s[9558] = "dict_new__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 114.1-115.35)"
B8 00 2B # invokestatic 43    # dict_new("dict_new__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 114.1-115.35)")
36 01    # vstore 1           # _result = dict_new("dict_new__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 114.1-115.35)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <163:cond_true>
A7 00 08 # goto +8            # goto <164:cond_false>
# <163:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <165:cond_end>
# <164:cond_false>
10 00    # bipush 0           # false
# <165:cond_end>
14 25 95 # aldc 9621          # s[9621] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 115.6-115.30: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<dict_lookup__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 2E             # code length = 46 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <166:cond_true>
A7 00 08 # goto +8            # goto <167:cond_false>
# <166:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <168:cond_end>
# <167:cond_false>
10 00    # bipush 0           # false
# <168:cond_end>
14 25 E2 # aldc 9698          # s[9698] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 119.6-119.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 26 31 # aldc 9777          # s[9777] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 119.6-119.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (D != NULL) [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 26 43 # aldc 9795          # s[9795] = "dict_lookup__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 118.1-119.30)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_lookup__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 118.1-119.30)")
36 03    # vstore 3           # _result = dict_lookup(D, name, "dict_lookup__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 118.1-119.30)");
15 03    # vload 3            # _result
B0       # return             # 


#<dict_insert__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 51             # code length = 81 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <169:cond_true>
A7 00 08 # goto +8            # goto <170:cond_false>
# <169:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <171:cond_end>
# <170:cond_false>
10 00    # bipush 0           # false
# <171:cond_end>
14 26 85 # aldc 9861          # s[9861] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 122.6-122.25: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 26 D4 # aldc 9940          # s[9940] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 122.6-122.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (D != NULL) [failure message on stack]
15 02    # vload 2            # def
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (def != NULL) goto <172:cond_true>
A7 00 08 # goto +8            # goto <173:cond_false>
# <172:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <174:cond_end>
# <173:cond_false>
10 00    # bipush 0           # false
# <174:cond_end>
14 26 E6 # aldc 9958          # s[9958] = "/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 123.6-123.27: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 27 35 # aldc 10037         # s[10037] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 123.6-123.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (def != NULL) [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
15 02    # vload 2            # def
14 27 47 # aldc 10055         # s[10055] = "dict_insert__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 121.1-123.32)"
B8 00 2D # invokestatic 45    # dict_insert(D, name, def, "dict_insert__1 (/tmp/tmp.xGZ0CncQBB/simple_dict.c0: 121.1-123.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_segment_intlist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <175:then>
A7 00 0D # goto +13           # goto <176:else>
# <175:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <177:endif>
# <176:else>
# <177:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <178:then>
A7 00 0D # goto +13           # goto <179:else>
# <178:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <180:endif>
# <179:else>
# <180:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 27 89 # aldc 10121         # s[10121] = "is_segment_intlist (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 23.10-23.46)"
B8 00 31 # invokestatic 49    # is_segment_intlist(start->next, end, "is_segment_intlist (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 23.10-23.46)")
36 03    # vstore 3           # _result = is_segment_intlist(start->next, end, "is_segment_intlist (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 23.10-23.46)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_stack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <181:cond_true>
A7 00 16 # goto +22           # goto <182:cond_false>
# <181:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 27 CF # aldc 10191         # s[10191] = "is_stack (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 36.8-36.44)"
B8 00 31 # invokestatic 49    # is_segment_intlist(S->top, S->floor, "is_stack (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 36.8-36.44)")
A7 00 05 # goto +5            # goto <183:cond_end>
# <182:cond_false>
10 00    # bipush 0           # false
# <183:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_intlist(S->top, S->floor, "is_stack (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 36.8-36.44)"));
15 02    # vload 2            # _result
B0       # return             # 


#<stack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 28 0A # aldc 10250         # s[10250] = "stack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.13-40.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "stack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.13-40.24)")
14 28 49 # aldc 10313         # s[10313] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.4-40.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 97 # aldc 10391         # s[10391] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.4-40.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "stack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 40.13-40.24)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <184:cond_true>
A7 00 08 # goto +8            # goto <185:cond_false>
# <184:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <186:cond_end>
# <185:cond_false>
10 00    # bipush 0           # false
# <186:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<stack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(stack)
36 02    # vstore 2           # S = alloc(stack);
BB 10    # new 16             # alloc(intlist)
36 03    # vstore 3           # l = alloc(intlist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 28 A9 # aldc 10409         # s[10409] = "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 46.12-46.29)"
B8 00 32 # invokestatic 50    # is_stack(_result, "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 46.12-46.29)")
14 28 E6 # aldc 10470         # s[10470] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 46.4-46.30: @ensures annotation failed"
CF       # assert             # assert is_stack(_result, "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 46.12-46.29)") [failure message on stack]
15 01    # vload 1            # _result
14 29 32 # aldc 10546         # s[10546] = "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 47.12-47.32)"
B8 00 33 # invokestatic 51    # stack_empty(_result, "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 47.12-47.32)")
14 29 6F # aldc 10607         # s[10607] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 47.4-47.33: @ensures annotation failed"
CF       # assert             # assert stack_empty(_result, "stack_new (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 47.12-47.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<push>
03                # number of arguments = 3
04                # number of local variables = 4
00 42             # code length = 66 bytes
15 00    # vload 0            # S
14 29 BB # aldc 10683         # s[10683] = "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.13-57.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.13-57.24)")
14 29 F3 # aldc 10739         # s[10739] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.4-57.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 2A 41 # aldc 10817         # s[10817] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.4-57.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 57.13-57.24)") [failure message on stack]
BB 10    # new 16             # alloc(intlist)
36 03    # vstore 3           # l = alloc(intlist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4E       # imstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 2A 53 # aldc 10835         # s[10835] = "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 58.12-58.23)"
B8 00 32 # invokestatic 50    # is_stack(S, "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 58.12-58.23)")
14 2A 8B # aldc 10891         # s[10891] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 58.4-58.24: @ensures annotation failed"
CF       # assert             # assert is_stack(S, "push (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 58.12-58.23)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<pop>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # S
14 2A D7 # aldc 10967         # s[10967] = "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.13-67.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.13-67.24)")
14 2B 0E # aldc 11022         # s[11022] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.4-67.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2B 5C # aldc 11100         # s[11100] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.4-67.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 67.13-67.24)") [failure message on stack]
15 00    # vload 0            # S
14 2B 6E # aldc 11118         # s[11118] = "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.14-68.28)"
B8 00 33 # invokestatic 51    # stack_empty(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.14-68.28)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.14-68.28)"))
14 2B A5 # aldc 11173         # s[11173] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.4-68.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2B F3 # aldc 11251         # s[11251] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.4-68.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(stack_empty(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 68.14-68.28)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2E       # imload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 2C 05 # aldc 11269         # s[11269] = "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 69.12-69.23)"
B8 00 32 # invokestatic 50    # is_stack(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 69.12-69.23)")
14 2C 3C # aldc 11324         # s[11324] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 69.4-69.24: @ensures annotation failed"
CF       # assert             # assert is_stack(S, "pop (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 69.12-69.23)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<stack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 88             # code length = 136 bytes
15 00    # vload 0            # S
14 2C 88 # aldc 11400         # s[11400] = "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.13-77.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.13-77.24)")
14 2C C7 # aldc 11463         # s[11463] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.4-77.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2D 15 # aldc 11541         # s[11541] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.4-77.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 77.13-77.24)") [failure message on stack]
14 2D 27 # aldc 11559         # s[11559] = "TOP: "
14 2D 2D # aldc 11565         # s[11565] = "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 79.3-79.18)"
B8 00 01 # invokestatic 1     # print__1("TOP: ", "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 79.3-79.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <187:loop>
A7 00 03 # goto +3            # goto <188:body>
# <188:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <190:then>
A7 00 4A # goto +74           # goto <191:else>
# <190:then>
14 2D 6B # aldc 11627         # s[11627] = ""
14 2D 6C # aldc 11628         # s[11628] = "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)"
B8 00 01 # invokestatic 1     # print__1("", "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2E       # imload             # l->data
14 2D AA # aldc 11690         # s[11690] = "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)"
B8 00 03 # invokestatic 3     # printint__1(l->data, "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)")
57       # pop                # (ignore result)
14 2D E8 # aldc 11752         # s[11752] = ""
14 2D E9 # aldc 11753         # s[11753] = "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)"
B8 00 01 # invokestatic 1     # print__1("", "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 81.5-81.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <193:then>
A7 00 10 # goto +16           # goto <194:else>
# <193:then>
14 2E 27 # aldc 11815         # s[11815] = " | "
14 2E 2B # aldc 11819         # s[11819] = "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 82.30-82.43)"
B8 00 01 # invokestatic 1     # print__1(" | ", "stack_print (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 82.30-82.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <195:endif>
# <194:else>
# <195:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <192:endif>
# <191:else>
A7 00 06 # goto +6            # break
# <192:endif>
A7 FF A6 # goto -90           # goto <187:loop>
# <189:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<stack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <196:cond_true>
A7 00 08 # goto +8            # goto <197:cond_false>
# <196:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <198:cond_end>
# <197:cond_false>
10 00    # bipush 0           # false
# <198:cond_end>
14 2E 6A # aldc 11882         # s[11882] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 100.4-100.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2E BA # aldc 11962         # s[11962] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 100.4-100.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 2E CC # aldc 11980         # s[11980] = "stack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 99.1-100.40)"
B8 00 33 # invokestatic 51    # stack_empty(S, "stack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 99.1-100.40)")
36 02    # vstore 2           # _result = stack_empty(S, "stack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 99.1-100.40)");
15 02    # vload 2            # _result
B0       # return             # 


#<stack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 2F 0E # aldc 12046         # s[12046] = "stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 102.1-104.40)"
B8 00 34 # invokestatic 52    # stack_new("stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 102.1-104.40)")
36 01    # vstore 1           # _result = stack_new("stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 102.1-104.40)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <199:cond_true>
A7 00 08 # goto +8            # goto <200:cond_false>
# <199:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0           # false
# <201:cond_end>
14 2F 4F # aldc 12111         # s[12111] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 103.4-103.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 2F 9D # aldc 12189         # s[12189] = "stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 104.12-104.32)"
B8 00 38 # invokestatic 56    # stack_empty__1(_result, "stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 104.12-104.32)")
14 2F DF # aldc 12255         # s[12255] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 104.4-104.33: @ensures annotation failed"
CF       # assert             # assert stack_empty__1(_result, "stack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 104.12-104.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<push__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <202:cond_true>
A7 00 08 # goto +8            # goto <203:cond_false>
# <202:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <204:cond_end>
# <203:cond_false>
10 00    # bipush 0           # false
# <204:cond_end>
14 30 2D # aldc 12333         # s[12333] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 107.4-107.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 30 7D # aldc 12413         # s[12413] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 107.4-107.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 30 8F # aldc 12431         # s[12431] = "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 106.1-108.39)"
B8 00 35 # invokestatic 53    # push(S, x, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 106.1-108.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 30 CB # aldc 12491         # s[12491] = "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)"))
14 31 08 # aldc 12552         # s[12552] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
CF       # assert             # assert !(stack_empty__1(S, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 31 56 # aldc 12630         # s[12630] = "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)"))
14 31 93 # aldc 12691         # s[12691] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
CF       # assert             # assert !(stack_empty__1(S, "push__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 108.13-108.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<pop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <205:cond_true>
A7 00 08 # goto +8            # goto <206:cond_false>
# <205:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <207:cond_end>
# <206:cond_false>
10 00    # bipush 0           # false
# <207:cond_end>
14 31 E1 # aldc 12769         # s[12769] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 111.4-111.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 32 31 # aldc 12849         # s[12849] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 111.4-111.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 32 43 # aldc 12867         # s[12867] = "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.14-112.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.14-112.28)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.14-112.28)"))
14 32 7F # aldc 12927         # s[12927] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.4-112.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 32 CF # aldc 13007         # s[13007] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.4-112.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(stack_empty__1(S, "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 112.14-112.28)")) [failure message on stack]
15 00    # vload 0            # S
14 32 E1 # aldc 13025         # s[13025] = "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 110.1-112.40)"
B8 00 36 # invokestatic 54    # pop(S, "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 110.1-112.40)")
36 02    # vstore 2           # _result = pop(S, "pop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 110.1-112.40)");
15 02    # vload 2            # _result
B0       # return             # 


#<stack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <208:cond_true>
A7 00 08 # goto +8            # goto <209:cond_false>
# <208:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <210:cond_end>
# <209:cond_false>
10 00    # bipush 0           # false
# <210:cond_end>
14 33 1C # aldc 13084         # s[13084] = "/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 115.4-115.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 33 6C # aldc 13164         # s[13164] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 115.4-115.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 33 7E # aldc 13182         # s[13182] = "stack_print__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 114.1-115.40)"
B8 00 37 # invokestatic 55    # stack_print(S, "stack_print__1 (/tmp/tmp.xGZ0CncQBB/stack_of_int.c0: 114.1-115.40)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_segment_qlist>
03                # number of arguments = 3
04                # number of local variables = 4
00 4A             # code length = 74 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <211:then>
A7 00 0D # goto +13           # goto <212:else>
# <211:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <213:endif>
# <212:else>
# <213:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <214:then>
A7 00 0D # goto +13           # goto <215:else>
# <214:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <216:endif>
# <215:else>
# <216:endif>
15 00    # vload 0            # start
62 00    # aaddf 0            # &start->data
2F       # amload             # start->data
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (start->data != NULL) goto <217:cond_true>
A7 00 13 # goto +19           # goto <218:cond_false>
# <217:cond_true>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 33 C1 # aldc 13249         # s[13249] = "is_segment_qlist (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 23.33-23.67)"
B8 00 3D # invokestatic 61    # is_segment_qlist(start->next, end, "is_segment_qlist (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 23.33-23.67)")
A7 00 05 # goto +5            # goto <219:cond_end>
# <218:cond_false>
10 00    # bipush 0           # false
# <219:cond_end>
36 03    # vstore 3           # _result = ((start->data != NULL) && is_segment_qlist(start->next, end, "is_segment_qlist (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 23.33-23.67)"));
15 03    # vload 3            # _result
B0       # return             # 


#<is_qstack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <220:cond_true>
A7 00 16 # goto +22           # goto <221:cond_false>
# <220:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 34 11 # aldc 13329         # s[13329] = "is_qstack (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 36.8-36.42)"
B8 00 3D # invokestatic 61    # is_segment_qlist(S->top, S->floor, "is_qstack (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 36.8-36.42)")
A7 00 05 # goto +5            # goto <222:cond_end>
# <221:cond_false>
10 00    # bipush 0           # false
# <222:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_qlist(S->top, S->floor, "is_qstack (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 36.8-36.42)"));
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 34 59 # aldc 13401         # s[13401] = "qstack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.13-40.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qstack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.13-40.25)")
14 34 A5 # aldc 13477         # s[13477] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.4-40.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 34 FF # aldc 13567         # s[13567] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.4-40.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qstack_empty (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 40.13-40.25)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <223:cond_true>
A7 00 08 # goto +8            # goto <224:cond_false>
# <223:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <225:cond_end>
# <224:cond_false>
10 00    # bipush 0           # false
# <225:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(qstack)
36 02    # vstore 2           # S = alloc(qstack);
BB 10    # new 16             # alloc(qlist)
36 03    # vstore 3           # l = alloc(qlist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 35 11 # aldc 13585         # s[13585] = "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 46.12-46.30)"
B8 00 3E # invokestatic 62    # is_qstack(_result, "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 46.12-46.30)")
14 35 5B # aldc 13659         # s[13659] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 46.4-46.31: @ensures annotation failed"
CF       # assert             # assert is_qstack(_result, "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 46.12-46.30)") [failure message on stack]
15 01    # vload 1            # _result
14 35 B3 # aldc 13747         # s[13747] = "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 47.12-47.33)"
B8 00 3F # invokestatic 63    # qstack_empty(_result, "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 47.12-47.33)")
14 35 FD # aldc 13821         # s[13821] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 47.4-47.34: @ensures annotation failed"
CF       # assert             # assert qstack_empty(_result, "qstack_new (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 47.12-47.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<qpush>
03                # number of arguments = 3
04                # number of local variables = 4
00 61             # code length = 97 bytes
15 00    # vload 0            # S
14 36 55 # aldc 13909         # s[13909] = "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.13-57.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.13-57.25)")
14 36 9A # aldc 13978         # s[13978] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.4-57.26: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 36 F4 # aldc 14068         # s[14068] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.4-57.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 57.13-57.25)") [failure message on stack]
15 01    # vload 1            # x
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (x != NULL) goto <226:cond_true>
A7 00 08 # goto +8            # goto <227:cond_false>
# <226:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <228:cond_end>
# <227:cond_false>
10 00    # bipush 0           # false
# <228:cond_end>
14 37 06 # aldc 14086         # s[14086] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 59.4-59.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 37 60 # aldc 14176         # s[14176] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 59.4-59.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x != NULL) [failure message on stack]
BB 10    # new 16             # alloc(qlist)
36 03    # vstore 3           # l = alloc(qlist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4F       # amstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 37 72 # aldc 14194         # s[14194] = "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 58.12-58.24)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 58.12-58.24)")
14 37 B7 # aldc 14263         # s[14263] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 58.4-58.25: @ensures annotation failed"
CF       # assert             # assert is_qstack(S, "qpush (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 58.12-58.24)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<qpop>
02                # number of arguments = 2
04                # number of local variables = 4
00 6F             # code length = 111 bytes
15 00    # vload 0            # S
14 38 0F # aldc 14351         # s[14351] = "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.13-68.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.13-68.25)")
14 38 53 # aldc 14419         # s[14419] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.4-68.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 38 AD # aldc 14509         # s[14509] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.4-68.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 68.13-68.25)") [failure message on stack]
15 00    # vload 0            # S
14 38 BF # aldc 14527         # s[14527] = "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.14-69.29)"
B8 00 3F # invokestatic 63    # qstack_empty(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.14-69.29)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.14-69.29)"))
14 39 03 # aldc 14595         # s[14595] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.4-69.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 39 5D # aldc 14685         # s[14685] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.4-69.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(qstack_empty(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 69.14-69.29)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2F       # amload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 39 6F # aldc 14703         # s[14703] = "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 70.12-70.24)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 70.12-70.24)")
14 39 B3 # aldc 14771         # s[14771] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 70.4-70.25: @ensures annotation failed"
CF       # assert             # assert is_qstack(S, "qpop (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 70.12-70.24)") [failure message on stack]
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <229:cond_true>
A7 00 08 # goto +8            # goto <230:cond_false>
# <229:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <231:cond_end>
# <230:cond_false>
10 00    # bipush 0           # false
# <231:cond_end>
14 3A 0B # aldc 14859         # s[14859] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 71.4-71.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 8E             # code length = 142 bytes
15 00    # vload 0            # S
14 3A 63 # aldc 14947         # s[14947] = "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.13-79.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.13-79.25)")
14 3A AF # aldc 15023         # s[15023] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.4-79.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3B 09 # aldc 15113         # s[15113] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.4-79.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 79.13-79.25)") [failure message on stack]
14 3B 1B # aldc 15131         # s[15131] = "TOP: "
14 3B 21 # aldc 15137         # s[15137] = "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 81.3-81.18)"
B8 00 01 # invokestatic 1     # print__1("TOP: ", "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 81.3-81.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <232:loop>
A7 00 03 # goto +3            # goto <233:body>
# <233:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <235:then>
A7 00 50 # goto +80           # goto <236:else>
# <235:then>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
A0 00 06 # if_cmpne +6        # if (l != S->top) goto <238:then>
A7 00 10 # goto +16           # goto <239:else>
# <238:then>
14 3B 6C # aldc 15212         # s[15212] = "     "
14 3B 72 # aldc 15218         # s[15218] = "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 83.22-83.37)"
B8 00 01 # invokestatic 1     # print__1("     ", "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 83.22-83.37)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <240:endif>
# <239:else>
# <240:endif>
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 3B BE # aldc 15294         # s[15294] = "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 84.5-84.25)"
B8 00 17 # invokestatic 23    # queue_print__1(l->data, "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 84.5-84.25)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <241:then>
A7 00 10 # goto +16           # goto <242:else>
# <241:then>
14 3C 09 # aldc 15369         # s[15369] = "\n"
14 3C 0B # aldc 15371         # s[15371] = "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 85.30-85.42)"
B8 00 01 # invokestatic 1     # print__1("\n", "qstack_print (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 85.30-85.42)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <243:endif>
# <242:else>
# <243:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <237:endif>
# <236:else>
A7 00 06 # goto +6            # break
# <237:endif>
A7 FF A0 # goto -96           # goto <232:loop>
# <234:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<qstack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <244:cond_true>
A7 00 08 # goto +8            # goto <245:cond_false>
# <244:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <246:cond_end>
# <245:cond_false>
10 00    # bipush 0           # false
# <246:cond_end>
14 3C 57 # aldc 15447         # s[15447] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 103.4-103.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3C B3 # aldc 15539         # s[15539] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 103.4-103.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 3C C5 # aldc 15557         # s[15557] = "qstack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 102.1-103.43)"
B8 00 3F # invokestatic 63    # qstack_empty(S, "qstack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 102.1-103.43)")
36 02    # vstore 2           # _result = qstack_empty(S, "qstack_empty__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 102.1-103.43)");
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 3D 15 # aldc 15637         # s[15637] = "qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 105.1-107.43)"
B8 00 40 # invokestatic 64    # qstack_new("qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 105.1-107.43)")
36 01    # vstore 1           # _result = qstack_new("qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 105.1-107.43)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <247:cond_true>
A7 00 08 # goto +8            # goto <248:cond_false>
# <247:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <249:cond_end>
# <248:cond_false>
10 00    # bipush 0           # false
# <249:cond_end>
14 3D 63 # aldc 15715         # s[15715] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 106.4-106.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 3D BD # aldc 15805         # s[15805] = "qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 107.12-107.33)"
B8 00 44 # invokestatic 68    # qstack_empty__1(_result, "qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 107.12-107.33)")
14 3E 0C # aldc 15884         # s[15884] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 107.4-107.34: @ensures annotation failed"
CF       # assert             # assert qstack_empty__1(_result, "qstack_new__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 107.12-107.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<qpush__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 5C             # code length = 92 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <250:cond_true>
A7 00 16 # goto +22           # goto <251:cond_false>
# <250:cond_true>
15 01    # vload 1            # x
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (x != NULL) goto <253:cond_true>
A7 00 08 # goto +8            # goto <254:cond_false>
# <253:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <255:cond_end>
# <254:cond_false>
10 00    # bipush 0           # false
# <255:cond_end>
A7 00 05 # goto +5            # goto <252:cond_end>
# <251:cond_false>
10 00    # bipush 0           # false
# <252:cond_end>
14 3E 66 # aldc 15974         # s[15974] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 110.4-110.36: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 3E C2 # aldc 16066         # s[16066] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 110.4-110.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((S != NULL) && (x != NULL)) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 3E D4 # aldc 16084         # s[16084] = "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 109.1-111.43)"
B8 00 41 # invokestatic 65    # qpush(S, x, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 109.1-111.43)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 3F 1D # aldc 16157         # s[16157] = "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)"
B8 00 44 # invokestatic 68    # qstack_empty__1(S, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty__1(S, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)"))
14 3F 67 # aldc 16231         # s[16231] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.4-111.29: @ensures annotation failed"
CF       # assert             # assert !(qstack_empty__1(S, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 3F C1 # aldc 16321         # s[16321] = "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)"
B8 00 44 # invokestatic 68    # qstack_empty__1(S, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty__1(S, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)"))
14 40 0B # aldc 16395         # s[16395] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.4-111.29: @ensures annotation failed"
CF       # assert             # assert !(qstack_empty__1(S, "qpush__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 111.13-111.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<qpop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5A             # code length = 90 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <256:cond_true>
A7 00 08 # goto +8            # goto <257:cond_false>
# <256:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <258:cond_end>
# <257:cond_false>
10 00    # bipush 0           # false
# <258:cond_end>
14 40 65 # aldc 16485         # s[16485] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 114.4-114.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 40 C1 # aldc 16577         # s[16577] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 114.4-114.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 40 D3 # aldc 16595         # s[16595] = "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.14-115.29)"
B8 00 44 # invokestatic 68    # qstack_empty__1(S, "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.14-115.29)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty__1(S, "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.14-115.29)"))
14 41 1C # aldc 16668         # s[16668] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.4-115.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 41 78 # aldc 16760         # s[16760] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.4-115.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(qstack_empty__1(S, "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 115.14-115.29)")) [failure message on stack]
15 00    # vload 0            # S
14 41 8A # aldc 16778         # s[16778] = "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 113.1-116.43)"
B8 00 42 # invokestatic 66    # qpop(S, "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 113.1-116.43)")
36 02    # vstore 2           # _result = qpop(S, "qpop__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 113.1-116.43)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <259:cond_true>
A7 00 08 # goto +8            # goto <260:cond_false>
# <259:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <261:cond_end>
# <260:cond_false>
10 00    # bipush 0           # false
# <261:cond_end>
14 41 D2 # aldc 16850         # s[16850] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 116.4-116.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <262:cond_true>
A7 00 08 # goto +8            # goto <263:cond_false>
# <262:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <264:cond_end>
# <263:cond_false>
10 00    # bipush 0           # false
# <264:cond_end>
14 42 2C # aldc 16940         # s[16940] = "/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 119.4-119.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 42 88 # aldc 17032         # s[17032] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 119.4-119.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 42 9A # aldc 17050         # s[17050] = "qstack_print__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 118.1-119.43)"
B8 00 43 # invokestatic 67    # qstack_print(S, "qstack_print__1 (/tmp/tmp.xGZ0CncQBB/stack_of_queue_of_string.c0: 118.1-119.43)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_closed__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <265:cond_true>
A7 00 08 # goto +8            # goto <266:cond_false>
# <265:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <267:cond_end>
# <266:cond_false>
10 00    # bipush 0           # false
# <267:cond_end>
14 42 EA # aldc 17130         # s[17130] = "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 43 3A # aldc 17210         # s[17210] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
B7 00 17 # invokenative 23    # file_closed(f)
36 02    # vstore 2           # _result = file_closed(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_read__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 27             # code length = 39 bytes
15 00    # vload 0            # path
B7 00 18 # invokenative 24    # file_read(path)
36 02    # vstore 2           # _result = file_read(path);
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <268:cond_true>
A7 00 08 # goto +8            # goto <269:cond_false>
# <268:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <270:cond_end>
# <269:cond_false>
15 02    # vload 2            # _result
14 43 4C # aldc 17228         # s[17228] = "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
B8 00 49 # invokestatic 73    # file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))
# <270:cond_end>
14 43 8E # aldc 17294         # s[17294] = "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<file_close__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <271:cond_true>
A7 00 08 # goto +8            # goto <272:cond_false>
# <271:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <273:cond_end>
# <272:cond_false>
10 00    # bipush 0           # false
# <273:cond_end>
14 43 DC # aldc 17372         # s[17372] = "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 44 2C # aldc 17452         # s[17452] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 44 3E # aldc 17470         # s[17470] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"))
14 44 81 # aldc 17537         # s[17537] = "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 44 D1 # aldc 17617         # s[17617] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 19 # invokenative 25    # file_close(f)
57       # pop                # (ignore result)
15 00    # vload 0            # f
14 44 E3 # aldc 17635         # s[17635] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 45 26 # aldc 17702         # s[17702] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # f
14 45 74 # aldc 17780         # s[17780] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 45 B7 # aldc 17847         # s[17847] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_eof__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <274:cond_true>
A7 00 08 # goto +8            # goto <275:cond_false>
# <274:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <276:cond_end>
# <275:cond_false>
10 00    # bipush 0           # false
# <276:cond_end>
14 46 05 # aldc 17925         # s[17925] = "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 46 55 # aldc 18005         # s[18005] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 46 67 # aldc 18023         # s[18023] = "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"))
14 46 A8 # aldc 18088         # s[18088] = "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 46 F8 # aldc 18168         # s[18168] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1A # invokenative 26    # file_eof(f)
36 02    # vstore 2           # _result = file_eof(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_readline__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <277:cond_true>
A7 00 08 # goto +8            # goto <278:cond_false>
# <277:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <279:cond_end>
# <278:cond_false>
10 00    # bipush 0           # false
# <279:cond_end>
14 47 0A # aldc 18186         # s[18186] = "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 47 5A # aldc 18266         # s[18266] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 47 6C # aldc 18284         # s[18284] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"))
14 47 B2 # aldc 18354         # s[18354] = "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 48 02 # aldc 18434         # s[18434] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")) [failure message on stack]
15 00    # vload 0            # f
14 48 14 # aldc 18452         # s[18452] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
B8 00 4C # invokestatic 76    # file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")
10 01    # bipush 1           # 
82       # ixor               # !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"))
14 48 5A # aldc 18522         # s[18522] = "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 48 AA # aldc 18602         # s[18602] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1B # invokenative 27    # file_readline(f)
36 02    # vstore 2           # _result = file_readline(f);
15 02    # vload 2            # _result
B0       # return             # 


#<is_whitespace>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
15 00    # vload 0            # c
10 20    # bipush 32          # ' '
9F 00 1A # if_cmpeq +26       # if (c == ' ') goto <280:cond_true>
A7 00 03 # goto +3            # goto <284:or>
# <284:or>
15 00    # vload 0            # c
10 09    # bipush 9           # '\t'
9F 00 10 # if_cmpeq +16       # if (c == '\t') goto <280:cond_true>
A7 00 03 # goto +3            # goto <283:or>
# <283:or>
15 00    # vload 0            # c
10 0A    # bipush 10          # '\n'
9F 00 06 # if_cmpeq +6        # if (c == '\n') goto <280:cond_true>
A7 00 08 # goto +8            # goto <281:cond_false>
# <280:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <282:cond_end>
# <281:cond_false>
15 00    # vload 0            # c
10 0D    # bipush 13          # '\r'
9F 00 06 # if_cmpeq +6        # if (c == '\r') goto <285:cond_true>
A7 00 08 # goto +8            # goto <286:cond_false>
# <285:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <287:cond_end>
# <286:cond_false>
10 00    # bipush 0           # false
# <287:cond_end>
# <282:cond_end>
36 02    # vstore 2           # _result = ((((c == ' ') || (c == '\t')) || (c == '\n')) || (c == '\r'));
15 02    # vload 2            # _result
B0       # return             # 


#<input_string>
03                # number of arguments = 3
06                # number of local variables = 6
01 4D             # code length = 333 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <288:cond_true>
A7 00 08 # goto +8            # goto <289:cond_false>
# <288:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <290:cond_end>
# <289:cond_false>
10 00    # bipush 0           # false
# <290:cond_end>
14 48 BC # aldc 18620         # s[18620] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 22.4-22.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 49 06 # aldc 18694         # s[18694] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 22.4-22.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # s
14 49 18 # aldc 18712         # s[18712] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 24.13-24.29)"
B8 00 19 # invokestatic 25    # string_length__1(s, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 24.13-24.29)")
36 03    # vstore 3           # len = string_length__1(s, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 24.13-24.29)");
10 00    # bipush 0           # 0
36 04    # vstore 4           # cur = 0;
# <291:loop>
A7 00 03 # goto +3            # goto <292:body>
# <292:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # cur
A4 00 06 # if_icmple +6       # if (0 <= cur) goto <294:cond_true>
A7 00 17 # goto +23           # goto <295:cond_false>
# <294:cond_true>
15 04    # vload 4            # cur
15 03    # vload 3            # len
A4 00 06 # if_icmple +6       # if (cur <= len) goto <297:cond_true>
A7 00 08 # goto +8            # goto <298:cond_false>
# <297:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <299:cond_end>
# <298:cond_false>
10 00    # bipush 0           # false
# <299:cond_end>
A7 00 05 # goto +5            # goto <296:cond_end>
# <295:cond_false>
10 00    # bipush 0           # false
# <296:cond_end>
14 49 54 # aldc 18772         # s[18772] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 27.8-27.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= cur) && (cur <= len)) [failure message on stack]
15 04    # vload 4            # cur
15 03    # vload 3            # len
A1 00 06 # if_icmplt +6       # if (cur < len) goto <300:then>
A7 00 E6 # goto +230          # goto <301:else>
# <300:then>
15 04    # vload 4            # cur
36 05    # vstore 5           # i = cur;
# <303:loop>
A7 00 03 # goto +3            # goto <304:body>
# <304:body>
15 04    # vload 4            # cur
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (cur <= i) goto <306:cond_true>
A7 00 17 # goto +23           # goto <307:cond_false>
# <306:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # len
A4 00 06 # if_icmple +6       # if (i <= len) goto <309:cond_true>
A7 00 08 # goto +8            # goto <310:cond_false>
# <309:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <311:cond_end>
# <310:cond_false>
10 00    # bipush 0           # false
# <311:cond_end>
A7 00 05 # goto +5            # goto <308:cond_end>
# <307:cond_false>
10 00    # bipush 0           # false
# <308:cond_end>
14 49 A3 # aldc 18851         # s[18851] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 31.12-31.48: @loop_invariant annotation failed"
CF       # assert             # assert ((cur <= i) && (i <= len)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # len
A1 00 06 # if_icmplt +6       # if (i < len) goto <315:and>
A7 00 25 # goto +37           # goto <313:else>
# <315:and>
15 00    # vload 0            # s
15 05    # vload 5            # i
14 49 F3 # aldc 18931         # s[18931] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.39-30.58)"
B8 00 1A # invokestatic 26    # string_charat__1(s, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.39-30.58)")
14 4A 2F # aldc 18991         # s[18991] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.25-30.59)"
B8 00 4E # invokestatic 78    # is_whitespace(string_charat__1(s, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.39-30.58)"), "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.25-30.59)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_whitespace(string_charat__1(s, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.39-30.58)"), "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 30.25-30.59)") == true) goto <312:then>
A7 00 0D # goto +13           # goto <313:else>
# <312:then>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <314:endif>
# <313:else>
A7 00 06 # goto +6            # break
# <314:endif>
A7 FF AA # goto -86           # goto <303:loop>
# <305:exit>
15 05    # vload 5            # i
36 04    # vstore 4           # cur = i;
# <316:loop>
A7 00 03 # goto +3            # goto <317:body>
# <317:body>
15 04    # vload 4            # cur
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (cur <= i) goto <319:cond_true>
A7 00 17 # goto +23           # goto <320:cond_false>
# <319:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # len
A4 00 06 # if_icmple +6       # if (i <= len) goto <322:cond_true>
A7 00 08 # goto +8            # goto <323:cond_false>
# <322:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <324:cond_end>
# <323:cond_false>
10 00    # bipush 0           # false
# <324:cond_end>
A7 00 05 # goto +5            # goto <321:cond_end>
# <320:cond_false>
10 00    # bipush 0           # false
# <321:cond_end>
14 4A 6B # aldc 19051         # s[19051] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 36.12-36.48: @loop_invariant annotation failed"
CF       # assert             # assert ((cur <= i) && (i <= len)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # len
A1 00 06 # if_icmplt +6       # if (i < len) goto <328:and>
A7 00 25 # goto +37           # goto <326:else>
# <328:and>
15 00    # vload 0            # s
15 05    # vload 5            # i
14 4A BB # aldc 19131         # s[19131] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.40-35.59)"
B8 00 1A # invokestatic 26    # string_charat__1(s, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.40-35.59)")
14 4A F7 # aldc 19191         # s[19191] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.26-35.60)"
B8 00 4E # invokestatic 78    # is_whitespace(string_charat__1(s, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.40-35.59)"), "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.26-35.60)")
10 01    # bipush 1           # true
9F 00 10 # if_cmpeq +16       # if (is_whitespace(string_charat__1(s, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.40-35.59)"), "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 35.26-35.60)") == true) goto <326:else>
A7 00 03 # goto +3            # goto <325:then>
# <325:then>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <327:endif>
# <326:else>
A7 00 06 # goto +6            # break
# <327:endif>
A7 FF AA # goto -86           # goto <316:loop>
# <318:exit>
15 04    # vload 4            # cur
15 05    # vload 5            # i
A1 00 06 # if_icmplt +6       # if (cur < i) goto <329:then>
A7 00 1B # goto +27           # goto <330:else>
# <329:then>
15 01    # vload 1            # Q
15 00    # vload 0            # s
15 04    # vload 4            # cur
15 05    # vload 5            # i
14 4B 33 # aldc 19251         # s[19251] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.27-38.48)"
B8 00 1C # invokestatic 28    # string_sub__1(s, cur, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.27-38.48)")
14 4B 6F # aldc 19311         # s[19311] = "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.20-38.49)"
B8 00 15 # invokestatic 21    # enq__1(Q, string_sub__1(s, cur, i, "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.27-38.48)"), "input_string (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 38.20-38.49)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <331:endif>
# <330:else>
# <331:endif>
15 05    # vload 5            # i
36 04    # vstore 4           # cur = i;
A7 00 06 # goto +6            # goto <302:endif>
# <301:else>
A7 00 06 # goto +6            # break
# <302:endif>
A7 FE E9 # goto -279          # goto <291:loop>
# <293:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_line>
02                # number of arguments = 2
03                # number of local variables = 3
00 50             # code length = 80 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <332:cond_true>
A7 00 08 # goto +8            # goto <333:cond_false>
# <332:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <334:cond_end>
# <333:cond_false>
10 00    # bipush 0           # false
# <334:cond_end>
14 4B AB # aldc 19371         # s[19371] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 47.4-47.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 4B F5 # aldc 19445         # s[19445] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 47.4-47.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
14 4C 07 # aldc 19463         # s[19463] = "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.14-48.19)"
B8 00 07 # invokestatic 7     # eof__1("input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.14-48.19)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.14-48.19)"))
14 4C 41 # aldc 19521         # s[19521] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.4-48.20: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 4C 8B # aldc 19595         # s[19595] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.4-48.20: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 48.14-48.19)")) [failure message on stack]
14 4C 9D # aldc 19613         # s[19613] = "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 50.17-50.27)"
B8 00 08 # invokestatic 8     # readline__1("input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 50.17-50.27)")
36 02    # vstore 2           # line = readline__1("input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 50.17-50.27)");
15 02    # vload 2            # line
15 00    # vload 0            # Q
14 4C D7 # aldc 19671         # s[19671] = "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 51.3-51.24)"
B8 00 4F # invokestatic 79    # input_string(line, Q, "input_line (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 51.3-51.24)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_file>
03                # number of arguments = 3
05                # number of local variables = 5
00 79             # code length = 121 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <335:cond_true>
A7 00 08 # goto +8            # goto <336:cond_false>
# <335:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <337:cond_end>
# <336:cond_false>
10 00    # bipush 0           # false
# <337:cond_end>
14 4D 10 # aldc 19728         # s[19728] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 57.4-57.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 4D 5A # aldc 19802         # s[19802] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 57.4-57.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # path
14 4D 6C # aldc 19820         # s[19820] = "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 59.17-59.32)"
B8 00 4A # invokestatic 74    # file_read__1(path, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 59.17-59.32)")
36 03    # vstore 3           # file = file_read__1(path, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 59.17-59.32)");
15 03    # vload 3            # file
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (file == NULL) goto <338:then>
A7 00 0A # goto +10           # goto <339:else>
# <338:then>
14 4D A6 # aldc 19878         # s[19878] = "Error: file does not exist"
BF       # athrow             # error "Error: file does not exist"
A7 00 03 # goto +3            # goto <340:endif>
# <339:else>
# <340:endif>
# <341:loop>
A7 00 03 # goto +3            # goto <342:body>
# <342:body>
15 03    # vload 3            # file
14 4D C1 # aldc 19905         # s[19905] = "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 61.11-61.25)"
B8 00 4C # invokestatic 76    # file_eof__1(file, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 61.11-61.25)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (file_eof__1(file, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 61.11-61.25)") == true) goto <345:else>
A7 00 03 # goto +3            # goto <344:then>
# <344:then>
15 03    # vload 3            # file
14 4D FB # aldc 19963         # s[19963] = "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 62.19-62.38)"
B8 00 4D # invokestatic 77    # file_readline__1(file, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 62.19-62.38)")
36 04    # vstore 4           # line = file_readline__1(file, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 62.19-62.38)");
15 04    # vload 4            # line
15 01    # vload 1            # Q
14 4E 35 # aldc 20021         # s[20021] = "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 63.5-63.26)"
B8 00 4F # invokestatic 79    # input_string(line, Q, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 63.5-63.26)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <346:endif>
# <345:else>
A7 00 06 # goto +6            # break
# <346:endif>
A7 FF D2 # goto -46           # goto <341:loop>
# <343:exit>
15 03    # vload 3            # file
14 4E 6E # aldc 20078         # s[20078] = "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 65.3-65.19)"
B8 00 4B # invokestatic 75    # file_close__1(file, "input_file (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 65.3-65.19)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_line__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 46             # code length = 70 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <347:cond_true>
A7 00 08 # goto +8            # goto <348:cond_false>
# <347:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <349:cond_end>
# <348:cond_false>
10 00    # bipush 0           # false
# <349:cond_end>
14 4E A7 # aldc 20135         # s[20135] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 78.6-78.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 4E F1 # aldc 20209         # s[20209] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 78.6-78.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
14 4F 03 # aldc 20227         # s[20227] = "input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.16-79.21)"
B8 00 07 # invokestatic 7     # eof__1("input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.16-79.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.16-79.21)"))
14 4F 40 # aldc 20288         # s[20288] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.6-79.22: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 4F 8A # aldc 20362         # s[20362] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.6-79.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 79.16-79.21)")) [failure message on stack]
15 00    # vload 0            # Q
14 4F 9C # aldc 20380         # s[20380] = "input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 77.1-79.28)"
B8 00 50 # invokestatic 80    # input_line(Q, "input_line__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 77.1-79.28)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_file__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 30             # code length = 48 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <350:cond_true>
A7 00 08 # goto +8            # goto <351:cond_false>
# <350:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <352:cond_end>
# <351:cond_false>
10 00    # bipush 0           # false
# <352:cond_end>
14 4F D8 # aldc 20440         # s[20440] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 83.6-83.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 50 22 # aldc 20514         # s[20514] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 83.6-83.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # path
15 01    # vload 1            # Q
14 50 34 # aldc 20532         # s[20532] = "input_file__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 82.1-83.30)"
B8 00 51 # invokestatic 81    # input_file(path, Q, "input_file__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 82.1-83.30)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_string__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 30             # code length = 48 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <353:cond_true>
A7 00 08 # goto +8            # goto <354:cond_false>
# <353:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <355:cond_end>
# <354:cond_false>
10 00    # bipush 0           # false
# <355:cond_end>
14 50 70 # aldc 20592         # s[20592] = "/tmp/tmp.xGZ0CncQBB/tokenize.c0: 87.6-87.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 50 BA # aldc 20666         # s[20666] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.xGZ0CncQBB/tokenize.c0: 87.6-87.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # Q
14 50 CC # aldc 20684         # s[20684] = "input_string__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 86.1-87.30)"
B8 00 4F # invokestatic 79    # input_string(s, Q, "input_string__1 (/tmp/tmp.xGZ0CncQBB/tokenize.c0: 86.1-87.30)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<parse_bool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1C # invokenative 28    # parse_bool(s)
36 02    # vstore 2           # _result = parse_bool(s);
15 02    # vload 2            # _result
B0       # return             # 


#<parse_int__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <356:cond_true>
A7 00 17 # goto +23           # goto <357:cond_false>
# <356:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <359:cond_true>
A7 00 08 # goto +8            # goto <360:cond_false>
# <359:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <361:cond_end>
# <360:cond_false>
10 00    # bipush 0           # false
# <361:cond_end>
A7 00 05 # goto +5            # goto <358:cond_end>
# <357:cond_false>
10 00    # bipush 0           # false
# <358:cond_end>
14 51 0A # aldc 20746         # s[20746] = "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 51 5B # aldc 20827         # s[20827] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1D # invokenative 29    # parse_int(s, base)
36 03    # vstore 3           # _result = parse_int(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<num_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1E # invokenative 30    # num_tokens(s)
36 02    # vstore 2           # _result = num_tokens(s);
15 02    # vload 2            # _result
B0       # return             # 


#<int_tokens__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <362:cond_true>
A7 00 17 # goto +23           # goto <363:cond_false>
# <362:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <365:cond_true>
A7 00 08 # goto +8            # goto <366:cond_false>
# <365:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <367:cond_end>
# <366:cond_false>
10 00    # bipush 0           # false
# <367:cond_end>
A7 00 05 # goto +5            # goto <364:cond_end>
# <363:cond_false>
10 00    # bipush 0           # false
# <364:cond_end>
14 51 6D # aldc 20845         # s[20845] = "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 51 BE # aldc 20926         # s[20926] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1F # invokenative 31    # int_tokens(s, base)
36 03    # vstore 3           # _result = int_tokens(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<parse_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 26             # code length = 38 bytes
15 00    # vload 0            # s
B7 00 20 # invokenative 32    # parse_tokens(s)
36 02    # vstore 2           # _result = parse_tokens(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 51 D0 # aldc 20944         # s[20944] = "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
B8 00 57 # invokestatic 87    # num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) goto <368:cond_true>
A7 00 08 # goto +8            # goto <369:cond_false>
# <368:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <370:cond_end>
# <369:cond_false>
10 00    # bipush 0           # false
# <370:cond_end>
14 52 16 # aldc 21014         # s[21014] = "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<parse_ints__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
15 00    # vload 0            # s
15 01    # vload 1            # base
14 52 65 # aldc 21093         # s[21093] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
B8 00 58 # invokestatic 88    # int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)")
14 52 A9 # aldc 21161         # s[21161] = "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 52 FA # aldc 21242         # s[21242] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)") [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 21 # invokenative 33    # parse_ints(s, base)
36 03    # vstore 3           # _result = parse_ints(s, base);
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 53 0C # aldc 21260         # s[21260] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
B8 00 57 # invokestatic 87    # num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) goto <371:cond_true>
A7 00 08 # goto +8            # goto <372:cond_false>
# <371:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <373:cond_end>
# <372:cond_false>
10 00    # bipush 0           # false
# <373:cond_end>
14 53 50 # aldc 21328         # s[21328] = "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<args_flag__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <374:cond_true>
A7 00 08 # goto +8            # goto <375:cond_false>
# <374:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <376:cond_end>
# <375:cond_false>
10 00    # bipush 0           # false
# <376:cond_end>
14 53 9F # aldc 21407         # s[21407] = "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 53 ED # aldc 21485         # s[21485] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 22 # invokenative 34    # args_flag(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_int__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <377:cond_true>
A7 00 08 # goto +8            # goto <378:cond_false>
# <377:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <379:cond_end>
# <378:cond_false>
10 00    # bipush 0           # false
# <379:cond_end>
14 53 FF # aldc 21503         # s[21503] = "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 54 4F # aldc 21583         # s[21583] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 23 # invokenative 35    # args_int(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_string__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <380:cond_true>
A7 00 08 # goto +8            # goto <381:cond_false>
# <380:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <382:cond_end>
# <381:cond_false>
10 00    # bipush 0           # false
# <382:cond_end>
14 54 61 # aldc 21601         # s[21601] = "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 54 B1 # aldc 21681         # s[21681] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 24 # invokenative 36    # args_string(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_parse__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 32             # code length = 50 bytes
B7 00 25 # invokenative 37    # args_parse()
36 01    # vstore 1           # _result = args_parse();
15 01    # vload 1            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <383:cond_true>
A7 00 08 # goto +8            # goto <384:cond_false>
# <383:cond_true>
10 01    # bipush 1           # true
A7 00 1B # goto +27           # goto <385:cond_end>
# <384:cond_false>
15 01    # vload 1            # _result
62 00    # aaddf 0            # &_result->argc
2E       # imload             # _result->argc
15 01    # vload 1            # _result
62 08    # aaddf 8            # &_result->argv
2F       # amload             # _result->argv
BE       # arraylength        # \length(_result->argv)
9F 00 06 # if_cmpeq +6        # if (_result->argc == \length(_result->argv)) goto <386:cond_true>
A7 00 08 # goto +8            # goto <387:cond_false>
# <386:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0           # false
# <388:cond_end>
# <385:cond_end>
14 54 C3 # aldc 21699         # s[21699] = "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || (_result->argc == \length(_result->argv))) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 55 11 # aldc 21777         # s[21777] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 5F # invokestatic 95    # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <389:cond_true>
A7 00 08 # goto +8            # goto <390:cond_false>
# <389:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <391:cond_end>
# <390:cond_false>
10 00    # bipush 0           # false
# <391:cond_end>
14 55 4F # aldc 21839         # s[21839] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 55 9B # aldc 21915         # s[21915] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 61 # invokestatic 97    # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <392:cond_true>
A7 00 08 # goto +8            # goto <393:cond_false>
# <392:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <394:cond_end>
# <393:cond_false>
10 00    # bipush 0           # false
# <394:cond_end>
14 55 DA # aldc 21978         # s[21978] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 56 28 # aldc 22056         # s[22056] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 63 # invokestatic 99    # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <395:cond_true>
A7 00 08 # goto +8            # goto <396:cond_false>
# <395:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <397:cond_end>
# <396:cond_false>
10 00    # bipush 0           # false
# <397:cond_end>
14 56 67 # aldc 22119         # s[22119] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 5B 10 # aldc 23312         # s[23312] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 64 # invokestatic 100   # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <464:cond_true>
A7 00 08 # goto +8            # goto <465:cond_false>
# <464:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <466:cond_end>
# <465:cond_false>
10 00    # bipush 0           # false
# <466:cond_end>
14 5B 49 # aldc 23369         # s[23369] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 5B 99 # aldc 23449         # s[23449] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <467:cond_true>
A7 00 0B # goto +11           # goto <468:cond_false>
# <467:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <469:cond_end>
# <468:cond_false>
15 00    # vload 0            # x
# <469:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <470:cond_true>
A7 00 08 # goto +8            # goto <471:cond_false>
# <470:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <472:cond_end>
# <471:cond_false>
10 00    # bipush 0           # false
# <472:cond_end>
14 5B AB # aldc 23467         # s[23467] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 56 B5 # aldc 22197         # s[22197] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 64 # invokestatic 100   # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <398:cond_true>
A7 00 08 # goto +8            # goto <399:cond_false>
# <398:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <400:cond_end>
# <399:cond_false>
10 00    # bipush 0           # false
# <400:cond_end>
14 56 F1 # aldc 22257         # s[22257] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 57 41 # aldc 22337         # s[22337] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 57 53 # aldc 22355         # s[22355] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 65 # invokestatic 101   # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <401:cond_true>
A7 00 08 # goto +8            # goto <402:cond_false>
# <401:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <403:cond_end>
# <402:cond_false>
10 00    # bipush 0           # false
# <403:cond_end>
14 57 8E # aldc 22414         # s[22414] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <407:cond_true>
A7 00 0B # goto +11           # goto <408:cond_false>
# <407:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <409:cond_end>
# <408:cond_false>
15 00    # vload 0            # x
# <409:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <404:cond_true>
A7 00 08 # goto +8            # goto <405:cond_false>
# <404:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <406:cond_end>
# <405:cond_false>
10 00    # bipush 0           # false
# <406:cond_end>
14 57 DC # aldc 22492         # s[22492] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <434:cond_true>
A7 00 08 # goto +8            # goto <435:cond_false>
# <434:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <436:cond_end>
# <435:cond_false>
15 01    # vload 1            # y
# <436:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <437:cond_true>
A7 00 08 # goto +8            # goto <438:cond_false>
# <437:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <439:cond_end>
# <438:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <440:cond_true>
A7 00 08 # goto +8            # goto <441:cond_false>
# <440:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <442:cond_end>
# <441:cond_false>
10 00    # bipush 0           # false
# <442:cond_end>
# <439:cond_end>
14 59 D8 # aldc 23000         # s[23000] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <443:cond_true>
A7 00 17 # goto +23           # goto <444:cond_false>
# <443:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <446:cond_true>
A7 00 08 # goto +8            # goto <447:cond_false>
# <446:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <448:cond_end>
# <447:cond_false>
10 00    # bipush 0           # false
# <448:cond_end>
A7 00 05 # goto +5            # goto <445:cond_end>
# <444:cond_false>
10 00    # bipush 0           # false
# <445:cond_end>
14 5A 26 # aldc 23078         # s[23078] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 58 2A # aldc 22570         # s[22570] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 67 # invokestatic 103   # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <410:cond_true>
A7 00 08 # goto +8            # goto <411:cond_false>
# <410:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <412:cond_end>
# <411:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <413:cond_true>
A7 00 08 # goto +8            # goto <414:cond_false>
# <413:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <415:cond_end>
# <414:cond_false>
10 00    # bipush 0           # false
# <415:cond_end>
# <412:cond_end>
14 58 65 # aldc 22629         # s[22629] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <416:cond_true>
A7 00 17 # goto +23           # goto <417:cond_false>
# <416:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <419:cond_true>
A7 00 08 # goto +8            # goto <420:cond_false>
# <419:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <421:cond_end>
# <420:cond_false>
10 00    # bipush 0           # false
# <421:cond_end>
A7 00 05 # goto +5            # goto <418:cond_end>
# <417:cond_false>
10 00    # bipush 0           # false
# <418:cond_end>
14 58 B3 # aldc 22707         # s[22707] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <449:cond_true>
A7 00 08 # goto +8            # goto <450:cond_false>
# <449:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <451:cond_end>
# <450:cond_false>
15 00    # vload 0            # x
# <451:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <452:cond_true>
A7 00 08 # goto +8            # goto <453:cond_false>
# <452:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <454:cond_end>
# <453:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <455:cond_true>
A7 00 08 # goto +8            # goto <456:cond_false>
# <455:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <457:cond_end>
# <456:cond_false>
10 00    # bipush 0           # false
# <457:cond_end>
# <454:cond_end>
14 5A 74 # aldc 23156         # s[23156] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <458:cond_true>
A7 00 17 # goto +23           # goto <459:cond_false>
# <458:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <461:cond_true>
A7 00 08 # goto +8            # goto <462:cond_false>
# <461:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <463:cond_end>
# <462:cond_false>
10 00    # bipush 0           # false
# <463:cond_end>
A7 00 05 # goto +5            # goto <460:cond_end>
# <459:cond_false>
10 00    # bipush 0           # false
# <460:cond_end>
14 5A C2 # aldc 23234         # s[23234] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 59 01 # aldc 22785         # s[22785] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 69 # invokestatic 105   # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <422:cond_true>
A7 00 08 # goto +8            # goto <423:cond_false>
# <422:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <424:cond_end>
# <423:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <425:cond_true>
A7 00 08 # goto +8            # goto <426:cond_false>
# <425:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <427:cond_end>
# <426:cond_false>
10 00    # bipush 0           # false
# <427:cond_end>
# <424:cond_end>
14 59 3C # aldc 22844         # s[22844] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <428:cond_true>
A7 00 17 # goto +23           # goto <429:cond_false>
# <428:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <431:cond_true>
A7 00 08 # goto +8            # goto <432:cond_false>
# <431:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <433:cond_end>
# <432:cond_false>
10 00    # bipush 0           # false
# <433:cond_end>
A7 00 05 # goto +5            # goto <430:cond_end>
# <429:cond_false>
10 00    # bipush 0           # false
# <430:cond_end>
14 59 8A # aldc 22922         # s[22922] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 5D 5F # aldc 23903         # s[23903] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 60 # invokestatic 96    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <487:loop>
A7 00 03 # goto +3            # goto <488:body>
# <488:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <490:cond_true>
A7 00 17 # goto +23           # goto <491:cond_false>
# <490:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <493:cond_true>
A7 00 08 # goto +8            # goto <494:cond_false>
# <493:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <495:cond_end>
# <494:cond_false>
10 00    # bipush 0           # false
# <495:cond_end>
A7 00 05 # goto +5            # goto <492:cond_end>
# <491:cond_false>
10 00    # bipush 0           # false
# <492:cond_end>
14 5D 9C # aldc 23964         # s[23964] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <496:then>
A7 00 2B # goto +43           # goto <497:else>
# <496:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 5D F1 # aldc 24049         # s[24049] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 6C # invokestatic 108   # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <498:endif>
# <497:else>
A7 00 06 # goto +6            # break
# <498:endif>
A7 FF A4 # goto -92           # goto <487:loop>
# <489:exit>
15 04    # vload 4            # s
14 5E 2E # aldc 24110         # s[24110] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 25 # invokestatic 37    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 5E 6B # aldc 24171         # s[24171] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 19 # invokestatic 25    # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 5E A8 # aldc 24232         # s[24232] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 60 # invokestatic 96    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <499:cond_true>
A7 00 08 # goto +8            # goto <500:cond_false>
# <499:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <501:cond_end>
# <500:cond_false>
10 00    # bipush 0           # false
# <501:cond_end>
14 5E E5 # aldc 24293         # s[24293] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <473:cond_true>
A7 00 17 # goto +23           # goto <474:cond_false>
# <473:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <476:cond_true>
A7 00 08 # goto +8            # goto <477:cond_false>
# <476:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <478:cond_end>
# <477:cond_false>
10 00    # bipush 0           # false
# <478:cond_end>
A7 00 05 # goto +5            # goto <475:cond_end>
# <474:cond_false>
10 00    # bipush 0           # false
# <475:cond_end>
14 5B F9 # aldc 23545         # s[23545] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 5C 49 # aldc 23625         # s[23625] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <482:and>
A7 00 26 # goto +38           # goto <480:else>
# <482:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <479:then>
A7 00 1C # goto +28           # goto <480:else>
# <479:then>
10 30    # bipush 48          # '0'
14 5C 5B # aldc 23643         # s[23643] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 26 # invokestatic 38    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 5C 9C # aldc 23708         # s[23708] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 27 # invokestatic 39    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <481:endif>
# <480:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <486:and>
A7 00 29 # goto +41           # goto <484:else>
# <486:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <483:then>
A7 00 1F # goto +31           # goto <484:else>
# <483:then>
10 41    # bipush 65          # 'A'
14 5C DD # aldc 23773         # s[23773] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 26 # invokestatic 38    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 5D 1E # aldc 23838         # s[23838] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 27 # invokestatic 39    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <485:endif>
# <484:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <485:endif>
# <481:endif>


#<pow>
03                # number of arguments = 3
04                # number of local variables = 4
00 3D             # code length = 61 bytes
15 00    # vload 0            # x
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (x == 0) goto <502:then>
A7 00 0D # goto +13           # goto <503:else>
# <502:then>
10 00    # bipush 0           # 0
36 03    # vstore 3           # _result = 0;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <504:endif>
# <503:else>
# <504:endif>
15 01    # vload 1            # y
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (y == 0) goto <505:then>
A7 00 0D # goto +13           # goto <506:else>
# <505:then>
10 01    # bipush 1           # 1
36 03    # vstore 3           # _result = 1;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <507:endif>
# <506:else>
# <507:endif>
15 00    # vload 0            # x
15 00    # vload 0            # x
15 01    # vload 1            # y
10 01    # bipush 1           # 1
64       # isub               # (y - 1)
14 5F 33 # aldc 24371         # s[24371] = "pow (clac.c0: 30.12-30.22)"
B8 00 6D # invokestatic 109   # pow(x, (y - 1), "pow (clac.c0: 30.12-30.22)")
68       # imul               # (x * pow(x, (y - 1), "pow (clac.c0: 30.12-30.22)"))
36 03    # vstore 3           # _result = (x * pow(x, (y - 1), "pow (clac.c0: 30.12-30.22)"));
15 03    # vload 3            # _result
B0       # return             # 


#<countQ>
02                # number of arguments = 2
06                # number of local variables = 6
00 9B             # code length = 155 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <508:cond_true>
A7 00 08 # goto +8            # goto <509:cond_false>
# <508:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <510:cond_end>
# <509:cond_false>
10 00    # bipush 0           # false
# <510:cond_end>
14 5F 4E # aldc 24398         # s[24398] = "clac.c0: 34.4-34.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 5F 80 # aldc 24448         # s[24448] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac.c0: 34.4-34.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
14 5F 92 # aldc 24466         # s[24466] = "countQ (clac.c0: 36.18-36.29)"
B8 00 14 # invokestatic 20    # queue_new__1("countQ (clac.c0: 36.18-36.29)")
36 03    # vstore 3           # temp = queue_new__1("countQ (clac.c0: 36.18-36.29)");
10 00    # bipush 0           # 0
36 04    # vstore 4           # count = 0;
# <511:loop>
A7 00 03 # goto +3            # goto <512:body>
# <512:body>
15 00    # vload 0            # Q
14 5F B0 # aldc 24496         # s[24496] = "countQ (clac.c0: 38.11-38.25)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "countQ (clac.c0: 38.11-38.25)")
10 01    # bipush 1           # true
9F 00 25 # if_cmpeq +37       # if (queue_empty__1(Q, "countQ (clac.c0: 38.11-38.25)") == true) goto <515:else>
A7 00 03 # goto +3            # goto <514:then>
# <514:then>
15 00    # vload 0            # Q
14 5F CE # aldc 24526         # s[24526] = "countQ (clac.c0: 39.18-39.24)"
B8 00 16 # invokestatic 22    # deq__1(Q, "countQ (clac.c0: 39.18-39.24)")
36 05    # vstore 5           # ele = deq__1(Q, "countQ (clac.c0: 39.18-39.24)");
15 04    # vload 4            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # count += 1;
15 03    # vload 3            # temp
15 05    # vload 5            # ele
14 5F EC # aldc 24556         # s[24556] = "countQ (clac.c0: 41.5-41.18)"
B8 00 15 # invokestatic 21    # enq__1(temp, ele, "countQ (clac.c0: 41.5-41.18)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <516:endif>
# <515:else>
A7 00 06 # goto +6            # break
# <516:endif>
A7 FF CB # goto -53           # goto <511:loop>
# <513:exit>
# <517:loop>
A7 00 03 # goto +3            # goto <518:body>
# <518:body>
15 03    # vload 3            # temp
14 60 09 # aldc 24585         # s[24585] = "countQ (clac.c0: 43.11-43.28)"
B8 00 12 # invokestatic 18    # queue_empty__1(temp, "countQ (clac.c0: 43.11-43.28)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (queue_empty__1(temp, "countQ (clac.c0: 43.11-43.28)") == true) goto <521:else>
A7 00 03 # goto +3            # goto <520:then>
# <520:then>
15 03    # vload 3            # temp
14 60 27 # aldc 24615         # s[24615] = "countQ (clac.c0: 44.18-44.27)"
B8 00 16 # invokestatic 22    # deq__1(temp, "countQ (clac.c0: 44.18-44.27)")
36 05    # vstore 5           # ele = deq__1(temp, "countQ (clac.c0: 44.18-44.27)");
15 00    # vload 0            # Q
15 05    # vload 5            # ele
14 60 45 # aldc 24645         # s[24645] = "countQ (clac.c0: 45.5-45.15)"
B8 00 15 # invokestatic 21    # enq__1(Q, ele, "countQ (clac.c0: 45.5-45.15)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <522:endif>
# <521:else>
A7 00 06 # goto +6            # break
# <522:endif>
A7 FF D2 # goto -46           # goto <517:loop>
# <519:exit>
15 04    # vload 4            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 


#<countS>
02                # number of arguments = 2
06                # number of local variables = 6
00 9B             # code length = 155 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <523:cond_true>
A7 00 08 # goto +8            # goto <524:cond_false>
# <523:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <525:cond_end>
# <524:cond_false>
10 00    # bipush 0           # false
# <525:cond_end>
14 60 62 # aldc 24674         # s[24674] = "clac.c0: 58.4-58.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 60 94 # aldc 24724         # s[24724] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac.c0: 58.4-58.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
14 60 A6 # aldc 24742         # s[24742] = "countS (clac.c0: 60.18-60.29)"
B8 00 39 # invokestatic 57    # stack_new__1("countS (clac.c0: 60.18-60.29)")
36 03    # vstore 3           # temp = stack_new__1("countS (clac.c0: 60.18-60.29)");
10 00    # bipush 0           # 0
36 04    # vstore 4           # count = 0;
# <526:loop>
A7 00 03 # goto +3            # goto <527:body>
# <527:body>
15 00    # vload 0            # S
14 60 C4 # aldc 24772         # s[24772] = "countS (clac.c0: 62.11-62.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "countS (clac.c0: 62.11-62.25)")
10 01    # bipush 1           # true
9F 00 25 # if_cmpeq +37       # if (stack_empty__1(S, "countS (clac.c0: 62.11-62.25)") == true) goto <530:else>
A7 00 03 # goto +3            # goto <529:then>
# <529:then>
15 00    # vload 0            # S
14 60 E2 # aldc 24802         # s[24802] = "countS (clac.c0: 63.15-63.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "countS (clac.c0: 63.15-63.21)")
36 05    # vstore 5           # ele = pop__1(S, "countS (clac.c0: 63.15-63.21)");
15 04    # vload 4            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # count += 1;
15 03    # vload 3            # temp
15 05    # vload 5            # ele
14 61 00 # aldc 24832         # s[24832] = "countS (clac.c0: 65.5-65.19)"
B8 00 3A # invokestatic 58    # push__1(temp, ele, "countS (clac.c0: 65.5-65.19)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <531:endif>
# <530:else>
A7 00 06 # goto +6            # break
# <531:endif>
A7 FF CB # goto -53           # goto <526:loop>
# <528:exit>
# <532:loop>
A7 00 03 # goto +3            # goto <533:body>
# <533:body>
15 03    # vload 3            # temp
14 61 1D # aldc 24861         # s[24861] = "countS (clac.c0: 67.11-67.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(temp, "countS (clac.c0: 67.11-67.28)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (stack_empty__1(temp, "countS (clac.c0: 67.11-67.28)") == true) goto <536:else>
A7 00 03 # goto +3            # goto <535:then>
# <535:then>
15 03    # vload 3            # temp
14 61 3B # aldc 24891         # s[24891] = "countS (clac.c0: 68.15-68.24)"
B8 00 3B # invokestatic 59    # pop__1(temp, "countS (clac.c0: 68.15-68.24)")
36 05    # vstore 5           # ele = pop__1(temp, "countS (clac.c0: 68.15-68.24)");
15 00    # vload 0            # S
15 05    # vload 5            # ele
14 61 59 # aldc 24921         # s[24921] = "countS (clac.c0: 69.5-69.16)"
B8 00 3A # invokestatic 58    # push__1(S, ele, "countS (clac.c0: 69.5-69.16)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <537:endif>
# <536:else>
A7 00 06 # goto +6            # break
# <537:endif>
A7 FF D2 # goto -46           # goto <532:loop>
# <534:exit>
15 04    # vload 4            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 


#<picknS>
03                # number of arguments = 3
09                # number of local variables = 9
00 D3             # code length = 211 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <538:cond_true>
A7 00 08 # goto +8            # goto <539:cond_false>
# <538:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <540:cond_end>
# <539:cond_false>
10 00    # bipush 0           # false
# <540:cond_end>
14 61 76 # aldc 24950         # s[24950] = "clac.c0: 75.4-75.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 61 A8 # aldc 25000         # s[25000] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac.c0: 75.4-75.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
14 61 BA # aldc 25018         # s[25018] = "picknS (clac.c0: 77.18-77.29)"
B8 00 39 # invokestatic 57    # stack_new__1("picknS (clac.c0: 77.18-77.29)")
36 04    # vstore 4           # temp = stack_new__1("picknS (clac.c0: 77.18-77.29)");
10 00    # bipush 0           # 0
36 05    # vstore 5           # count = 0;
10 00    # bipush 0           # 0
36 06    # vstore 6           # xn = 0;
10 00    # bipush 0           # false
36 07    # vstore 7           # flag = false;
# <541:loop>
A7 00 03 # goto +3            # goto <542:body>
# <542:body>
15 00    # vload 0            # S
14 61 D8 # aldc 25048         # s[25048] = "picknS (clac.c0: 81.11-81.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "picknS (clac.c0: 81.11-81.25)")
10 01    # bipush 1           # true
9F 00 44 # if_cmpeq +68       # if (stack_empty__1(S, "picknS (clac.c0: 81.11-81.25)") == true) goto <545:else>
A7 00 03 # goto +3            # goto <547:and>
# <547:and>
15 07    # vload 7            # flag
10 01    # bipush 1           # true
9F 00 3A # if_cmpeq +58       # if (flag == true) goto <545:else>
A7 00 03 # goto +3            # goto <544:then>
# <544:then>
15 00    # vload 0            # S
14 61 F6 # aldc 25078         # s[25078] = "picknS (clac.c0: 82.15-82.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "picknS (clac.c0: 82.15-82.21)")
36 08    # vstore 8           # ele = pop__1(S, "picknS (clac.c0: 82.15-82.21)");
15 05    # vload 5            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # count += 1;
15 04    # vload 4            # temp
15 08    # vload 8            # ele
14 62 14 # aldc 25108         # s[25108] = "picknS (clac.c0: 84.5-84.19)"
B8 00 3A # invokestatic 58    # push__1(temp, ele, "picknS (clac.c0: 84.5-84.19)")
57       # pop                # (ignore result)
15 05    # vload 5            # count
15 01    # vload 1            # n
9F 00 06 # if_cmpeq +6        # if (count == n) goto <548:then>
A7 00 0E # goto +14           # goto <549:else>
# <548:then>
15 08    # vload 8            # ele
36 06    # vstore 6           # xn = ele;
10 01    # bipush 1           # true
36 07    # vstore 7           # flag = true;
A7 00 03 # goto +3            # goto <550:endif>
# <549:else>
# <550:endif>
A7 00 06 # goto +6            # goto <546:endif>
# <545:else>
A7 00 06 # goto +6            # break
# <546:endif>
A7 FF AC # goto -84           # goto <541:loop>
# <543:exit>
15 07    # vload 7            # flag
10 01    # bipush 1           # true
9F 00 0D # if_cmpeq +13       # if (flag == true) goto <552:else>
A7 00 03 # goto +3            # goto <551:then>
# <551:then>
14 62 31 # aldc 25137         # s[25137] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
A7 00 03 # goto +3            # goto <553:endif>
# <552:else>
# <553:endif>
# <554:loop>
A7 00 03 # goto +3            # goto <555:body>
# <555:body>
15 04    # vload 4            # temp
14 62 45 # aldc 25157         # s[25157] = "picknS (clac.c0: 93.11-93.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(temp, "picknS (clac.c0: 93.11-93.28)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (stack_empty__1(temp, "picknS (clac.c0: 93.11-93.28)") == true) goto <558:else>
A7 00 03 # goto +3            # goto <557:then>
# <557:then>
15 04    # vload 4            # temp
14 62 63 # aldc 25187         # s[25187] = "picknS (clac.c0: 94.15-94.24)"
B8 00 3B # invokestatic 59    # pop__1(temp, "picknS (clac.c0: 94.15-94.24)")
36 08    # vstore 8           # ele = pop__1(temp, "picknS (clac.c0: 94.15-94.24)");
15 00    # vload 0            # S
15 08    # vload 8            # ele
14 62 81 # aldc 25217         # s[25217] = "picknS (clac.c0: 95.5-95.16)"
B8 00 3A # invokestatic 58    # push__1(S, ele, "picknS (clac.c0: 95.5-95.16)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <559:endif>
# <558:else>
A7 00 06 # goto +6            # break
# <559:endif>
A7 FF D2 # goto -46           # goto <554:loop>
# <556:exit>
15 06    # vload 6            # xn
36 03    # vstore 3           # _result = xn;
15 03    # vload 3            # _result
B0       # return             # 


#<checksc>
02                # number of arguments = 2
05                # number of local variables = 5
00 74             # code length = 116 bytes
15 00    # vload 0            # q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (q != NULL) goto <560:cond_true>
A7 00 08 # goto +8            # goto <561:cond_false>
# <560:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <562:cond_end>
# <561:cond_false>
10 00    # bipush 0           # false
# <562:cond_end>
14 62 9E # aldc 25246         # s[25246] = "clac.c0: 101.4-101.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 62 D2 # aldc 25298         # s[25298] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac.c0: 101.4-101.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (q != NULL) [failure message on stack]
10 00    # bipush 0           # false
36 03    # vstore 3           # res = false;
# <563:loop>
A7 00 03 # goto +3            # goto <564:body>
# <564:body>
15 00    # vload 0            # q
14 62 E4 # aldc 25316         # s[25316] = "checksc (clac.c0: 104.11-104.25)"
B8 00 12 # invokestatic 18    # queue_empty__1(q, "checksc (clac.c0: 104.11-104.25)")
10 01    # bipush 1           # true
9F 00 37 # if_cmpeq +55       # if (queue_empty__1(q, "checksc (clac.c0: 104.11-104.25)") == true) goto <567:else>
A7 00 03 # goto +3            # goto <569:and>
# <569:and>
15 03    # vload 3            # res
10 01    # bipush 1           # true
9F 00 2D # if_cmpeq +45       # if (res == true) goto <567:else>
A7 00 03 # goto +3            # goto <566:then>
# <566:then>
15 00    # vload 0            # q
14 63 05 # aldc 25349         # s[25349] = "checksc (clac.c0: 105.18-105.24)"
B8 00 16 # invokestatic 22    # deq__1(q, "checksc (clac.c0: 105.18-105.24)")
36 04    # vstore 4           # ele = deq__1(q, "checksc (clac.c0: 105.18-105.24)");
15 04    # vload 4            # ele
14 63 26 # aldc 25382         # s[25382] = ";"
14 63 28 # aldc 25384         # s[25384] = "checksc (clac.c0: 106.9-106.30)"
B8 00 1D # invokestatic 29    # string_equal__1(ele, ";", "checksc (clac.c0: 106.9-106.30)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(ele, ";", "checksc (clac.c0: 106.9-106.30)") == true) goto <570:then>
A7 00 0A # goto +10           # goto <571:else>
# <570:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # res = true;
A7 00 03 # goto +3            # goto <572:endif>
# <571:else>
# <572:endif>
A7 00 06 # goto +6            # goto <568:endif>
# <567:else>
A7 00 06 # goto +6            # break
# <568:endif>
A7 FF B9 # goto -71           # goto <563:loop>
# <565:exit>
15 03    # vload 3            # res
36 02    # vstore 2           # _result = res;
15 02    # vload 2            # _result
B0       # return             # 


#<init_state>
01                # number of arguments = 1
03                # number of local variables = 3
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(def)
36 02    # vstore 2           # df = alloc(def);
15 02    # vload 2            # df
62 00    # aaddf 0            # &df->dict
14 63 48 # aldc 25416         # s[25416] = "init_state (clac.c0: 134.14-134.24)"
B8 00 2E # invokestatic 46    # dict_new__1("init_state (clac.c0: 134.14-134.24)")
4F       # amstore            # df->dict = dict_new__1("init_state (clac.c0: 134.14-134.24)");
15 02    # vload 2            # df
62 08    # aaddf 8            # &df->remainder
14 63 6C # aldc 25452         # s[25452] = "init_state (clac.c0: 135.19-135.31)"
B8 00 45 # invokestatic 69    # qstack_new__1("init_state (clac.c0: 135.19-135.31)")
4F       # amstore            # df->remainder = qstack_new__1("init_state (clac.c0: 135.19-135.31)");
15 02    # vload 2            # df
36 01    # vstore 1           # _result = df;
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <573:cond_true>
A7 00 08 # goto +8            # goto <574:cond_false>
# <573:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <575:cond_end>
# <574:cond_false>
10 00    # bipush 0           # false
# <575:cond_end>
14 63 90 # aldc 25488         # s[25488] = "clac.c0: 131.4-131.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<eval>
04                # number of arguments = 4
0B                # number of local variables = 11
09 AC             # code length = 2476 bytes
15 00    # vload 0            # inputQ
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (inputQ != NULL) goto <579:and>
A7 00 1F # goto +31           # goto <577:cond_false>
# <579:and>
15 01    # vload 1            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <576:cond_true>
A7 00 16 # goto +22           # goto <577:cond_false>
# <576:cond_true>
15 02    # vload 2            # ST
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ST != NULL) goto <580:cond_true>
A7 00 08 # goto +8            # goto <581:cond_false>
# <580:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <582:cond_end>
# <581:cond_false>
10 00    # bipush 0           # false
# <582:cond_end>
A7 00 05 # goto +5            # goto <578:cond_end>
# <577:cond_false>
10 00    # bipush 0           # false
# <578:cond_end>
14 63 C2 # aldc 25538         # s[25538] = "clac.c0: 145.4-145.55: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 63 F6 # aldc 25590         # s[25590] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac.c0: 145.4-145.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((inputQ != NULL) && (S != NULL)) && (ST != NULL)) [failure message on stack]
15 00    # vload 0            # inputQ
36 05    # vstore 5           # Q = inputQ;
# <583:loop>
A7 00 03 # goto +3            # goto <584:body>
# <584:body>
15 05    # vload 5            # Q
14 64 08 # aldc 25608         # s[25608] = "eval (clac.c0: 152.11-152.25)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "eval (clac.c0: 152.11-152.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "eval (clac.c0: 152.11-152.25)") == true) goto <589:or>
A7 00 16 # goto +22           # goto <586:then>
# <589:or>
15 02    # vload 2            # ST
62 08    # aaddf 8            # &ST->remainder
2F       # amload             # ST->remainder
14 64 26 # aldc 25638         # s[25638] = "eval (clac.c0: 152.30-152.57)"
B8 00 44 # invokestatic 68    # qstack_empty__1(ST->remainder, "eval (clac.c0: 152.30-152.57)")
10 01    # bipush 1           # true
9F 09 2A # if_cmpeq +2346     # if (qstack_empty__1(ST->remainder, "eval (clac.c0: 152.30-152.57)") == true) goto <587:else>
A7 00 03 # goto +3            # goto <586:then>
# <586:then>
15 05    # vload 5            # Q
14 64 44 # aldc 25668         # s[25668] = "eval (clac.c0: 160.9-160.23)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "eval (clac.c0: 160.9-160.23)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "eval (clac.c0: 160.9-160.23)") == true) goto <590:then>
A7 00 13 # goto +19           # goto <591:else>
# <590:then>
15 02    # vload 2            # ST
62 08    # aaddf 8            # &ST->remainder
2F       # amload             # ST->remainder
14 64 61 # aldc 25697         # s[25697] = "eval (clac.c0: 162.11-162.30)"
B8 00 47 # invokestatic 71    # qpop__1(ST->remainder, "eval (clac.c0: 162.11-162.30)")
36 05    # vstore 5           # Q = qpop__1(ST->remainder, "eval (clac.c0: 162.11-162.30)");
A7 09 04 # goto +2308         # goto <592:endif>
# <591:else>
15 05    # vload 5            # Q
14 64 7F # aldc 25727         # s[25727] = "eval (clac.c0: 164.20-164.26)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 164.20-164.26)")
36 06    # vstore 6           # tok = deq__1(Q, "eval (clac.c0: 164.20-164.26)");
15 06    # vload 6            # tok
14 64 9D # aldc 25757         # s[25757] = ":"
14 64 9F # aldc 25759         # s[25759] = "eval (clac.c0: 165.11-165.32)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, ":", "eval (clac.c0: 165.11-165.32)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, ":", "eval (clac.c0: 165.11-165.32)") == true) goto <593:then>
A7 01 C5 # goto +453          # goto <594:else>
# <593:then>
15 05    # vload 5            # Q
14 64 BD # aldc 25789         # s[25789] = "eval (clac.c0: 166.22-166.45)"
B8 00 18 # invokestatic 24    # queue_read_only_copy__1(Q, "eval (clac.c0: 166.22-166.45)")
14 64 DB # aldc 25819         # s[25819] = "eval (clac.c0: 166.14-166.46)"
B8 00 71 # invokestatic 113   # checksc(queue_read_only_copy__1(Q, "eval (clac.c0: 166.22-166.45)"), "eval (clac.c0: 166.14-166.46)")
10 01    # bipush 1           # true
9F 00 0D # if_cmpeq +13       # if (checksc(queue_read_only_copy__1(Q, "eval (clac.c0: 166.22-166.45)"), "eval (clac.c0: 166.14-166.46)") == true) goto <597:else>
A7 00 03 # goto +3            # goto <596:then>
# <596:then>
14 64 F9 # aldc 25849         # s[25849] = "not closed"
BF       # athrow             # error "not closed"
A7 00 03 # goto +3            # goto <598:endif>
# <597:else>
# <598:endif>
15 05    # vload 5            # Q
14 65 04 # aldc 25860         # s[25860] = "eval (clac.c0: 169.23-169.29)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 169.23-169.29)")
36 07    # vstore 7           # name = deq__1(Q, "eval (clac.c0: 169.23-169.29)");
15 07    # vload 7            # name
10 0A    # bipush 10          # 10
14 65 22 # aldc 25890         # s[25890] = "eval (clac.c0: 173.18-173.37)"
B8 00 56 # invokestatic 86    # parse_int__1(name, 10, "eval (clac.c0: 173.18-173.37)")
36 08    # vstore 8           # p = parse_int__1(name, 10, "eval (clac.c0: 173.18-173.37)");
15 08    # vload 8            # p
01       # aconst_null        # NULL
A0 00 FD # if_cmpne +253      # if (p != NULL) goto <599:then>
A7 00 03 # goto +3            # goto <614:or>
# <614:or>
15 07    # vload 7            # name
14 65 40 # aldc 25920         # s[25920] = "+"
14 65 42 # aldc 25922         # s[25922] = "eval (clac.c0: 175.27-175.49)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "+", "eval (clac.c0: 175.27-175.49)")
10 01    # bipush 1           # true
9F 00 EA # if_cmpeq +234      # if (string_equal__1(name, "+", "eval (clac.c0: 175.27-175.49)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <613:or>
# <613:or>
15 07    # vload 7            # name
14 65 60 # aldc 25952         # s[25952] = "-"
14 65 62 # aldc 25954         # s[25954] = "eval (clac.c0: 176.13-176.35)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "-", "eval (clac.c0: 176.13-176.35)")
10 01    # bipush 1           # true
9F 00 D7 # if_cmpeq +215      # if (string_equal__1(name, "-", "eval (clac.c0: 176.13-176.35)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <612:or>
# <612:or>
15 07    # vload 7            # name
14 65 80 # aldc 25984         # s[25984] = "*"
14 65 82 # aldc 25986         # s[25986] = "eval (clac.c0: 176.39-176.61)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "*", "eval (clac.c0: 176.39-176.61)")
10 01    # bipush 1           # true
9F 00 C4 # if_cmpeq +196      # if (string_equal__1(name, "*", "eval (clac.c0: 176.39-176.61)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <611:or>
# <611:or>
15 07    # vload 7            # name
14 65 A0 # aldc 26016         # s[26016] = "**"
14 65 A3 # aldc 26019         # s[26019] = "eval (clac.c0: 177.13-177.36)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "**", "eval (clac.c0: 177.13-177.36)")
10 01    # bipush 1           # true
9F 00 B1 # if_cmpeq +177      # if (string_equal__1(name, "**", "eval (clac.c0: 177.13-177.36)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <610:or>
# <610:or>
15 07    # vload 7            # name
14 65 C1 # aldc 26049         # s[26049] = "/"
14 65 C3 # aldc 26051         # s[26051] = "eval (clac.c0: 177.40-177.62)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "/", "eval (clac.c0: 177.40-177.62)")
10 01    # bipush 1           # true
9F 00 9E # if_cmpeq +158      # if (string_equal__1(name, "/", "eval (clac.c0: 177.40-177.62)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <609:or>
# <609:or>
15 07    # vload 7            # name
14 65 E1 # aldc 26081         # s[26081] = "%"
14 65 E3 # aldc 26083         # s[26083] = "eval (clac.c0: 178.13-178.35)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "%", "eval (clac.c0: 178.13-178.35)")
10 01    # bipush 1           # true
9F 00 8B # if_cmpeq +139      # if (string_equal__1(name, "%", "eval (clac.c0: 178.13-178.35)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <608:or>
# <608:or>
15 07    # vload 7            # name
14 66 01 # aldc 26113         # s[26113] = "<"
14 66 03 # aldc 26115         # s[26115] = "eval (clac.c0: 178.39-178.61)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "<", "eval (clac.c0: 178.39-178.61)")
10 01    # bipush 1           # true
9F 00 78 # if_cmpeq +120      # if (string_equal__1(name, "<", "eval (clac.c0: 178.39-178.61)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <607:or>
# <607:or>
15 07    # vload 7            # name
14 66 21 # aldc 26145         # s[26145] = "drop"
14 66 26 # aldc 26150         # s[26150] = "eval (clac.c0: 179.13-179.38)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "drop", "eval (clac.c0: 179.13-179.38)")
10 01    # bipush 1           # true
9F 00 65 # if_cmpeq +101      # if (string_equal__1(name, "drop", "eval (clac.c0: 179.13-179.38)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <606:or>
# <606:or>
15 07    # vload 7            # name
14 66 44 # aldc 26180         # s[26180] = "swap"
14 66 49 # aldc 26185         # s[26185] = "eval (clac.c0: 179.42-179.67)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "swap", "eval (clac.c0: 179.42-179.67)")
10 01    # bipush 1           # true
9F 00 52 # if_cmpeq +82       # if (string_equal__1(name, "swap", "eval (clac.c0: 179.42-179.67)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <605:or>
# <605:or>
15 07    # vload 7            # name
14 66 67 # aldc 26215         # s[26215] = "rot"
14 66 6B # aldc 26219         # s[26219] = "eval (clac.c0: 180.13-180.37)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "rot", "eval (clac.c0: 180.13-180.37)")
10 01    # bipush 1           # true
9F 00 3F # if_cmpeq +63       # if (string_equal__1(name, "rot", "eval (clac.c0: 180.13-180.37)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <604:or>
# <604:or>
15 07    # vload 7            # name
14 66 89 # aldc 26249         # s[26249] = "if"
14 66 8C # aldc 26252         # s[26252] = "eval (clac.c0: 180.41-180.64)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "if", "eval (clac.c0: 180.41-180.64)")
10 01    # bipush 1           # true
9F 00 2C # if_cmpeq +44       # if (string_equal__1(name, "if", "eval (clac.c0: 180.41-180.64)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <603:or>
# <603:or>
15 07    # vload 7            # name
14 66 AA # aldc 26282         # s[26282] = "pick"
14 66 AF # aldc 26287         # s[26287] = "eval (clac.c0: 181.13-181.38)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "pick", "eval (clac.c0: 181.13-181.38)")
10 01    # bipush 1           # true
9F 00 19 # if_cmpeq +25       # if (string_equal__1(name, "pick", "eval (clac.c0: 181.13-181.38)") == true) goto <599:then>
A7 00 03 # goto +3            # goto <602:or>
# <602:or>
15 07    # vload 7            # name
14 66 CD # aldc 26317         # s[26317] = "skip"
14 66 D2 # aldc 26322         # s[26322] = "eval (clac.c0: 181.42-181.67)"
B8 00 1D # invokestatic 29    # string_equal__1(name, "skip", "eval (clac.c0: 181.42-181.67)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(name, "skip", "eval (clac.c0: 181.42-181.67)") == true) goto <599:then>
A7 00 39 # goto +57           # goto <600:else>
# <599:then>
15 05    # vload 5            # Q
14 66 F0 # aldc 26352         # s[26352] = "eval (clac.c0: 184.24-184.30)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 184.24-184.30)")
36 09    # vstore 9           # ele = deq__1(Q, "eval (clac.c0: 184.24-184.30)");
# <615:loop>
A7 00 03 # goto +3            # goto <616:body>
# <616:body>
15 09    # vload 9            # ele
14 67 0E # aldc 26382         # s[26382] = ";"
14 67 10 # aldc 26384         # s[26384] = "eval (clac.c0: 185.19-185.40)"
B8 00 1D # invokestatic 29    # string_equal__1(ele, ";", "eval (clac.c0: 185.19-185.40)")
10 01    # bipush 1           # true
9F 00 13 # if_cmpeq +19       # if (string_equal__1(ele, ";", "eval (clac.c0: 185.19-185.40)") == true) goto <619:else>
A7 00 03 # goto +3            # goto <618:then>
# <618:then>
15 05    # vload 5            # Q
14 67 2E # aldc 26414         # s[26414] = "eval (clac.c0: 186.19-186.25)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 186.19-186.25)")
36 09    # vstore 9           # ele = deq__1(Q, "eval (clac.c0: 186.19-186.25)");
A7 00 06 # goto +6            # goto <620:endif>
# <619:else>
A7 00 06 # goto +6            # break
# <620:endif>
A7 FF DA # goto -38           # goto <615:loop>
# <617:exit>
A7 00 59 # goto +89           # goto <601:endif>
# <600:else>
14 67 4C # aldc 26444         # s[26444] = "eval (clac.c0: 190.26-190.37)"
B8 00 14 # invokestatic 20    # queue_new__1("eval (clac.c0: 190.26-190.37)")
36 09    # vstore 9           # defi = queue_new__1("eval (clac.c0: 190.26-190.37)");
15 05    # vload 5            # Q
14 67 6A # aldc 26474         # s[26474] = "eval (clac.c0: 191.24-191.30)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 191.24-191.30)")
36 0A    # vstore 10          # ele = deq__1(Q, "eval (clac.c0: 191.24-191.30)");
# <621:loop>
A7 00 03 # goto +3            # goto <622:body>
# <622:body>
15 0A    # vload 10           # ele
14 67 88 # aldc 26504         # s[26504] = ";"
14 67 8A # aldc 26506         # s[26506] = "eval (clac.c0: 192.19-192.40)"
B8 00 1D # invokestatic 29    # string_equal__1(ele, ";", "eval (clac.c0: 192.19-192.40)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (string_equal__1(ele, ";", "eval (clac.c0: 192.19-192.40)") == true) goto <625:else>
A7 00 03 # goto +3            # goto <624:then>
# <624:then>
15 09    # vload 9            # defi
15 0A    # vload 10           # ele
14 67 A8 # aldc 26536         # s[26536] = "eval (clac.c0: 193.13-193.26)"
B8 00 15 # invokestatic 21    # enq__1(defi, ele, "eval (clac.c0: 193.13-193.26)")
57       # pop                # (ignore result)
15 05    # vload 5            # Q
14 67 C6 # aldc 26566         # s[26566] = "eval (clac.c0: 194.19-194.25)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 194.19-194.25)")
36 0A    # vstore 10          # ele = deq__1(Q, "eval (clac.c0: 194.19-194.25)");
A7 00 06 # goto +6            # goto <626:endif>
# <625:else>
A7 00 06 # goto +6            # break
# <626:endif>
A7 FF CF # goto -49           # goto <621:loop>
# <623:exit>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 07    # vload 7            # name
15 09    # vload 9            # defi
14 67 E4 # aldc 26596         # s[26596] = "eval (clac.c0: 196.11-196.42)"
B8 00 30 # invokestatic 48    # dict_insert__1(ST->dict, name, defi, "eval (clac.c0: 196.11-196.42)")
57       # pop                # (ignore result)
# <601:endif>
A7 07 25 # goto +1829         # goto <595:endif>
# <594:else>
15 06    # vload 6            # tok
14 68 02 # aldc 26626         # s[26626] = "print"
14 68 08 # aldc 26632         # s[26632] = "eval (clac.c0: 199.18-199.44)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "print", "eval (clac.c0: 199.18-199.44)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "print", "eval (clac.c0: 199.18-199.44)") == true) goto <627:then>
A7 00 44 # goto +68           # goto <628:else>
# <627:then>
15 01    # vload 1            # S
14 68 26 # aldc 26662         # s[26662] = "eval (clac.c0: 200.14-200.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 200.14-200.28)")
10 01    # bipush 1           # true
9F 00 30 # if_cmpeq +48       # if (stack_empty__1(S, "eval (clac.c0: 200.14-200.28)") == true) goto <631:else>
A7 00 03 # goto +3            # goto <630:then>
# <630:then>
15 01    # vload 1            # S
14 68 44 # aldc 26692         # s[26692] = "eval (clac.c0: 201.19-201.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 201.19-201.25)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 201.19-201.25)");
14 68 62 # aldc 26722         # s[26722] = ""
14 68 63 # aldc 26723         # s[26723] = "eval (clac.c0: 202.11-202.28)"
B8 00 01 # invokestatic 1     # print__1("", "eval (clac.c0: 202.11-202.28)")
57       # pop                # (ignore result)
15 07    # vload 7            # x
14 68 81 # aldc 26753         # s[26753] = "eval (clac.c0: 202.11-202.28)"
B8 00 03 # invokestatic 3     # printint__1(x, "eval (clac.c0: 202.11-202.28)")
57       # pop                # (ignore result)
14 68 9F # aldc 26783         # s[26783] = "\n"
14 68 A1 # aldc 26785         # s[26785] = "eval (clac.c0: 202.11-202.28)"
B8 00 01 # invokestatic 1     # print__1("\n", "eval (clac.c0: 202.11-202.28)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <632:endif>
# <631:else>
14 68 BF # aldc 26815         # s[26815] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <632:endif>
A7 06 D1 # goto +1745         # goto <629:endif>
# <628:else>
15 06    # vload 6            # tok
14 68 D3 # aldc 26835         # s[26835] = "quit"
14 68 D8 # aldc 26840         # s[26840] = "eval (clac.c0: 206.18-206.43)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "quit", "eval (clac.c0: 206.18-206.43)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "quit", "eval (clac.c0: 206.18-206.43)") == true) goto <633:then>
A7 00 28 # goto +40           # goto <634:else>
# <633:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (_result == true) goto <637:cond_false>
A7 00 03 # goto +3            # goto <636:cond_true>
# <636:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <638:cond_end>
# <637:cond_false>
15 00    # vload 0            # inputQ
14 68 F6 # aldc 26870         # s[26870] = "eval (clac.c0: 146.24-146.43)"
B8 00 12 # invokestatic 18    # queue_empty__1(inputQ, "eval (clac.c0: 146.24-146.43)")
# <638:cond_end>
14 69 14 # aldc 26900         # s[26900] = "clac.c0: 146.4-146.44: @ensures annotation failed"
CF       # assert             # assert (!(_result) || queue_empty__1(inputQ, "eval (clac.c0: 146.24-146.43)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 06 99 # goto +1689         # goto <635:endif>
# <634:else>
15 06    # vload 6            # tok
14 69 46 # aldc 26950         # s[26950] = "+"
14 69 48 # aldc 26952         # s[26952] = "eval (clac.c0: 208.18-208.39)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "+", "eval (clac.c0: 208.18-208.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "+", "eval (clac.c0: 208.18-208.39)") == true) goto <639:then>
A7 00 56 # goto +86           # goto <640:else>
# <639:then>
15 01    # vload 1            # S
14 69 66 # aldc 26982         # s[26982] = "eval (clac.c0: 209.14-209.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 209.14-209.28)")
10 01    # bipush 1           # true
9F 00 42 # if_cmpeq +66       # if (stack_empty__1(S, "eval (clac.c0: 209.14-209.28)") == true) goto <643:else>
A7 00 03 # goto +3            # goto <642:then>
# <642:then>
15 01    # vload 1            # S
14 69 84 # aldc 27012         # s[27012] = "eval (clac.c0: 210.19-210.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 210.19-210.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 210.19-210.25)");
15 01    # vload 1            # S
14 69 A2 # aldc 27042         # s[27042] = "eval (clac.c0: 211.16-211.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 211.16-211.30)")
10 01    # bipush 1           # true
9F 00 21 # if_cmpeq +33       # if (stack_empty__1(S, "eval (clac.c0: 211.16-211.30)") == true) goto <646:else>
A7 00 03 # goto +3            # goto <645:then>
# <645:then>
15 01    # vload 1            # S
14 69 C0 # aldc 27072         # s[27072] = "eval (clac.c0: 212.21-212.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 212.21-212.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 212.21-212.27)");
15 01    # vload 1            # S
15 08    # vload 8            # x
15 07    # vload 7            # y
60       # iadd               # (x + y)
14 69 DE # aldc 27102         # s[27102] = "eval (clac.c0: 213.13-213.24)"
B8 00 3A # invokestatic 58    # push__1(S, (x + y), "eval (clac.c0: 213.13-213.24)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <647:endif>
# <646:else>
14 69 FC # aldc 27132         # s[27132] = "insufficient tokens 1"
BF       # athrow             # error "insufficient tokens 1"
# <647:endif>
A7 00 07 # goto +7            # goto <644:endif>
# <643:else>
14 6A 12 # aldc 27154         # s[27154] = "insufficient tokens 2"
BF       # athrow             # error "insufficient tokens 2"
# <644:endif>
A7 06 33 # goto +1587         # goto <641:endif>
# <640:else>
15 06    # vload 6            # tok
14 6A 28 # aldc 27176         # s[27176] = "-"
14 6A 2A # aldc 27178         # s[27178] = "eval (clac.c0: 221.18-221.39)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "-", "eval (clac.c0: 221.18-221.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "-", "eval (clac.c0: 221.18-221.39)") == true) goto <648:then>
A7 00 5F # goto +95           # goto <649:else>
# <648:then>
15 01    # vload 1            # S
14 6A 48 # aldc 27208         # s[27208] = "eval (clac.c0: 224.14-224.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 224.14-224.28)")
10 01    # bipush 1           # true
9F 00 42 # if_cmpeq +66       # if (stack_empty__1(S, "eval (clac.c0: 224.14-224.28)") == true) goto <652:else>
A7 00 03 # goto +3            # goto <651:then>
# <651:then>
15 01    # vload 1            # S
14 6A 66 # aldc 27238         # s[27238] = "eval (clac.c0: 225.19-225.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 225.19-225.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 225.19-225.25)");
15 01    # vload 1            # S
14 6A 84 # aldc 27268         # s[27268] = "eval (clac.c0: 226.16-226.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 226.16-226.30)")
10 01    # bipush 1           # true
9F 00 21 # if_cmpeq +33       # if (stack_empty__1(S, "eval (clac.c0: 226.16-226.30)") == true) goto <655:else>
A7 00 03 # goto +3            # goto <654:then>
# <654:then>
15 01    # vload 1            # S
14 6A A2 # aldc 27298         # s[27298] = "eval (clac.c0: 227.21-227.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 227.21-227.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 227.21-227.27)");
15 01    # vload 1            # S
15 08    # vload 8            # x
15 07    # vload 7            # y
64       # isub               # (x - y)
14 6A C0 # aldc 27328         # s[27328] = "eval (clac.c0: 228.13-228.24)"
B8 00 3A # invokestatic 58    # push__1(S, (x - y), "eval (clac.c0: 228.13-228.24)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <656:endif>
# <655:else>
14 6A DE # aldc 27358         # s[27358] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <656:endif>
A7 00 07 # goto +7            # goto <653:endif>
# <652:else>
14 6A F2 # aldc 27378         # s[27378] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <653:endif>
15 01    # vload 1            # S
14 6B 06 # aldc 27398         # s[27398] = "eval (clac.c0: 235.9-235.23)"
B8 00 3C # invokestatic 60    # stack_print__1(S, "eval (clac.c0: 235.9-235.23)")
57       # pop                # (ignore result)
A7 05 C4 # goto +1476         # goto <650:endif>
# <649:else>
15 06    # vload 6            # tok
14 6B 23 # aldc 27427         # s[27427] = "*"
14 6B 25 # aldc 27429         # s[27429] = "eval (clac.c0: 236.18-236.39)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "*", "eval (clac.c0: 236.18-236.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "*", "eval (clac.c0: 236.18-236.39)") == true) goto <657:then>
A7 00 56 # goto +86           # goto <658:else>
# <657:then>
15 01    # vload 1            # S
14 6B 43 # aldc 27459         # s[27459] = "eval (clac.c0: 237.14-237.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 237.14-237.28)")
10 01    # bipush 1           # true
9F 00 42 # if_cmpeq +66       # if (stack_empty__1(S, "eval (clac.c0: 237.14-237.28)") == true) goto <661:else>
A7 00 03 # goto +3            # goto <660:then>
# <660:then>
15 01    # vload 1            # S
14 6B 61 # aldc 27489         # s[27489] = "eval (clac.c0: 238.19-238.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 238.19-238.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 238.19-238.25)");
15 01    # vload 1            # S
14 6B 7F # aldc 27519         # s[27519] = "eval (clac.c0: 239.16-239.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 239.16-239.30)")
10 01    # bipush 1           # true
9F 00 21 # if_cmpeq +33       # if (stack_empty__1(S, "eval (clac.c0: 239.16-239.30)") == true) goto <664:else>
A7 00 03 # goto +3            # goto <663:then>
# <663:then>
15 01    # vload 1            # S
14 6B 9D # aldc 27549         # s[27549] = "eval (clac.c0: 240.21-240.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 240.21-240.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 240.21-240.27)");
15 01    # vload 1            # S
15 08    # vload 8            # x
15 07    # vload 7            # y
68       # imul               # (x * y)
14 6B BB # aldc 27579         # s[27579] = "eval (clac.c0: 241.13-241.24)"
B8 00 3A # invokestatic 58    # push__1(S, (x * y), "eval (clac.c0: 241.13-241.24)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <665:endif>
# <664:else>
14 6B D9 # aldc 27609         # s[27609] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <665:endif>
A7 00 07 # goto +7            # goto <662:endif>
# <661:else>
14 6B ED # aldc 27629         # s[27629] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <662:endif>
A7 05 5E # goto +1374         # goto <659:endif>
# <658:else>
15 06    # vload 6            # tok
14 6C 01 # aldc 27649         # s[27649] = "**"
14 6C 04 # aldc 27652         # s[27652] = "eval (clac.c0: 248.18-248.40)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "**", "eval (clac.c0: 248.18-248.40)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "**", "eval (clac.c0: 248.18-248.40)") == true) goto <666:then>
A7 00 6C # goto +108          # goto <667:else>
# <666:then>
15 01    # vload 1            # S
14 6C 22 # aldc 27682         # s[27682] = "eval (clac.c0: 249.14-249.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 249.14-249.28)")
10 01    # bipush 1           # true
9F 00 58 # if_cmpeq +88       # if (stack_empty__1(S, "eval (clac.c0: 249.14-249.28)") == true) goto <670:else>
A7 00 03 # goto +3            # goto <669:then>
# <669:then>
15 01    # vload 1            # S
14 6C 40 # aldc 27712         # s[27712] = "eval (clac.c0: 250.19-250.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 250.19-250.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 250.19-250.25)");
15 07    # vload 7            # y
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (y < 0) goto <672:then>
A7 00 0A # goto +10           # goto <673:else>
# <672:then>
14 6C 5E # aldc 27742         # s[27742] = "negative component"
BF       # athrow             # error "negative component"
A7 00 03 # goto +3            # goto <674:endif>
# <673:else>
# <674:endif>
15 01    # vload 1            # S
14 6C 71 # aldc 27761         # s[27761] = "eval (clac.c0: 254.16-254.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 254.16-254.30)")
10 01    # bipush 1           # true
9F 00 26 # if_cmpeq +38       # if (stack_empty__1(S, "eval (clac.c0: 254.16-254.30)") == true) goto <676:else>
A7 00 03 # goto +3            # goto <675:then>
# <675:then>
15 01    # vload 1            # S
14 6C 8F # aldc 27791         # s[27791] = "eval (clac.c0: 255.21-255.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 255.21-255.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 255.21-255.27)");
15 01    # vload 1            # S
15 08    # vload 8            # x
15 07    # vload 7            # y
14 6C AD # aldc 27821         # s[27821] = "eval (clac.c0: 256.20-256.28)"
B8 00 6D # invokestatic 109   # pow(x, y, "eval (clac.c0: 256.20-256.28)")
14 6C CB # aldc 27851         # s[27851] = "eval (clac.c0: 256.13-256.29)"
B8 00 3A # invokestatic 58    # push__1(S, pow(x, y, "eval (clac.c0: 256.20-256.28)"), "eval (clac.c0: 256.13-256.29)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <677:endif>
# <676:else>
14 6C E9 # aldc 27881         # s[27881] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <677:endif>
A7 00 07 # goto +7            # goto <671:endif>
# <670:else>
14 6C FD # aldc 27901         # s[27901] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <671:endif>
A7 04 E2 # goto +1250         # goto <668:endif>
# <667:else>
15 06    # vload 6            # tok
14 6D 11 # aldc 27921         # s[27921] = "/"
14 6D 13 # aldc 27923         # s[27923] = "eval (clac.c0: 263.18-263.39)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "/", "eval (clac.c0: 263.18-263.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "/", "eval (clac.c0: 263.18-263.39)") == true) goto <678:then>
A7 00 86 # goto +134          # goto <679:else>
# <678:then>
15 01    # vload 1            # S
14 6D 31 # aldc 27953         # s[27953] = "eval (clac.c0: 264.14-264.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 264.14-264.28)")
10 01    # bipush 1           # true
9F 00 72 # if_cmpeq +114      # if (stack_empty__1(S, "eval (clac.c0: 264.14-264.28)") == true) goto <682:else>
A7 00 03 # goto +3            # goto <681:then>
# <681:then>
15 01    # vload 1            # S
14 6D 4F # aldc 27983         # s[27983] = "eval (clac.c0: 265.19-265.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 265.19-265.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 265.19-265.25)");
15 07    # vload 7            # y
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (y == 0) goto <684:then>
A7 00 0A # goto +10           # goto <685:else>
# <684:then>
14 6D 6D # aldc 28013         # s[28013] = "invalid token"
BF       # athrow             # error "invalid token"
A7 00 03 # goto +3            # goto <686:endif>
# <685:else>
# <686:endif>
15 01    # vload 1            # S
14 6D 7B # aldc 28027         # s[28027] = "eval (clac.c0: 269.16-269.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 269.16-269.30)")
10 01    # bipush 1           # true
9F 00 40 # if_cmpeq +64       # if (stack_empty__1(S, "eval (clac.c0: 269.16-269.30)") == true) goto <688:else>
A7 00 03 # goto +3            # goto <687:then>
# <687:then>
15 01    # vload 1            # S
14 6D 99 # aldc 28057         # s[28057] = "eval (clac.c0: 270.21-270.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 270.21-270.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 270.21-270.27)");
15 08    # vload 8            # x
14 6D B7 # aldc 28087         # s[28087] = "eval (clac.c0: 271.22-271.31)"
B8 00 64 # invokestatic 100   # int_min__1("eval (clac.c0: 271.22-271.31)")
9F 00 06 # if_cmpeq +6        # if (x == int_min__1("eval (clac.c0: 271.22-271.31)")) goto <693:and>
A7 00 14 # goto +20           # goto <691:else>
# <693:and>
15 07    # vload 7            # y
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (y == -(1)) goto <690:then>
A7 00 0A # goto +10           # goto <691:else>
# <690:then>
14 6D D5 # aldc 28117         # s[28117] = "arithmatic error"
BF       # athrow             # error "arithmatic error"
A7 00 03 # goto +3            # goto <692:endif>
# <691:else>
# <692:endif>
15 01    # vload 1            # S
15 08    # vload 8            # x
15 07    # vload 7            # y
6C       # idiv               # (x / y)
14 6D E6 # aldc 28134         # s[28134] = "eval (clac.c0: 274.13-274.24)"
B8 00 3A # invokestatic 58    # push__1(S, (x / y), "eval (clac.c0: 274.13-274.24)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <689:endif>
# <688:else>
14 6E 04 # aldc 28164         # s[28164] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <689:endif>
A7 00 07 # goto +7            # goto <683:endif>
# <682:else>
14 6E 18 # aldc 28184         # s[28184] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <683:endif>
A7 04 4C # goto +1100         # goto <680:endif>
# <679:else>
15 06    # vload 6            # tok
14 6E 2C # aldc 28204         # s[28204] = "%"
14 6E 2E # aldc 28206         # s[28206] = "eval (clac.c0: 281.18-281.39)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "%", "eval (clac.c0: 281.18-281.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "%", "eval (clac.c0: 281.18-281.39)") == true) goto <694:then>
A7 00 86 # goto +134          # goto <695:else>
# <694:then>
15 01    # vload 1            # S
14 6E 4C # aldc 28236         # s[28236] = "eval (clac.c0: 282.14-282.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 282.14-282.28)")
10 01    # bipush 1           # true
9F 00 72 # if_cmpeq +114      # if (stack_empty__1(S, "eval (clac.c0: 282.14-282.28)") == true) goto <698:else>
A7 00 03 # goto +3            # goto <697:then>
# <697:then>
15 01    # vload 1            # S
14 6E 6A # aldc 28266         # s[28266] = "eval (clac.c0: 283.19-283.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 283.19-283.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 283.19-283.25)");
15 07    # vload 7            # y
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (y == 0) goto <700:then>
A7 00 0A # goto +10           # goto <701:else>
# <700:then>
14 6E 88 # aldc 28296         # s[28296] = "invalid token"
BF       # athrow             # error "invalid token"
A7 00 03 # goto +3            # goto <702:endif>
# <701:else>
# <702:endif>
15 01    # vload 1            # S
14 6E 96 # aldc 28310         # s[28310] = "eval (clac.c0: 287.16-287.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 287.16-287.30)")
10 01    # bipush 1           # true
9F 00 40 # if_cmpeq +64       # if (stack_empty__1(S, "eval (clac.c0: 287.16-287.30)") == true) goto <704:else>
A7 00 03 # goto +3            # goto <703:then>
# <703:then>
15 01    # vload 1            # S
14 6E B4 # aldc 28340         # s[28340] = "eval (clac.c0: 288.21-288.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 288.21-288.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 288.21-288.27)");
15 08    # vload 8            # x
14 6E D2 # aldc 28370         # s[28370] = "eval (clac.c0: 289.22-289.31)"
B8 00 64 # invokestatic 100   # int_min__1("eval (clac.c0: 289.22-289.31)")
9F 00 06 # if_cmpeq +6        # if (x == int_min__1("eval (clac.c0: 289.22-289.31)")) goto <709:and>
A7 00 14 # goto +20           # goto <707:else>
# <709:and>
15 07    # vload 7            # y
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (y == -(1)) goto <706:then>
A7 00 0A # goto +10           # goto <707:else>
# <706:then>
14 6E F0 # aldc 28400         # s[28400] = "arithmatic error"
BF       # athrow             # error "arithmatic error"
A7 00 03 # goto +3            # goto <708:endif>
# <707:else>
# <708:endif>
15 01    # vload 1            # S
15 08    # vload 8            # x
15 07    # vload 7            # y
70       # irem               # (x % y)
14 6F 01 # aldc 28417         # s[28417] = "eval (clac.c0: 292.13-292.24)"
B8 00 3A # invokestatic 58    # push__1(S, (x % y), "eval (clac.c0: 292.13-292.24)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <705:endif>
# <704:else>
14 6F 1F # aldc 28447         # s[28447] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <705:endif>
A7 00 07 # goto +7            # goto <699:endif>
# <698:else>
14 6F 33 # aldc 28467         # s[28467] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <699:endif>
A7 03 B6 # goto +950          # goto <696:endif>
# <695:else>
15 06    # vload 6            # tok
14 6F 47 # aldc 28487         # s[28487] = "<"
14 6F 49 # aldc 28489         # s[28489] = "eval (clac.c0: 299.18-299.39)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "<", "eval (clac.c0: 299.18-299.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "<", "eval (clac.c0: 299.18-299.39)") == true) goto <710:then>
A7 00 6B # goto +107          # goto <711:else>
# <710:then>
15 01    # vload 1            # S
14 6F 67 # aldc 28519         # s[28519] = "eval (clac.c0: 300.14-300.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 300.14-300.28)")
10 01    # bipush 1           # true
9F 00 57 # if_cmpeq +87       # if (stack_empty__1(S, "eval (clac.c0: 300.14-300.28)") == true) goto <714:else>
A7 00 03 # goto +3            # goto <713:then>
# <713:then>
15 01    # vload 1            # S
14 6F 85 # aldc 28549         # s[28549] = "eval (clac.c0: 301.19-301.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 301.19-301.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 301.19-301.25)");
15 01    # vload 1            # S
14 6F A3 # aldc 28579         # s[28579] = "eval (clac.c0: 302.16-302.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 302.16-302.30)")
10 01    # bipush 1           # true
9F 00 36 # if_cmpeq +54       # if (stack_empty__1(S, "eval (clac.c0: 302.16-302.30)") == true) goto <717:else>
A7 00 03 # goto +3            # goto <716:then>
# <716:then>
15 01    # vload 1            # S
14 6F C1 # aldc 28609         # s[28609] = "eval (clac.c0: 303.21-303.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 303.21-303.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 303.21-303.27)");
15 08    # vload 8            # x
15 07    # vload 7            # y
A1 00 06 # if_icmplt +6       # if (x < y) goto <719:then>
A7 00 11 # goto +17           # goto <720:else>
# <719:then>
15 01    # vload 1            # S
10 01    # bipush 1           # 1
14 6F DF # aldc 28639         # s[28639] = "eval (clac.c0: 305.15-305.24)"
B8 00 3A # invokestatic 58    # push__1(S, 1, "eval (clac.c0: 305.15-305.24)")
57       # pop                # (ignore result)
A7 00 0E # goto +14           # goto <721:endif>
# <720:else>
15 01    # vload 1            # S
10 00    # bipush 0           # 0
14 6F FD # aldc 28669         # s[28669] = "eval (clac.c0: 307.15-307.24)"
B8 00 3A # invokestatic 58    # push__1(S, 0, "eval (clac.c0: 307.15-307.24)")
57       # pop                # (ignore result)
# <721:endif>
A7 00 07 # goto +7            # goto <718:endif>
# <717:else>
14 70 1B # aldc 28699         # s[28699] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <718:endif>
A7 00 07 # goto +7            # goto <715:endif>
# <714:else>
14 70 2F # aldc 28719         # s[28719] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <715:endif>
A7 03 3B # goto +827          # goto <712:endif>
# <711:else>
15 06    # vload 6            # tok
14 70 43 # aldc 28739         # s[28739] = "drop"
14 70 48 # aldc 28744         # s[28744] = "eval (clac.c0: 315.18-315.42)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "drop", "eval (clac.c0: 315.18-315.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "drop", "eval (clac.c0: 315.18-315.42)") == true) goto <722:then>
A7 00 26 # goto +38           # goto <723:else>
# <722:then>
15 01    # vload 1            # S
14 70 66 # aldc 28774         # s[28774] = "eval (clac.c0: 316.14-316.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 316.14-316.28)")
10 01    # bipush 1           # true
9F 00 12 # if_cmpeq +18       # if (stack_empty__1(S, "eval (clac.c0: 316.14-316.28)") == true) goto <726:else>
A7 00 03 # goto +3            # goto <725:then>
# <725:then>
15 01    # vload 1            # S
14 70 84 # aldc 28804         # s[28804] = "eval (clac.c0: 317.11-317.17)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 317.11-317.17)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <727:endif>
# <726:else>
14 70 A2 # aldc 28834         # s[28834] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <727:endif>
A7 03 05 # goto +773          # goto <724:endif>
# <723:else>
15 06    # vload 6            # tok
14 70 B6 # aldc 28854         # s[28854] = "swap"
14 70 BB # aldc 28859         # s[28859] = "eval (clac.c0: 321.18-321.42)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "swap", "eval (clac.c0: 321.18-321.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "swap", "eval (clac.c0: 321.18-321.42)") == true) goto <728:then>
A7 00 5E # goto +94           # goto <729:else>
# <728:then>
15 01    # vload 1            # S
14 70 D9 # aldc 28889         # s[28889] = "eval (clac.c0: 322.14-322.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 322.14-322.28)")
10 01    # bipush 1           # true
9F 00 4A # if_cmpeq +74       # if (stack_empty__1(S, "eval (clac.c0: 322.14-322.28)") == true) goto <732:else>
A7 00 03 # goto +3            # goto <731:then>
# <731:then>
15 01    # vload 1            # S
14 70 F7 # aldc 28919         # s[28919] = "eval (clac.c0: 323.19-323.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 323.19-323.25)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 323.19-323.25)");
15 01    # vload 1            # S
14 71 15 # aldc 28949         # s[28949] = "eval (clac.c0: 324.16-324.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 324.16-324.30)")
10 01    # bipush 1           # true
9F 00 29 # if_cmpeq +41       # if (stack_empty__1(S, "eval (clac.c0: 324.16-324.30)") == true) goto <735:else>
A7 00 03 # goto +3            # goto <734:then>
# <734:then>
15 01    # vload 1            # S
14 71 33 # aldc 28979         # s[28979] = "eval (clac.c0: 325.21-325.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 325.21-325.27)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 325.21-325.27)");
15 01    # vload 1            # S
15 07    # vload 7            # y
14 71 51 # aldc 29009         # s[29009] = "eval (clac.c0: 326.13-326.22)"
B8 00 3A # invokestatic 58    # push__1(S, y, "eval (clac.c0: 326.13-326.22)")
57       # pop                # (ignore result)
15 01    # vload 1            # S
15 08    # vload 8            # x
14 71 6F # aldc 29039         # s[29039] = "eval (clac.c0: 327.13-327.22)"
B8 00 3A # invokestatic 58    # push__1(S, x, "eval (clac.c0: 327.13-327.22)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <736:endif>
# <735:else>
14 71 8D # aldc 29069         # s[29069] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <736:endif>
A7 00 07 # goto +7            # goto <733:endif>
# <732:else>
14 71 A1 # aldc 29089         # s[29089] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <733:endif>
A7 02 97 # goto +663          # goto <730:endif>
# <729:else>
15 06    # vload 6            # tok
14 71 B5 # aldc 29109         # s[29109] = "rot"
14 71 B9 # aldc 29113         # s[29113] = "eval (clac.c0: 334.18-334.41)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "rot", "eval (clac.c0: 334.18-334.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "rot", "eval (clac.c0: 334.18-334.41)") == true) goto <737:then>
A7 00 8A # goto +138          # goto <738:else>
# <737:then>
15 01    # vload 1            # S
14 71 D7 # aldc 29143         # s[29143] = "eval (clac.c0: 335.14-335.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 335.14-335.28)")
10 01    # bipush 1           # true
9F 00 76 # if_cmpeq +118      # if (stack_empty__1(S, "eval (clac.c0: 335.14-335.28)") == true) goto <741:else>
A7 00 03 # goto +3            # goto <740:then>
# <740:then>
15 01    # vload 1            # S
14 71 F5 # aldc 29173         # s[29173] = "eval (clac.c0: 336.19-336.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 336.19-336.25)")
36 07    # vstore 7           # z = pop__1(S, "eval (clac.c0: 336.19-336.25)");
15 01    # vload 1            # S
14 72 13 # aldc 29203         # s[29203] = "eval (clac.c0: 337.16-337.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 337.16-337.30)")
10 01    # bipush 1           # true
9F 00 55 # if_cmpeq +85       # if (stack_empty__1(S, "eval (clac.c0: 337.16-337.30)") == true) goto <744:else>
A7 00 03 # goto +3            # goto <743:then>
# <743:then>
15 01    # vload 1            # S
14 72 31 # aldc 29233         # s[29233] = "eval (clac.c0: 338.21-338.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 338.21-338.27)")
36 08    # vstore 8           # y = pop__1(S, "eval (clac.c0: 338.21-338.27)");
15 01    # vload 1            # S
14 72 4F # aldc 29263         # s[29263] = "eval (clac.c0: 339.18-339.32)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 339.18-339.32)")
10 01    # bipush 1           # true
9F 00 34 # if_cmpeq +52       # if (stack_empty__1(S, "eval (clac.c0: 339.18-339.32)") == true) goto <747:else>
A7 00 03 # goto +3            # goto <746:then>
# <746:then>
15 01    # vload 1            # S
14 72 6D # aldc 29293         # s[29293] = "eval (clac.c0: 340.23-340.29)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 340.23-340.29)")
36 09    # vstore 9           # x = pop__1(S, "eval (clac.c0: 340.23-340.29)");
15 01    # vload 1            # S
15 08    # vload 8            # y
14 72 8B # aldc 29323         # s[29323] = "eval (clac.c0: 341.15-341.24)"
B8 00 3A # invokestatic 58    # push__1(S, y, "eval (clac.c0: 341.15-341.24)")
57       # pop                # (ignore result)
15 01    # vload 1            # S
15 07    # vload 7            # z
14 72 A9 # aldc 29353         # s[29353] = "eval (clac.c0: 342.15-342.24)"
B8 00 3A # invokestatic 58    # push__1(S, z, "eval (clac.c0: 342.15-342.24)")
57       # pop                # (ignore result)
15 01    # vload 1            # S
15 09    # vload 9            # x
14 72 C7 # aldc 29383         # s[29383] = "eval (clac.c0: 343.15-343.24)"
B8 00 3A # invokestatic 58    # push__1(S, x, "eval (clac.c0: 343.15-343.24)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <748:endif>
# <747:else>
14 72 E5 # aldc 29413         # s[29413] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <748:endif>
A7 00 07 # goto +7            # goto <745:endif>
# <744:else>
14 72 F9 # aldc 29433         # s[29433] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <745:endif>
A7 00 07 # goto +7            # goto <742:endif>
# <741:else>
14 73 0D # aldc 29453         # s[29453] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <742:endif>
A7 01 FD # goto +509          # goto <739:endif>
# <738:else>
15 06    # vload 6            # tok
14 73 21 # aldc 29473         # s[29473] = "if"
14 73 24 # aldc 29476         # s[29476] = "eval (clac.c0: 353.18-353.40)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "if", "eval (clac.c0: 353.18-353.40)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "if", "eval (clac.c0: 353.18-353.40)") == true) goto <749:then>
A7 00 94 # goto +148          # goto <750:else>
# <749:then>
15 01    # vload 1            # S
14 73 42 # aldc 29506         # s[29506] = "eval (clac.c0: 354.14-354.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 354.14-354.28)")
10 01    # bipush 1           # true
9F 00 80 # if_cmpeq +128      # if (stack_empty__1(S, "eval (clac.c0: 354.14-354.28)") == true) goto <753:else>
A7 00 03 # goto +3            # goto <752:then>
# <752:then>
15 01    # vload 1            # S
14 73 60 # aldc 29536         # s[29536] = "eval (clac.c0: 355.19-355.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 355.19-355.25)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 355.19-355.25)");
15 07    # vload 7            # x
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (x == 0) goto <755:then>
A7 00 66 # goto +102          # goto <756:else>
# <755:then>
15 05    # vload 5            # Q
14 73 7E # aldc 29566         # s[29566] = "eval (clac.c0: 361.18-361.32)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "eval (clac.c0: 361.18-361.32)")
10 01    # bipush 1           # true
9F 00 12 # if_cmpeq +18       # if (queue_empty__1(Q, "eval (clac.c0: 361.18-361.32)") == true) goto <759:else>
A7 00 03 # goto +3            # goto <758:then>
# <758:then>
15 05    # vload 5            # Q
14 73 9C # aldc 29596         # s[29596] = "eval (clac.c0: 362.15-362.21)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 362.15-362.21)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <760:endif>
# <759:else>
14 73 BA # aldc 29626         # s[29626] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <760:endif>
15 05    # vload 5            # Q
14 73 CE # aldc 29646         # s[29646] = "eval (clac.c0: 367.18-367.32)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "eval (clac.c0: 367.18-367.32)")
10 01    # bipush 1           # true
9F 00 12 # if_cmpeq +18       # if (queue_empty__1(Q, "eval (clac.c0: 367.18-367.32)") == true) goto <762:else>
A7 00 03 # goto +3            # goto <761:then>
# <761:then>
15 05    # vload 5            # Q
14 73 EC # aldc 29676         # s[29676] = "eval (clac.c0: 368.15-368.21)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 368.15-368.21)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <763:endif>
# <762:else>
14 74 0A # aldc 29706         # s[29706] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <763:endif>
15 05    # vload 5            # Q
14 74 1E # aldc 29726         # s[29726] = "eval (clac.c0: 372.18-372.32)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "eval (clac.c0: 372.18-372.32)")
10 01    # bipush 1           # true
9F 00 12 # if_cmpeq +18       # if (queue_empty__1(Q, "eval (clac.c0: 372.18-372.32)") == true) goto <765:else>
A7 00 03 # goto +3            # goto <764:then>
# <764:then>
15 05    # vload 5            # Q
14 74 3C # aldc 29756         # s[29756] = "eval (clac.c0: 373.15-373.21)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 373.15-373.21)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <766:endif>
# <765:else>
14 74 5A # aldc 29786         # s[29786] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <766:endif>
A7 00 03 # goto +3            # goto <757:endif>
# <756:else>
# <757:endif>
A7 00 07 # goto +7            # goto <754:endif>
# <753:else>
14 74 6E # aldc 29806         # s[29806] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
# <754:endif>
A7 01 59 # goto +345          # goto <751:endif>
# <750:else>
15 06    # vload 6            # tok
14 74 8B # aldc 29835         # s[29835] = "pick"
14 74 90 # aldc 29840         # s[29840] = "eval (clac.c0: 382.18-382.42)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "pick", "eval (clac.c0: 382.18-382.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "pick", "eval (clac.c0: 382.18-382.42)") == true) goto <767:then>
A7 00 4F # goto +79           # goto <768:else>
# <767:then>
15 01    # vload 1            # S
14 74 AE # aldc 29870         # s[29870] = "eval (clac.c0: 383.14-383.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 383.14-383.28)")
10 01    # bipush 1           # true
9F 00 3B # if_cmpeq +59       # if (stack_empty__1(S, "eval (clac.c0: 383.14-383.28)") == true) goto <771:else>
A7 00 03 # goto +3            # goto <770:then>
# <770:then>
15 01    # vload 1            # S
14 74 CC # aldc 29900         # s[29900] = "eval (clac.c0: 384.19-384.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 384.19-384.25)")
36 07    # vstore 7           # n = pop__1(S, "eval (clac.c0: 384.19-384.25)");
15 07    # vload 7            # n
10 00    # bipush 0           # 0
A4 00 06 # if_icmple +6       # if (n <= 0) goto <773:then>
A7 00 0A # goto +10           # goto <774:else>
# <773:then>
14 74 EA # aldc 29930         # s[29930] = "invalid pick"
BF       # athrow             # error "invalid pick"
A7 00 03 # goto +3            # goto <775:endif>
# <774:else>
# <775:endif>
15 01    # vload 1            # S
15 07    # vload 7            # n
14 74 F7 # aldc 29943         # s[29943] = "eval (clac.c0: 392.21-392.32)"
B8 00 70 # invokestatic 112   # picknS(S, n, "eval (clac.c0: 392.21-392.32)")
36 08    # vstore 8           # ele = picknS(S, n, "eval (clac.c0: 392.21-392.32)");
15 01    # vload 1            # S
15 08    # vload 8            # ele
14 75 15 # aldc 29973         # s[29973] = "eval (clac.c0: 393.11-393.22)"
B8 00 3A # invokestatic 58    # push__1(S, ele, "eval (clac.c0: 393.11-393.22)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <772:endif>
# <771:else>
14 75 33 # aldc 30003         # s[30003] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <772:endif>
A7 00 FA # goto +250          # goto <769:endif>
# <768:else>
15 06    # vload 6            # tok
14 75 47 # aldc 30023         # s[30023] = "skip"
14 75 4C # aldc 30028         # s[30028] = "eval (clac.c0: 397.18-397.42)"
B8 00 1D # invokestatic 29    # string_equal__1(tok, "skip", "eval (clac.c0: 397.18-397.42)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "skip", "eval (clac.c0: 397.18-397.42)") == true) goto <776:then>
A7 00 75 # goto +117          # goto <777:else>
# <776:then>
15 01    # vload 1            # S
14 75 6A # aldc 30058         # s[30058] = "eval (clac.c0: 398.14-398.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 398.14-398.28)")
10 01    # bipush 1           # true
9F 00 61 # if_cmpeq +97       # if (stack_empty__1(S, "eval (clac.c0: 398.14-398.28)") == true) goto <780:else>
A7 00 03 # goto +3            # goto <779:then>
# <779:then>
15 01    # vload 1            # S
14 75 88 # aldc 30088         # s[30088] = "eval (clac.c0: 399.19-399.25)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 399.19-399.25)")
36 07    # vstore 7           # n = pop__1(S, "eval (clac.c0: 399.19-399.25)");
15 07    # vload 7            # n
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (n < 0) goto <782:then>
A7 00 0A # goto +10           # goto <783:else>
# <782:then>
14 75 A6 # aldc 30118         # s[30118] = "invalid skip"
BF       # athrow             # error "invalid skip"
A7 00 03 # goto +3            # goto <784:endif>
# <783:else>
# <784:endif>
# <785:loop>
A7 00 03 # goto +3            # goto <786:body>
# <786:body>
15 07    # vload 7            # n
10 00    # bipush 0           # 0
A0 00 06 # if_cmpne +6        # if (n != 0) goto <788:then>
A7 00 2D # goto +45           # goto <789:else>
# <788:then>
15 05    # vload 5            # Q
14 75 B3 # aldc 30131         # s[30131] = "eval (clac.c0: 405.18-405.32)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "eval (clac.c0: 405.18-405.32)")
10 01    # bipush 1           # true
9F 00 12 # if_cmpeq +18       # if (queue_empty__1(Q, "eval (clac.c0: 405.18-405.32)") == true) goto <792:else>
A7 00 03 # goto +3            # goto <791:then>
# <791:then>
15 05    # vload 5            # Q
14 75 D1 # aldc 30161         # s[30161] = "eval (clac.c0: 406.15-406.21)"
B8 00 16 # invokestatic 22    # deq__1(Q, "eval (clac.c0: 406.15-406.21)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <793:endif>
# <792:else>
14 75 EF # aldc 30191         # s[30191] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <793:endif>
15 07    # vload 7            # n
10 01    # bipush 1           # 1
64       # isub               # 
36 07    # vstore 7           # n -= 1;
A7 00 06 # goto +6            # goto <790:endif>
# <789:else>
A7 00 06 # goto +6            # break
# <790:endif>
A7 FF C6 # goto -58           # goto <785:loop>
# <787:exit>
A7 00 07 # goto +7            # goto <781:endif>
# <780:else>
14 76 03 # aldc 30211         # s[30211] = "insufficient tokens"
BF       # athrow             # error "insufficient tokens"
# <781:endif>
A7 00 75 # goto +117          # goto <778:endif>
# <777:else>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 06    # vload 6            # tok
14 76 17 # aldc 30231         # s[30231] = "eval (clac.c0: 416.18-416.43)"
B8 00 2F # invokestatic 47    # dict_lookup__1(ST->dict, tok, "eval (clac.c0: 416.18-416.43)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup__1(ST->dict, tok, "eval (clac.c0: 416.18-416.43)") != NULL) goto <794:then>
A7 00 31 # goto +49           # goto <795:else>
# <794:then>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 06    # vload 6            # tok
14 76 35 # aldc 30261         # s[30261] = "eval (clac.c0: 417.24-417.49)"
B8 00 2F # invokestatic 47    # dict_lookup__1(ST->dict, tok, "eval (clac.c0: 417.24-417.49)")
36 07    # vstore 7           # tok1 = dict_lookup__1(ST->dict, tok, "eval (clac.c0: 417.24-417.49)");
15 07    # vload 7            # tok1
14 76 53 # aldc 30291         # s[30291] = "eval (clac.c0: 419.24-419.50)"
B8 00 18 # invokestatic 24    # queue_read_only_copy__1(tok1, "eval (clac.c0: 419.24-419.50)")
36 08    # vstore 8           # temp = queue_read_only_copy__1(tok1, "eval (clac.c0: 419.24-419.50)");
15 02    # vload 2            # ST
62 08    # aaddf 8            # &ST->remainder
2F       # amload             # ST->remainder
15 05    # vload 5            # Q
14 76 71 # aldc 30321         # s[30321] = "eval (clac.c0: 421.9-421.31)"
B8 00 46 # invokestatic 70    # qpush__1(ST->remainder, Q, "eval (clac.c0: 421.9-421.31)")
57       # pop                # (ignore result)
15 08    # vload 8            # temp
36 05    # vstore 5           # Q = temp;
A7 00 33 # goto +51           # goto <796:endif>
# <795:else>
15 06    # vload 6            # tok
10 0A    # bipush 10          # 10
14 76 8E # aldc 30350         # s[30350] = "eval (clac.c0: 428.18-428.36)"
B8 00 56 # invokestatic 86    # parse_int__1(tok, 10, "eval (clac.c0: 428.18-428.36)")
36 07    # vstore 7           # p = parse_int__1(tok, 10, "eval (clac.c0: 428.18-428.36)");
15 07    # vload 7            # p
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (p == NULL) goto <797:then>
A7 00 12 # goto +18           # goto <798:else>
# <797:then>
14 76 AC # aldc 30380         # s[30380] = "undefined token "
15 06    # vload 6            # tok
14 76 BD # aldc 30397         # s[30397] = "eval (clac.c0: 431.17-431.53)"
B8 00 1B # invokestatic 27    # string_join__1("undefined token ", tok, "eval (clac.c0: 431.17-431.53)")
BF       # athrow             # error string_join__1("undefined token ", tok, "eval (clac.c0: 431.17-431.53)")
A7 00 03 # goto +3            # goto <799:endif>
# <798:else>
# <799:endif>
15 01    # vload 1            # S
15 07    # vload 7            # p
2E       # imload             # *(p)
14 76 DB # aldc 30427         # s[30427] = "eval (clac.c0: 433.9-433.20)"
B8 00 3A # invokestatic 58    # push__1(S, *(p), "eval (clac.c0: 433.9-433.20)")
57       # pop                # (ignore result)
# <796:endif>
# <778:endif>
# <769:endif>
# <751:endif>
# <739:endif>
# <730:endif>
# <724:endif>
# <712:endif>
# <696:endif>
# <680:endif>
# <668:endif>
# <659:endif>
# <650:endif>
# <641:endif>
# <635:endif>
# <629:endif>
# <595:endif>
# <592:endif>
A7 00 06 # goto +6            # goto <588:endif>
# <587:else>
A7 00 06 # goto +6            # break
# <588:endif>
A7 F6 B3 # goto -2381         # goto <583:loop>
# <585:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (_result == true) goto <801:cond_false>
A7 00 03 # goto +3            # goto <800:cond_true>
# <800:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <802:cond_end>
# <801:cond_false>
15 00    # vload 0            # inputQ
14 76 F8 # aldc 30456         # s[30456] = "eval (clac.c0: 146.24-146.43)"
B8 00 12 # invokestatic 18    # queue_empty__1(inputQ, "eval (clac.c0: 146.24-146.43)")
# <802:cond_end>
14 77 16 # aldc 30486         # s[30486] = "clac.c0: 146.4-146.44: @ensures annotation failed"
CF       # assert             # assert (!(_result) || queue_empty__1(inputQ, "eval (clac.c0: 146.24-146.43)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<stack_from_string>
02                # number of arguments = 2
06                # number of local variables = 6
00 80             # code length = 128 bytes
14 8A 76 # aldc 35446         # s[35446] = "stack_from_string (clac-test.c0: 173.15-173.26)"
B8 00 14 # invokestatic 20    # queue_new__1("stack_from_string (clac-test.c0: 173.15-173.26)")
36 03    # vstore 3           # Q = queue_new__1("stack_from_string (clac-test.c0: 173.15-173.26)");
15 00    # vload 0            # s
15 03    # vload 3            # Q
14 8A A6 # aldc 35494         # s[35494] = "stack_from_string (clac-test.c0: 174.3-174.21)"
B8 00 54 # invokestatic 84    # input_string__1(s, Q, "stack_from_string (clac-test.c0: 174.3-174.21)")
57       # pop                # (ignore result)
14 8A D5 # aldc 35541         # s[35541] = "stack_from_string (clac-test.c0: 175.15-175.26)"
B8 00 39 # invokestatic 57    # stack_new__1("stack_from_string (clac-test.c0: 175.15-175.26)")
36 04    # vstore 4           # S = stack_new__1("stack_from_string (clac-test.c0: 175.15-175.26)");
# <878:loop>
A7 00 03 # goto +3            # goto <879:body>
# <879:body>
15 03    # vload 3            # Q
14 8B 05 # aldc 35589         # s[35589] = "stack_from_string (clac-test.c0: 176.11-176.25)"
B8 00 12 # invokestatic 18    # queue_empty__1(Q, "stack_from_string (clac-test.c0: 176.11-176.25)")
10 01    # bipush 1           # true
9F 00 37 # if_cmpeq +55       # if (queue_empty__1(Q, "stack_from_string (clac-test.c0: 176.11-176.25)") == true) goto <882:else>
A7 00 03 # goto +3            # goto <881:then>
# <881:then>
15 03    # vload 3            # Q
14 8B 35 # aldc 35637         # s[35637] = "stack_from_string (clac-test.c0: 177.24-177.30)"
B8 00 16 # invokestatic 22    # deq__1(Q, "stack_from_string (clac-test.c0: 177.24-177.30)")
10 0A    # bipush 10          # 10
14 8B 65 # aldc 35685         # s[35685] = "stack_from_string (clac-test.c0: 177.14-177.35)"
B8 00 56 # invokestatic 86    # parse_int__1(deq__1(Q, "stack_from_string (clac-test.c0: 177.24-177.30)"), 10, "stack_from_string (clac-test.c0: 177.14-177.35)")
36 05    # vstore 5           # p = parse_int__1(deq__1(Q, "stack_from_string (clac-test.c0: 177.24-177.30)"), 10, "stack_from_string (clac-test.c0: 177.14-177.35)");
15 05    # vload 5            # p
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (p == NULL) goto <884:then>
A7 00 0A # goto +10           # goto <885:else>
# <884:then>
14 8B 95 # aldc 35733         # s[35733] = "Bad test: there was a non-integer on the queue"
BF       # athrow             # error "Bad test: there was a non-integer on the queue"
A7 00 03 # goto +3            # goto <886:endif>
# <885:else>
# <886:endif>
15 04    # vload 4            # S
15 05    # vload 5            # p
2E       # imload             # *(p)
14 8B C4 # aldc 35780         # s[35780] = "stack_from_string (clac-test.c0: 179.5-179.16)"
B8 00 3A # invokestatic 58    # push__1(S, *(p), "stack_from_string (clac-test.c0: 179.5-179.16)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <883:endif>
# <882:else>
A7 00 06 # goto +6            # break
# <883:endif>
A7 FF B9 # goto -71           # goto <878:loop>
# <880:exit>
15 04    # vload 4            # S
36 02    # vstore 2           # _result = S;
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <887:cond_true>
A7 00 08 # goto +8            # goto <888:cond_false>
# <887:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <889:cond_end>
# <888:cond_false>
10 00    # bipush 0           # false
# <889:cond_end>
14 8B F3 # aldc 35827         # s[35827] = "clac-test.c0: 171.4-171.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<stack_from_string__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 21             # code length = 33 bytes
15 00    # vload 0            # s
14 77 48 # aldc 30536         # s[30536] = "stack_from_string__1 (clac-test.c0: 36.1-37.35)"
B8 00 74 # invokestatic 116   # stack_from_string(s, "stack_from_string__1 (clac-test.c0: 36.1-37.35)")
36 02    # vstore 2           # _result = stack_from_string(s, "stack_from_string__1 (clac-test.c0: 36.1-37.35)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <803:cond_true>
A7 00 08 # goto +8            # goto <804:cond_false>
# <803:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <805:cond_end>
# <804:cond_false>
10 00    # bipush 0           # false
# <805:cond_end>
14 77 78 # aldc 30584         # s[30584] = "clac-test.c0: 37.6-37.30: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<stacks_eq>
03                # number of arguments = 3
04                # number of local variables = 4
00 90             # code length = 144 bytes
15 00    # vload 0            # S1
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S1 != NULL) goto <890:cond_true>
A7 00 16 # goto +22           # goto <891:cond_false>
# <890:cond_true>
15 01    # vload 1            # S2
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S2 != NULL) goto <893:cond_true>
A7 00 08 # goto +8            # goto <894:cond_false>
# <893:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <895:cond_end>
# <894:cond_false>
10 00    # bipush 0           # false
# <895:cond_end>
A7 00 05 # goto +5            # goto <892:cond_end>
# <891:cond_false>
10 00    # bipush 0           # false
# <892:cond_end>
14 8C 2A # aldc 35882         # s[35882] = "clac-test.c0: 185.4-185.38: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 8C 63 # aldc 35939         # s[35939] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac-test.c0: 185.4-185.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((S1 != NULL) && (S2 != NULL)) [failure message on stack]
# <896:loop>
A7 00 03 # goto +3            # goto <897:body>
# <897:body>
15 00    # vload 0            # S1
14 8C 75 # aldc 35957         # s[35957] = "stacks_eq (clac-test.c0: 187.11-187.26)"
B8 00 38 # invokestatic 56    # stack_empty__1(S1, "stacks_eq (clac-test.c0: 187.11-187.26)")
10 01    # bipush 1           # true
9F 00 43 # if_cmpeq +67       # if (stack_empty__1(S1, "stacks_eq (clac-test.c0: 187.11-187.26)") == true) goto <900:else>
A7 00 03 # goto +3            # goto <899:then>
# <899:then>
15 01    # vload 1            # S2
14 8C 9D # aldc 35997         # s[35997] = "stacks_eq (clac-test.c0: 188.9-188.24)"
B8 00 38 # invokestatic 56    # stack_empty__1(S2, "stacks_eq (clac-test.c0: 188.9-188.24)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S2, "stacks_eq (clac-test.c0: 188.9-188.24)") == true) goto <902:then>
A7 00 0D # goto +13           # goto <903:else>
# <902:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <904:endif>
# <903:else>
# <904:endif>
15 00    # vload 0            # S1
14 8C C4 # aldc 36036         # s[36036] = "stacks_eq (clac-test.c0: 189.9-189.16)"
B8 00 3B # invokestatic 59    # pop__1(S1, "stacks_eq (clac-test.c0: 189.9-189.16)")
15 01    # vload 1            # S2
14 8C EB # aldc 36075         # s[36075] = "stacks_eq (clac-test.c0: 189.20-189.27)"
B8 00 3B # invokestatic 59    # pop__1(S2, "stacks_eq (clac-test.c0: 189.20-189.27)")
A0 00 06 # if_cmpne +6        # if (pop__1(S1, "stacks_eq (clac-test.c0: 189.9-189.16)") != pop__1(S2, "stacks_eq (clac-test.c0: 189.20-189.27)")) goto <905:then>
A7 00 0D # goto +13           # goto <906:else>
# <905:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <907:endif>
# <906:else>
# <907:endif>
A7 00 06 # goto +6            # goto <901:endif>
# <900:else>
A7 00 06 # goto +6            # break
# <901:endif>
A7 FF AD # goto -83           # goto <896:loop>
# <898:exit>
15 01    # vload 1            # S2
14 8D 13 # aldc 36115         # s[36115] = "stacks_eq (clac-test.c0: 191.10-191.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S2, "stacks_eq (clac-test.c0: 191.10-191.25)")
36 03    # vstore 3           # _result = stack_empty__1(S2, "stacks_eq (clac-test.c0: 191.10-191.25)");
15 03    # vload 3            # _result
B0       # return             # 


#<stacks_eq__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
15 00    # vload 0            # S1
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S1 != NULL) goto <806:cond_true>
A7 00 16 # goto +22           # goto <807:cond_false>
# <806:cond_true>
15 01    # vload 1            # S2
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S2 != NULL) goto <809:cond_true>
A7 00 08 # goto +8            # goto <810:cond_false>
# <809:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <811:cond_end>
# <810:cond_false>
10 00    # bipush 0           # false
# <811:cond_end>
A7 00 05 # goto +5            # goto <808:cond_end>
# <807:cond_false>
10 00    # bipush 0           # false
# <808:cond_end>
14 77 AD # aldc 30637         # s[30637] = "clac-test.c0: 41.6-41.40: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 77 E4 # aldc 30692         # s[30692] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("clac-test.c0: 41.6-41.40: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((S1 != NULL) && (S2 != NULL)) [failure message on stack]
15 00    # vload 0            # S1
15 01    # vload 1            # S2
14 77 F6 # aldc 30710         # s[30710] = "stacks_eq__1 (clac-test.c0: 40.1-41.45)"
B8 00 76 # invokestatic 118   # stacks_eq(S1, S2, "stacks_eq__1 (clac-test.c0: 40.1-41.45)")
36 03    # vstore 3           # _result = stacks_eq(S1, S2, "stacks_eq__1 (clac-test.c0: 40.1-41.45)");
15 03    # vload 3            # _result
B0       # return             # 


#<test_prog>
06                # number of arguments = 6
0A                # number of local variables = 10
00 54             # code length = 84 bytes
14 78 1E # aldc 30750         # s[30750] = "test_prog (clac-test.c0: 50.15-50.26)"
B8 00 14 # invokestatic 20    # queue_new__1("test_prog (clac-test.c0: 50.15-50.26)")
36 07    # vstore 7           # Q = queue_new__1("test_prog (clac-test.c0: 50.15-50.26)");
15 00    # vload 0            # clac_program
15 07    # vload 7            # Q
14 78 44 # aldc 30788         # s[30788] = "test_prog (clac-test.c0: 51.3-51.32)"
B8 00 54 # invokestatic 84    # input_string__1(clac_program, Q, "test_prog (clac-test.c0: 51.3-51.32)")
57       # pop                # (ignore result)
15 02    # vload 2            # initial_stack
14 78 69 # aldc 30825         # s[30825] = "test_prog (clac-test.c0: 52.16-52.48)"
B8 00 75 # invokestatic 117   # stack_from_string__1(initial_stack, "test_prog (clac-test.c0: 52.16-52.48)")
36 08    # vstore 8           # S1 = stack_from_string__1(initial_stack, "test_prog (clac-test.c0: 52.16-52.48)");
15 03    # vload 3            # final_stack
14 78 8F # aldc 30863         # s[30863] = "test_prog (clac-test.c0: 53.16-53.46)"
B8 00 75 # invokestatic 117   # stack_from_string__1(final_stack, "test_prog (clac-test.c0: 53.16-53.46)")
36 09    # vstore 9           # S2 = stack_from_string__1(final_stack, "test_prog (clac-test.c0: 53.16-53.46)");
15 04    # vload 4            # result
15 07    # vload 7            # Q
15 08    # vload 8            # S1
15 01    # vload 1            # ST
14 78 B5 # aldc 30901         # s[30901] = "test_prog (clac-test.c0: 55.17-55.32)"
B8 00 73 # invokestatic 115   # eval(Q, S1, ST, "test_prog (clac-test.c0: 55.17-55.32)")
A0 00 06 # if_cmpne +6        # if (result != eval(Q, S1, ST, "test_prog (clac-test.c0: 55.17-55.32)")) goto <812:then>
A7 00 0D # goto +13           # goto <813:else>
# <812:then>
10 00    # bipush 0           # false
36 06    # vstore 6           # _result = false;
15 06    # vload 6            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <814:endif>
# <813:else>
# <814:endif>
15 08    # vload 8            # S1
15 09    # vload 9            # S2
14 78 DB # aldc 30939         # s[30939] = "test_prog (clac-test.c0: 57.10-57.27)"
B8 00 77 # invokestatic 119   # stacks_eq__1(S1, S2, "test_prog (clac-test.c0: 57.10-57.27)")
36 06    # vstore 6           # _result = stacks_eq__1(S1, S2, "test_prog (clac-test.c0: 57.10-57.27)");
15 06    # vload 6            # _result
B0       # return             # 

00 26             # native count
# native pool
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 02 00 64       # string_join
00 00 00 0B       # readline
00 01 00 65       # string_length
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 3F       # file_closed
00 01 00 41       # file_read
00 01 00 3E       # file_close
00 01 00 40       # file_eof
00 01 00 42       # file_readline
00 01 00 57       # parse_bool
00 02 00 58       # parse_int
00 01 00 56       # num_tokens
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 02 00 59       # parse_ints
00 02 00 00       # args_flag
00 02 00 01       # args_int
00 02 00 03       # args_string
00 00 00 02       # args_parse

